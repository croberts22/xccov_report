{
  "coveredLines": 1049,
  "lineCoverage": 0.05609925664474036,
  "targets": [
    {
      "coveredLines": 79,
      "lineCoverage": 1,
      "files": [
        {
          "coveredLines": 28,
          "lineCoverage": 1,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTimeTests/CommonAlgorithmTests.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 14,
              "executionCount": 2,
              "name": "TurnipTimeTests.CommonAlgorithmTests.setUpWithError() throws -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 18,
              "executionCount": 2,
              "name": "TurnipTimeTests.CommonAlgorithmTests.tearDownWithError() throws -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 9,
              "lineCoverage": 1,
              "lineNumber": 22,
              "executionCount": 1,
              "name": "TurnipTimeTests.CommonAlgorithmTests.testMinimumRate() throws -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 29,
              "executionCount": 1,
              "name": "implicit closure #1 () throws -> Swift.Double in TurnipTimeTests.CommonAlgorithmTests.testMinimumRate() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 29,
              "executionCount": 1,
              "name": "implicit closure #2 () throws -> Swift.Double in TurnipTimeTests.CommonAlgorithmTests.testMinimumRate() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 9,
              "lineCoverage": 1,
              "lineNumber": 32,
              "executionCount": 1,
              "name": "TurnipTimeTests.CommonAlgorithmTests.testMinimumRateZeroValues() throws -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 39,
              "executionCount": 1,
              "name": "implicit closure #1 () throws -> Swift.Double in TurnipTimeTests.CommonAlgorithmTests.testMinimumRateZeroValues() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 39,
              "executionCount": 1,
              "name": "implicit closure #2 () throws -> Swift.Double in TurnipTimeTests.CommonAlgorithmTests.testMinimumRateZeroValues() throws -> ()",
              "executableLines": 1
            }
          ],
          "name": "CommonAlgorithmTests.swift",
          "executableLines": 28
        },
        {
          "coveredLines": 42,
          "lineCoverage": 1,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTimeTests/DayTests.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 14,
              "executionCount": 2,
              "name": "TurnipTimeTests.DayTests.setUpWithError() throws -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 18,
              "executionCount": 2,
              "name": "TurnipTimeTests.DayTests.tearDownWithError() throws -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 14,
              "lineCoverage": 1,
              "lineNumber": 22,
              "executionCount": 1,
              "name": "TurnipTimeTests.DayTests.testDayIndicies() throws -> ()",
              "executableLines": 14
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 28,
              "executionCount": 7,
              "name": "implicit closure #1 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 28,
              "executionCount": 7,
              "name": "implicit closure #2 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 29,
              "executionCount": 7,
              "name": "implicit closure #3 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 29,
              "executionCount": 7,
              "name": "implicit closure #4 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 14,
              "lineCoverage": 1,
              "lineNumber": 37,
              "executionCount": 1,
              "name": "TurnipTimeTests.DayTests.testDayPeriodIndicies() throws -> ()",
              "executableLines": 14
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 43,
              "executionCount": 7,
              "name": "implicit closure #1 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayPeriodIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 43,
              "executionCount": 7,
              "name": "implicit closure #2 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayPeriodIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 44,
              "executionCount": 7,
              "name": "implicit closure #3 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayPeriodIndicies() throws -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 44,
              "executionCount": 7,
              "name": "implicit closure #4 () throws -> Swift.Int in TurnipTimeTests.DayTests.testDayPeriodIndicies() throws -> ()",
              "executableLines": 1
            }
          ],
          "name": "DayTests.swift",
          "executableLines": 42
        },
        {
          "coveredLines": 9,
          "lineCoverage": 1,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTimeTests/RandomAlgorithmTests.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 16,
              "executionCount": 1,
              "name": "TurnipTimeTests.RandomAlgorithmTests.setUpWithError() throws -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 20,
              "executionCount": 1,
              "name": "TurnipTimeTests.RandomAlgorithmTests.tearDownWithError() throws -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 24,
              "executionCount": 1,
              "name": "TurnipTimeTests.RandomAlgorithmTests.testDayIndicies() throws -> ()",
              "executableLines": 3
            }
          ],
          "name": "RandomAlgorithmTests.swift",
          "executableLines": 9
        }
      ],
      "name": "TurnipTimeTests.xctest",
      "executableLines": 79,
      "buildProductPath": "/Users/spacepyro/Projects/TurnipTime/build/Build/Products/Debug-iphonesimulator/TurnipTime.app/PlugIns/TurnipTimeTests.xctest/TurnipTimeTests"
    },
    {
      "coveredLines": 0,
      "lineCoverage": 0,
      "files": [
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/AxisRendererBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.init(viewPortHandler: Charts.ViewPortHandler, transformer: Swift.Optional<Charts.Transformer>, axis: Swift.Optional<Charts.AxisBase>) -> Charts.AxisRendererBase",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.AxisRendererBase.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.renderGridLines(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.AxisRendererBase.renderGridLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.AxisRendererBase.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.AxisRendererBase.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.AxisRendererBase.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "Charts.AxisRendererBase.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 127
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.AxisRendererBase.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.AxisRendererBase.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 162,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.AxisRendererBase.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 169,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.AxisRendererBase.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 1
            }
          ],
          "name": "AxisRendererBase.swift",
          "executableLines": 180
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Formatters/DefaultValueFormatter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.formatter.getter : Swift.Optional<__C.NSNumberFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.formatter.setter : Swift.Optional<__C.NSNumberFormatter>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.decimals.getter : Swift.Optional<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.decimals.setter : Swift.Optional<Swift.Int>",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.init() -> Charts.DefaultValueFormatter",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.init(formatter: __C.NSNumberFormatter) -> Charts.DefaultValueFormatter",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.init(decimals: Swift.Int) -> Charts.DefaultValueFormatter",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.init(block: (Swift.Double, Charts.ChartDataEntry, Swift.Int, Swift.Optional<Charts.ViewPortHandler>) -> Swift.String) -> Charts.DefaultValueFormatter",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 88,
              "executionCount": 0,
              "name": "static Charts.DefaultValueFormatter.with(block: (Swift.Double, Charts.ChartDataEntry, Swift.Int, Swift.Optional<Charts.ViewPortHandler>) -> Swift.String) -> Swift.Optional<Charts.DefaultValueFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 96,
              "executionCount": 0,
              "name": "Charts.DefaultValueFormatter.stringForValue(_: Swift.Double, entry: Charts.ChartDataEntry, dataSetIndex: Swift.Int, viewPortHandler: Swift.Optional<Charts.ViewPortHandler>) -> Swift.String",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.DefaultValueFormatter.stringForValue(_: Swift.Double, entry: Charts.ChartDataEntry, dataSetIndex: Swift.Int, viewPortHandler: Swift.Optional<Charts.ViewPortHandler>) -> Swift.String",
              "executableLines": 1
            }
          ],
          "name": "DefaultValueFormatter.swift",
          "executableLines": 51
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Filters/DataApproximator+N.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 15,
              "executionCount": 0,
              "name": "(extension in Charts):__C.CGPoint.(distanceToLine in _35CAD2F96B83BFC8E7052E13186FFBAD)(from: __C.CGPoint, to: __C.CGPoint) -> CoreGraphics.CGFloat",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD).init(start: Swift.Int, end: Swift.Int, points: Swift.Array<__C.CGPoint>) -> Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "static Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD).== infix(Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD), Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD).== infix(Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD), Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in static Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD).== infix(Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD), Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "static Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD).< infix(Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD), Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "static Charts.DataApproximator.reduceWithDouglasPeukerN(_: Swift.Array<__C.CGPoint>, resultCount: Swift.Int) -> Swift.Array<__C.CGPoint>",
              "executableLines": 50
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 74,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.DataApproximator.reduceWithDouglasPeukerN(_: Swift.Array<__C.CGPoint>, resultCount: Swift.Int) -> Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 116,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int, __C.CGPoint) -> Swift.Optional<__C.CGPoint> in static Charts.DataApproximator.reduceWithDouglasPeukerN(_: Swift.Array<__C.CGPoint>, resultCount: Swift.Int) -> Swift.Array<__C.CGPoint>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "static Charts.DataApproximator.(insertLine in _35CAD2F96B83BFC8E7052E13186FFBAD)(_: Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD), into: inout Swift.Array<Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 129,
              "executionCount": 0,
              "name": "static Charts.DataApproximator.(insertionIndex in _35CAD2F96B83BFC8E7052E13186FFBAD)(for: Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD), into: inout Swift.Array<Charts.(LineAlt in _35CAD2F96B83BFC8E7052E13186FFBAD)>) -> Swift.Int",
              "executableLines": 22
            }
          ],
          "name": "DataApproximator+N.swift",
          "executableLines": 119
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/TransformerHorizontalBarChart.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.TransformerHorizontalBarChart.prepareMatrixOffset(inverted: Swift.Bool) -> ()",
              "executableLines": 12
            }
          ],
          "name": "TransformerHorizontalBarChart.swift",
          "executableLines": 12
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/PieChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_circleBox in _BFBF5890029F0A8D370EC4D1E79C4EAC) : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_drawAngles in _BFBF5890029F0A8D370EC4D1E79C4EAC) : Swift.Array<CoreGraphics.CGFloat>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_absoluteAngles in _BFBF5890029F0A8D370EC4D1E79C4EAC) : Swift.Array<CoreGraphics.CGFloat>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_holeColor in _BFBF5890029F0A8D370EC4D1E79C4EAC) : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_entryLabelColor in _BFBF5890029F0A8D370EC4D1E79C4EAC) : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_entryLabelFont in _BFBF5890029F0A8D370EC4D1E79C4EAC) : Swift.Optional<__C.UIFont>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_centerTextOffset in _BFBF5890029F0A8D370EC4D1E79C4EAC) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_holeRadiusPercent in _BFBF5890029F0A8D370EC4D1E79C4EAC) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 66,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_transparentCircleColor in _BFBF5890029F0A8D370EC4D1E79C4EAC) : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 69,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartView.(_transparentCircleRadiusPercent in _BFBF5890029F0A8D370EC4D1E79C4EAC) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "Charts.PieChartView.init(frame: __C.CGRect) -> Charts.PieChartView",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "Charts.PieChartView.init(coder: __C.NSCoder) -> Swift.Optional<Charts.PieChartView>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "Charts.PieChartView.initialize() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "Charts.PieChartView.draw(__C.CGRect) -> ()",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 133,
              "executionCount": 0,
              "name": "Charts.PieChartView.calculateOffsets() -> ()",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 146,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.PieChartView.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 156,
              "executionCount": 0,
              "name": "Charts.PieChartView.calcMinMax() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 161,
              "executionCount": 0,
              "name": "Charts.PieChartView.getMarkerPosition(highlight: Charts.Highlight) -> __C.CGPoint",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 190,
              "executionCount": 0,
              "name": "Charts.PieChartView.(calcAngles in _BFBF5890029F0A8D370EC4D1E79C4EAC)() -> ()",
              "executableLines": 36
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 229,
              "executionCount": 0,
              "name": "Charts.PieChartView.needsHighlight(index: Swift.Int) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 230,
              "executionCount": 0,
              "name": "closure #1 (Charts.Highlight) -> Swift.Bool in Charts.PieChartView.needsHighlight(index: Swift.Int) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 235,
              "executionCount": 0,
              "name": "Charts.PieChartView.(calcAngle in _BFBF5890029F0A8D370EC4D1E79C4EAC)(Swift.Double) -> CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 241,
              "executionCount": 0,
              "name": "Charts.PieChartView.(calcAngle in _BFBF5890029F0A8D370EC4D1E79C4EAC)(value: Swift.Double, yValueSum: Swift.Double) -> CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 247,
              "executionCount": 0,
              "name": "Charts.PieChartView.xAxis.getter : Charts.XAxis",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 248,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.PieChartView.xAxis.getter : Charts.XAxis",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 252,
              "executionCount": 0,
              "name": "Charts.PieChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 256,
              "executionCount": 0,
              "name": "closure #1 (CoreGraphics.CGFloat) -> Swift.Bool in Charts.PieChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 256,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.PieChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 261,
              "executionCount": 0,
              "name": "Charts.PieChartView.dataSetIndexForIndex(Swift.Double) -> Swift.Int",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 263,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.PieChartView.dataSetIndexForIndex(Swift.Double) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 265,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.PieChartView.dataSetIndexForIndex(Swift.Double) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 272,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawAngles.getter : Swift.Array<CoreGraphics.CGFloat>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 279,
              "executionCount": 0,
              "name": "Charts.PieChartView.absoluteAngles.getter : Swift.Array<CoreGraphics.CGFloat>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 289,
              "executionCount": 0,
              "name": "Charts.PieChartView.holeColor.getter : Swift.Optional<__C.UIColor>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 293,
              "executionCount": 0,
              "name": "Charts.PieChartView.holeColor.setter : Swift.Optional<__C.UIColor>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 305,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawSlicesUnderHoleEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 309,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawSlicesUnderHoleEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 317,
              "executionCount": 0,
              "name": "Charts.PieChartView.isDrawSlicesUnderHoleEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 325,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawHoleEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 329,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawHoleEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 339,
              "executionCount": 0,
              "name": "Charts.PieChartView.isDrawHoleEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 348,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerText.getter : Swift.Optional<Swift.String>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 352,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerText.setter : Swift.Optional<Swift.String>",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 379,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerAttributedText.getter : Swift.Optional<__C.NSAttributedString>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 383,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerAttributedText.setter : Swift.Optional<__C.NSAttributedString>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 393,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerTextOffset.getter : __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 397,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerTextOffset.setter : __C.CGPoint",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 407,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawCenterTextEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 411,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawCenterTextEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 421,
              "executionCount": 0,
              "name": "Charts.PieChartView.isDrawCenterTextEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 427,
              "executionCount": 0,
              "name": "Charts.PieChartView.requiredLegendOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 432,
              "executionCount": 0,
              "name": "Charts.PieChartView.requiredBaseOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 437,
              "executionCount": 0,
              "name": "Charts.PieChartView.radius.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 443,
              "executionCount": 0,
              "name": "Charts.PieChartView.circleBox.getter : __C.CGRect",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 449,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerCircleBox.getter : __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 459,
              "executionCount": 0,
              "name": "Charts.PieChartView.holeRadiusPercent.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 463,
              "executionCount": 0,
              "name": "Charts.PieChartView.holeRadiusPercent.setter : CoreGraphics.CGFloat",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 475,
              "executionCount": 0,
              "name": "Charts.PieChartView.transparentCircleColor.getter : Swift.Optional<__C.UIColor>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 479,
              "executionCount": 0,
              "name": "Charts.PieChartView.transparentCircleColor.setter : Swift.Optional<__C.UIColor>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 491,
              "executionCount": 0,
              "name": "Charts.PieChartView.transparentCircleRadiusPercent.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 495,
              "executionCount": 0,
              "name": "Charts.PieChartView.transparentCircleRadiusPercent.setter : CoreGraphics.CGFloat",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 504,
              "executionCount": 0,
              "name": "Charts.PieChartView.entryLabelColor.getter : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 506,
              "executionCount": 0,
              "name": "Charts.PieChartView.entryLabelColor.setter : Swift.Optional<__C.UIColor>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 515,
              "executionCount": 0,
              "name": "Charts.PieChartView.entryLabelFont.getter : Swift.Optional<__C.UIFont>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 517,
              "executionCount": 0,
              "name": "Charts.PieChartView.entryLabelFont.setter : Swift.Optional<__C.UIFont>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 527,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawEntryLabelsEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 531,
              "executionCount": 0,
              "name": "Charts.PieChartView.drawEntryLabelsEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 541,
              "executionCount": 0,
              "name": "Charts.PieChartView.isDrawEntryLabelsEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 550,
              "executionCount": 0,
              "name": "Charts.PieChartView.usePercentValuesEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 554,
              "executionCount": 0,
              "name": "Charts.PieChartView.usePercentValuesEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 564,
              "executionCount": 0,
              "name": "Charts.PieChartView.isUsePercentValuesEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 573,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerTextRadiusPercent.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 577,
              "executionCount": 0,
              "name": "Charts.PieChartView.centerTextRadiusPercent.setter : CoreGraphics.CGFloat",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 589,
              "executionCount": 0,
              "name": "Charts.PieChartView.maxAngle.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 593,
              "executionCount": 0,
              "name": "Charts.PieChartView.maxAngle.setter : CoreGraphics.CGFloat",
              "executableLines": 13
            }
          ],
          "name": "PieChartView.swift",
          "executableLines": 344
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/PieChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "Charts.PieChartData.init() -> Charts.PieChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.PieChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.PieChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.PieChartData.dataSets.getter : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.Bool in Charts.PieChartData.dataSets.getter : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "implicit closure #2 () -> Swift.String in Charts.PieChartData.dataSets.getter : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.PieChartData.dataSets.setter : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.PieChartData.dataSet.getter : Swift.Optional<Charts.IPieChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "Charts.PieChartData.dataSet.setter : Swift.Optional<Charts.IPieChartDataSet>",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "Charts.PieChartData.getDataSetByIndex(Swift.Int) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 69,
              "executionCount": 0,
              "name": "Charts.PieChartData.getDataSetByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartData.getDataSetByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 93,
              "executionCount": 0,
              "name": "Charts.PieChartData.entryForHighlight(Charts.Highlight) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "Charts.PieChartData.addDataSet(Swift.Optional<Charts.IChartDataSet>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 107,
              "executionCount": 0,
              "name": "Charts.PieChartData.removeDataSetByIndex(Swift.Int) -> Swift.Bool",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartData.removeDataSetByIndex(Swift.Int) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 118,
              "executionCount": 0,
              "name": "Charts.PieChartData.yValueSum.getter : Swift.Double",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 120,
              "executionCount": 0,
              "name": "closure #1 (inout Swift.Double, Swift.Int) -> () in Charts.PieChartData.yValueSum.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 121,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in closure #1 (inout Swift.Double, Swift.Int) -> () in Charts.PieChartData.yValueSum.getter : Swift.Double",
              "executableLines": 1
            }
          ],
          "name": "PieChartData.swift",
          "executableLines": 83
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Jobs/MoveViewJob.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.MoveViewJob.doJob() -> ()",
              "executableLines": 15
            }
          ],
          "name": "MoveViewJob.swift",
          "executableLines": 15
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/SquareShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.SquareShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 41
            }
          ],
          "name": "SquareShapeRenderer.swift",
          "executableLines": 41
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/PieChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.init(chart: Charts.PieChartView, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.PieChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 61,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.calculateMinimumRadiusForSpacedSlice(center: __C.CGPoint, radius: CoreGraphics.CGFloat, angle: CoreGraphics.CGFloat, arcStartPointX: CoreGraphics.CGFloat, arcStartPointY: CoreGraphics.CGFloat, startAngle: CoreGraphics.CGFloat, sweepAngle: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 32
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 96,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.getSliceSpace(dataSet: Charts.IPieChartDataSet) -> CoreGraphics.CGFloat",
              "executableLines": 15
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 113,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 176
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 150,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.String in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.String in implicit closure #3 () throws -> Swift.String in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.String in implicit closure #4 () throws -> Swift.String in implicit closure #3 () throws -> Swift.String in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 172,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 197,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> Swift.Bool in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 197,
              "executionCount": 0,
              "name": "implicit closure #8 () throws -> Swift.Bool in implicit closure #7 () throws -> Swift.Bool in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 216,
              "executionCount": 0,
              "name": "implicit closure #9 () throws -> Swift.Bool in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 273,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.PieChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IPieChartDataSet) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 291,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 300
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 338,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 338,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 389,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 390,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 391,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 392,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 397,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 430,
              "executionCount": 0,
              "name": "implicit closure #8 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 466,
              "executionCount": 0,
              "name": "implicit closure #9 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 476,
              "executionCount": 0,
              "name": "implicit closure #10 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 484,
              "executionCount": 0,
              "name": "implicit closure #11 () throws -> __C.UIFont in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 485,
              "executionCount": 0,
              "name": "implicit closure #12 () throws -> __C.UIColor in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 491,
              "executionCount": 0,
              "name": "implicit closure #13 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 499,
              "executionCount": 0,
              "name": "implicit closure #14 () throws -> __C.UIFont in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 500,
              "executionCount": 0,
              "name": "implicit closure #15 () throws -> __C.UIColor in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 516,
              "executionCount": 0,
              "name": "implicit closure #16 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 522,
              "executionCount": 0,
              "name": "implicit closure #17 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 532,
              "executionCount": 0,
              "name": "implicit closure #18 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 540,
              "executionCount": 0,
              "name": "implicit closure #19 () throws -> __C.UIFont in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 541,
              "executionCount": 0,
              "name": "implicit closure #20 () throws -> __C.UIColor in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 547,
              "executionCount": 0,
              "name": "implicit closure #21 () throws -> Swift.Bool in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 555,
              "executionCount": 0,
              "name": "implicit closure #22 () throws -> __C.UIFont in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 556,
              "executionCount": 0,
              "name": "implicit closure #23 () throws -> __C.UIColor in Charts.PieChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 593,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 600,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.(drawHole in _962234F85293BDAFDE00083F287DFE37)(context: __C.CGContextRef) -> ()",
              "executableLines": 53
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 625,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartRenderer.(drawHole in _962234F85293BDAFDE00083F287DFE37)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 656,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.(drawCenterText in _962234F85293BDAFDE00083F287DFE37)(context: __C.CGContextRef) -> ()",
              "executableLines": 46
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 662,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartRenderer.(drawCenterText in _962234F85293BDAFDE00083F287DFE37)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 666,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.PieChartRenderer.(drawCenterText in _962234F85293BDAFDE00083F287DFE37)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 704,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 188
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 722,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 767,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 769,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> __C.CGColorRef in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 815,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 815,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in implicit closure #4 () throws -> Swift.Bool in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 827,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 876,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.PieChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 898,
              "executionCount": 0,
              "name": "Charts.PieChartRenderer.(createAccessibleElement in _962234F85293BDAFDE00083F287DFE37)(withIndex: Swift.Int, container: Charts.PieChartView, dataSet: Charts.IPieChartDataSet, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 36
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 925,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.PieChartRenderer.(createAccessibleElement in _962234F85293BDAFDE00083F287DFE37)(withIndex: Swift.Int, container: Charts.PieChartView, dataSet: Charts.IPieChartDataSet, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 925,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in implicit closure #1 () throws -> Swift.String in Charts.PieChartRenderer.(createAccessibleElement in _962234F85293BDAFDE00083F287DFE37)(withIndex: Swift.Int, container: Charts.PieChartView, dataSet: Charts.IPieChartDataSet, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 926,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.String in Charts.PieChartRenderer.(createAccessibleElement in _962234F85293BDAFDE00083F287DFE37)(withIndex: Swift.Int, container: Charts.PieChartView, dataSet: Charts.IPieChartDataSet, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            }
          ],
          "name": "PieChartRenderer.swift",
          "executableLines": 924
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/ChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.init() -> Charts.ChartDataSet",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.init(label: Swift.Optional<Swift.String>) -> Charts.ChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.ChartDataSet",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Array<Charts.ChartDataEntry> in Charts.ChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.ChartDataSet",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>) -> Charts.ChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.values.getter : Swift.Array<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.replaceEntries(Swift.Array<Charts.ChartDataEntry>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartDataSet._yMax : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartDataSet._yMin : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 83,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartDataSet._xMax : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 86,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartDataSet._xMin : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.calcMinMax() -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.calcMinMaxY(fromX: Swift.Double, toX: Swift.Double) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 116,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.calcMinMaxX(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 128,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.calcMinMaxY(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 144,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.calcMinMax(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 150,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.yMin.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 153,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.yMax.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 156,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.xMin.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 159,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.xMax.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 163,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entryCount.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 170,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entryForIndex(Swift.Int) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 188,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entryForXValue(_: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 206,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entryForXValue(_: Swift.Double, closestToY: Swift.Double) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entriesForXValue(Swift.Double) -> Swift.Array<Charts.ChartDataEntry>",
              "executableLines": 54
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 227,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartDataSet.entriesForXValue(Swift.Double) -> Swift.Array<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 278,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entryIndex(x: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Int",
              "executableLines": 97
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 329,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartDataSet.entryIndex(x: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 337,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.ChartDataSet.entryIndex(x: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 346,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.ChartDataSet.entryIndex(x: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 381,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.entryIndex(entry: Charts.ChartDataEntry) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 382,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.ChartDataSet.entryIndex(entry: Charts.ChartDataEntry) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 394,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.addEntry(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 407,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.addEntryOrdered(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 429,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeEntry(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 440,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.remove(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 451,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeFirst() -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 461,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeLast() -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 469,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.clear() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 478,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 496,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.startIndex.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 500,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.endIndex.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 504,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.index(after: Swift.Int) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 510,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.subscript.getter : (Swift.Int) -> Charts.ChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 515,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.subscript.setter : (Swift.Int) -> Charts.ChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 524,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.index(before: Swift.Int) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 531,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.append(Charts.ChartDataEntry) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 536,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.remove(at: Swift.Int) -> Charts.ChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 542,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeFirst() -> Charts.ChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 548,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeFirst(Swift.Int) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 553,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeLast() -> Charts.ChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 559,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeLast(Swift.Int) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 564,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeSubrange<A where A: Swift.RangeExpression, A.Bound == Swift.Int>(A) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 570,
              "executionCount": 0,
              "name": "Charts.ChartDataSet.removeAll(keepingCapacity: Swift.Bool) -> ()",
              "executableLines": 4
            }
          ],
          "name": "ChartDataSet.swift",
          "executableLines": 365
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/LineChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.init(dataProvider: Charts.LineChartDataProvider, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.LineChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.LineChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet) -> ()",
              "executableLines": 36
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawCubicBezier(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet) -> ()",
              "executableLines": 90
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawHorizontalBezier(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet) -> ()",
              "executableLines": 65
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 255,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawCubicFill(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet, spline: __C.CGMutablePathRef, matrix: __C.CGAffineTransform, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds) -> ()",
              "executableLines": 30
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 265,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.LineChartRenderer.drawCubicFill(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet, spline: __C.CGMutablePathRef, matrix: __C.CGAffineTransform, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 267,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Double in Charts.LineChartRenderer.drawCubicFill(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet, spline: __C.CGMutablePathRef, matrix: __C.CGAffineTransform, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 268,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Double in Charts.LineChartRenderer.drawCubicFill(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet, spline: __C.CGMutablePathRef, matrix: __C.CGAffineTransform, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 286,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartRenderer.(_lineSegments in _E2D8D44B88C9349B6643B50EDA26A8FC) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 289,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawLinear(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet) -> ()",
              "executableLines": 90
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 305,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.LineChartRenderer.drawLinear(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 381,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawLinearFill(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet, trans: Charts.Transformer, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 386,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.LineChartRenderer.drawLinearFill(context: __C.CGContextRef, dataSet: Charts.ILineChartDataSet, trans: Charts.Transformer, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 402,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.(generateFilledPath in _E2D8D44B88C9349B6643B50EDA26A8FC)(dataSet: Charts.ILineChartDataSet, fillMin: CoreGraphics.CGFloat, bounds: Charts.BarLineScatterCandleBubbleRenderer.XBounds, matrix: __C.CGAffineTransform) -> __C.CGPathRef",
              "executableLines": 40
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 444,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 85
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 497,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.LineChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 531,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 536,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 146
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 567,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 583,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 584,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 586,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 2
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 587,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in implicit closure #4 () throws -> Swift.Bool in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 603,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 621,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 679,
              "executionCount": 0,
              "name": "closure #2 (Swift.Array<Charts.NSUIAccessibilityElement>) -> Swift.Array<Charts.NSUIAccessibilityElement> in Charts.LineChartRenderer.(drawCircles in _E2D8D44B88C9349B6643B50EDA26A8FC)(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 684,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 54
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 742,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.(accessibilityCreateEmptyOrderedElements in _E2D8D44B88C9349B6643B50EDA26A8FC)() -> Swift.Array<Swift.Array<Charts.NSUIAccessibilityElement>>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 745,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.LineChartRenderer.(accessibilityCreateEmptyOrderedElements in _E2D8D44B88C9349B6643B50EDA26A8FC)() -> Swift.Array<Swift.Array<Charts.NSUIAccessibilityElement>>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 759,
              "executionCount": 0,
              "name": "Charts.LineChartRenderer.(createAccessibleElement in _E2D8D44B88C9349B6643B50EDA26A8FC)(withIndex: Swift.Int, container: Charts.LineChartView, dataSet: Charts.ILineChartDataSet, dataSetIndex: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 769,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.LineChartRenderer.(createAccessibleElement in _E2D8D44B88C9349B6643B50EDA26A8FC)(withIndex: Swift.Int, container: Charts.LineChartView, dataSet: Charts.ILineChartDataSet, dataSetIndex: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 774,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in Charts.LineChartRenderer.(createAccessibleElement in _E2D8D44B88C9349B6643B50EDA26A8FC)(withIndex: Swift.Int, container: Charts.LineChartView, dataSet: Charts.ILineChartDataSet, dataSetIndex: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 776,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Int in Charts.LineChartRenderer.(createAccessibleElement in _E2D8D44B88C9349B6643B50EDA26A8FC)(withIndex: Swift.Int, container: Charts.LineChartView, dataSet: Charts.ILineChartDataSet, dataSetIndex: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 779,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.String in Charts.LineChartRenderer.(createAccessibleElement in _E2D8D44B88C9349B6643B50EDA26A8FC)(withIndex: Swift.Int, container: Charts.LineChartView, dataSet: Charts.ILineChartDataSet, dataSetIndex: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            }
          ],
          "name": "LineChartRenderer.swift",
          "executableLines": 738
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/CandleStickChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.CandleStickChartView.initialize() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "Charts.CandleStickChartView.candleData.getter : Swift.Optional<Charts.CandleChartData>",
              "executableLines": 3
            }
          ],
          "name": "CandleStickChartView.swift",
          "executableLines": 11
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BubbleChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BubbleChartDataSet._maxSize : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataSet.maxSize.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataSet.isNormalizeSizeEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataSet.calcMinMax(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 9
            }
          ],
          "name": "BubbleChartDataSet.swift",
          "executableLines": 25
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/PieChartDataEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init() -> Charts.PieChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double) -> Charts.PieChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, label: Swift.Optional<Swift.String>) -> Charts.PieChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, label: Swift.Optional<Swift.String>, data: Swift.Optional<Any>) -> Charts.PieChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, label: Swift.Optional<Swift.String>, icon: Swift.Optional<__C.UIImage>) -> Charts.PieChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, label: Swift.Optional<Swift.String>, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.PieChartDataEntry",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, data: Swift.Optional<Any>) -> Charts.PieChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, icon: Swift.Optional<__C.UIImage>) -> Charts.PieChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 95,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.init(value: Swift.Double, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.PieChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 107,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.value.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.value.setter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 114,
              "executionCount": 0,
              "name": "Charts.PieChartDataEntry.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 5
            }
          ],
          "name": "PieChartDataEntry.swift",
          "executableLines": 44
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Filters/DataApproximator.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "static Charts.DataApproximator.reduceWithDouglasPeuker(_: Swift.Array<__C.CGPoint>, tolerance: CoreGraphics.CGFloat) -> Swift.Array<__C.CGPoint>",
              "executableLines": 23
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.DataApproximator.reduceWithDouglasPeuker(_: Swift.Array<__C.CGPoint>, tolerance: CoreGraphics.CGFloat) -> Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "closure #1 (Swift.Bool, __C.CGPoint) -> Swift.Optional<__C.CGPoint> in static Charts.DataApproximator.reduceWithDouglasPeuker(_: Swift.Array<__C.CGPoint>, tolerance: CoreGraphics.CGFloat) -> Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "static Charts.DataApproximator.reduceWithDouglasPeuker(points: Swift.Array<__C.CGPoint>, tolerance: CoreGraphics.CGFloat, start: Swift.Int, end: Swift.Int, keep: inout Swift.Array<Swift.Bool>) -> ()",
              "executableLines": 33
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 102,
              "executionCount": 0,
              "name": "Charts.DataApproximator.(Line in _A1F0671EFC8D5C1DDC881232D53501E2).init(pt1: __C.CGPoint, pt2: __C.CGPoint) -> Charts.DataApproximator.(Line in _A1F0671EFC8D5C1DDC881232D53501E2)",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 111,
              "executionCount": 0,
              "name": "Charts.DataApproximator.(Line in _A1F0671EFC8D5C1DDC881232D53501E2).distance(toPoint: __C.CGPoint) -> CoreGraphics.CGFloat",
              "executableLines": 3
            }
          ],
          "name": "DataApproximator.swift",
          "executableLines": 68
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/BubbleChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.BubbleChartView.initialize() -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "Charts.BubbleChartView.bubbleData.getter : Swift.Optional<Charts.BubbleChartData>",
              "executableLines": 1
            }
          ],
          "name": "BubbleChartView.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Formatters/DefaultFillFormatter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.DefaultFillFormatter.init() -> Charts.DefaultFillFormatter",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.DefaultFillFormatter.init(block: (Charts.ILineChartDataSet, Charts.LineChartDataProvider) -> CoreGraphics.CGFloat) -> Charts.DefaultFillFormatter",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "static Charts.DefaultFillFormatter.with(block: (Charts.ILineChartDataSet, Charts.LineChartDataProvider) -> CoreGraphics.CGFloat) -> Swift.Optional<Charts.DefaultFillFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.DefaultFillFormatter.getFillLinePosition(dataSet: Charts.ILineChartDataSet, dataProvider: Charts.LineChartDataProvider) -> CoreGraphics.CGFloat",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.DefaultFillFormatter.getFillLinePosition(dataSet: Charts.ILineChartDataSet, dataProvider: Charts.LineChartDataProvider) -> CoreGraphics.CGFloat",
              "executableLines": 1
            }
          ],
          "name": "DefaultFillFormatter.swift",
          "executableLines": 26
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/Fill.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Fill.(_type in _CCC0A0FAE51380D4124E5407B6C703C5) : Charts.FillType",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Fill.(_gradientStartOffsetPercent in _CCC0A0FAE51380D4124E5407B6C703C5) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Fill.(_gradientEndOffsetPercent in _CCC0A0FAE51380D4124E5407B6C703C5) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.Fill.type.getter : Charts.FillType",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.Fill.color.getter : Swift.Optional<__C.CGColorRef>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "Charts.Fill.gradient.getter : Swift.Optional<__C.CGGradientRef>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "Charts.Fill.gradientAngle.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "Charts.Fill.gradientStartOffsetPercent.getter : __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 69,
              "executionCount": 0,
              "name": "Charts.Fill.gradientStartRadiusPercent.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 74,
              "executionCount": 0,
              "name": "Charts.Fill.gradientEndOffsetPercent.getter : __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 79,
              "executionCount": 0,
              "name": "Charts.Fill.gradientEndRadiusPercent.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 84,
              "executionCount": 0,
              "name": "Charts.Fill.image.getter : Swift.Optional<__C.CGImageRef>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "Charts.Fill.layer.getter : Swift.Optional<__C.CGLayerRef>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 96,
              "executionCount": 0,
              "name": "Charts.Fill.init() -> Charts.Fill",
              "executableLines": 2
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "Charts.Fill.init(CGColor: __C.CGColorRef) -> Charts.Fill",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 106,
              "executionCount": 0,
              "name": "Charts.Fill.init(color: __C.UIColor) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 111,
              "executionCount": 0,
              "name": "Charts.Fill.init(linearGradient: __C.CGGradientRef, angle: CoreGraphics.CGFloat) -> Charts.Fill",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "Charts.Fill.init(radialGradient: __C.CGGradientRef, startOffsetPercent: __C.CGPoint, startRadiusPercent: CoreGraphics.CGFloat, endOffsetPercent: __C.CGPoint, endRadiusPercent: CoreGraphics.CGFloat) -> Charts.Fill",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 134,
              "executionCount": 0,
              "name": "Charts.Fill.init(radialGradient: __C.CGGradientRef) -> Charts.Fill",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 145,
              "executionCount": 0,
              "name": "Charts.Fill.init(CGImage: __C.CGImageRef, tiled: Swift.Bool) -> Charts.Fill",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "Charts.Fill.init(image: __C.UIImage, tiled: Swift.Bool) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 156,
              "executionCount": 0,
              "name": "Charts.Fill.init(CGImage: __C.CGImageRef) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 161,
              "executionCount": 0,
              "name": "Charts.Fill.init(image: __C.UIImage) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 166,
              "executionCount": 0,
              "name": "Charts.Fill.init(CGLayer: __C.CGLayerRef) -> Charts.Fill",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 174,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithCGColor(__C.CGColorRef) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 179,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithColor(__C.UIColor) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 186,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithLinearGradient(_: __C.CGGradientRef, angle: CoreGraphics.CGFloat) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 197,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithRadialGradient(_: __C.CGGradientRef, startOffsetPercent: __C.CGPoint, startRadiusPercent: CoreGraphics.CGFloat, endOffsetPercent: __C.CGPoint, endRadiusPercent: CoreGraphics.CGFloat) -> Charts.Fill",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 208,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithRadialGradient(__C.CGGradientRef) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithCGImage(_: __C.CGImageRef, tiled: Swift.Bool) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 218,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithImage(_: __C.UIImage, tiled: Swift.Bool) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 223,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithCGImage(__C.CGImageRef) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 228,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithImage(__C.UIImage) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 233,
              "executionCount": 0,
              "name": "static Charts.Fill.fillWithCGLayer(__C.CGLayerRef) -> Charts.Fill",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 243,
              "executionCount": 0,
              "name": "Charts.Fill.fillPath(context: __C.CGContextRef, rect: __C.CGRect) -> ()",
              "executableLines": 79
            }
          ],
          "name": "Fill.swift",
          "executableLines": 196
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/Description.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.Description.init() -> Charts.Description",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Description.textAlign : __C.NSTextAlignment",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Description.textColor : __C.UIColor",
              "executableLines": 1
            }
          ],
          "name": "Description.swift",
          "executableLines": 14
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Jobs/AnimatedViewPortJob.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.init(viewPortHandler: Charts.ViewPortHandler, xValue: Swift.Double, yValue: Swift.Double, transformer: Charts.Transformer, view: Charts.ChartViewBase, xOrigin: CoreGraphics.CGFloat, yOrigin: CoreGraphics.CGFloat, duration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> Charts.AnimatedViewPortJob",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.__deallocating_deinit",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.doJob() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.start() -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.stop(finish: Swift.Bool) -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 94,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.(updateAnimationPhase in _848B983708268F36AE216F82D69A7973)(Swift.Double) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.AnimatedViewPortJob.(updateAnimationPhase in _848B983708268F36AE216F82D69A7973)(Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 105,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.(animationLoop in _848B983708268F36AE216F82D69A7973)() -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.animationUpdate() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "Charts.AnimatedViewPortJob.animationEnd() -> ()",
              "executableLines": 3
            }
          ],
          "name": "AnimatedViewPortJob.swift",
          "executableLines": 73
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/CombinedChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.initialize() -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.data.getter : Swift.Optional<Charts.ChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.data.setter : Swift.Optional<Charts.ChartData>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 66,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.fillFormatter.getter : Charts.IFillFormatter",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.fillFormatter.setter : Charts.IFillFormatter",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.getHighlightByTouchPoint(__C.CGPoint) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.combinedData.getter : Swift.Optional<Charts.CombinedChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 118,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.lineData.getter : Swift.Optional<Charts.LineChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 128,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.barData.getter : Swift.Optional<Charts.BarChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 138,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.scatterData.getter : Swift.Optional<Charts.ScatterChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 148,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.candleData.getter : Swift.Optional<Charts.CandleChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.bubbleData.getter : Swift.Optional<Charts.BubbleChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 168,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawValueAboveBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 169,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawValueAboveBarEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 175,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawBarShadowEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 176,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawBarShadowEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 180,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.isDrawValueAboveBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.isDrawBarShadowEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 191,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawOrder.getter : Swift.Array<Swift.Int>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 192,
              "executionCount": 0,
              "name": "closure #1 (Charts.CombinedChartView.DrawOrder) -> Swift.Int in Charts.CombinedChartView.drawOrder.getter : Swift.Array<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 195,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawOrder.setter : Swift.Array<Swift.Int>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 196,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int) -> Charts.CombinedChartView.DrawOrder in Charts.CombinedChartView.drawOrder.setter : Swift.Array<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 204,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.isHighlightFullBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 210,
              "executionCount": 0,
              "name": "Charts.CombinedChartView.drawMarkers(context: __C.CGContextRef) -> ()",
              "executableLines": 36
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.CombinedChartView.drawMarkers(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            }
          ],
          "name": "CombinedChartView.swift",
          "executableLines": 124
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/ComponentBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ComponentBase.xOffset : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ComponentBase.yOffset : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "Charts.ComponentBase.init() -> Charts.ComponentBase",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "Charts.ComponentBase.isEnabled.getter : Swift.Bool",
              "executableLines": 1
            }
          ],
          "name": "ComponentBase.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Jobs/ZoomViewJob.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ZoomViewJob.axisDependency : Charts.YAxis.AxisDependency",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "Charts.ZoomViewJob.init(viewPortHandler: Charts.ViewPortHandler, scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, xValue: Swift.Double, yValue: Swift.Double, transformer: Charts.Transformer, axis: Charts.YAxis.AxisDependency, view: Charts.ChartViewBase) -> Charts.ZoomViewJob",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "Charts.ZoomViewJob.doJob() -> ()",
              "executableLines": 26
            }
          ],
          "name": "ZoomViewJob.swift",
          "executableLines": 39
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/ChartLimitLine.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.limit : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.(_lineWidth in _40D80DCD74802571A57588F9F35AF77B) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.lineColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.lineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.valueTextColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.valueFont : __C.UIFont",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartLimitLine.labelPosition : Charts.ChartLimitLine.LabelPosition",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "Charts.ChartLimitLine.init() -> Charts.ChartLimitLine",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "Charts.ChartLimitLine.init(limit: Swift.Double) -> Charts.ChartLimitLine",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.ChartLimitLine.init(limit: Swift.Double, label: Swift.String) -> Charts.ChartLimitLine",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 66,
              "executionCount": 0,
              "name": "Charts.ChartLimitLine.lineWidth.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.ChartLimitLine.lineWidth.setter : CoreGraphics.CGFloat",
              "executableLines": 3
            }
          ],
          "name": "ChartLimitLine.swift",
          "executableLines": 25
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/Highlight.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_x in _B1F814C6C2947B140F57E0F1ACB24F50) : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_y in _B1F814C6C2947B140F57E0F1ACB24F50) : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_xPx in _B1F814C6C2947B140F57E0F1ACB24F50) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_yPx in _B1F814C6C2947B140F57E0F1ACB24F50) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.dataIndex : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_dataSetIndex in _B1F814C6C2947B140F57E0F1ACB24F50) : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_stackIndex in _B1F814C6C2947B140F57E0F1ACB24F50) : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Highlight.(_axis in _B1F814C6C2947B140F57E0F1ACB24F50) : Charts.YAxis.AxisDependency",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "Charts.Highlight.init() -> Charts.Highlight",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "Charts.Highlight.init(x: Swift.Double, y: Swift.Double, xPx: CoreGraphics.CGFloat, yPx: CoreGraphics.CGFloat, dataIndex: Swift.Int, dataSetIndex: Swift.Int, stackIndex: Swift.Int, axis: Charts.YAxis.AxisDependency) -> Charts.Highlight",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "Charts.Highlight.init(x: Swift.Double, y: Swift.Double, xPx: CoreGraphics.CGFloat, yPx: CoreGraphics.CGFloat, dataSetIndex: Swift.Int, stackIndex: Swift.Int, axis: Charts.YAxis.AxisDependency) -> Charts.Highlight",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 120,
              "executionCount": 0,
              "name": "Charts.Highlight.init(x: Swift.Double, y: Swift.Double, xPx: CoreGraphics.CGFloat, yPx: CoreGraphics.CGFloat, dataSetIndex: Swift.Int, axis: Charts.YAxis.AxisDependency) -> Charts.Highlight",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 137,
              "executionCount": 0,
              "name": "Charts.Highlight.init(x: Swift.Double, y: Swift.Double, dataSetIndex: Swift.Int, dataIndex: Swift.Int) -> Charts.Highlight",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "Charts.Highlight.init(x: Swift.Double, dataSetIndex: Swift.Int, stackIndex: Swift.Int) -> Charts.Highlight",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 154,
              "executionCount": 0,
              "name": "Charts.Highlight.x.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 155,
              "executionCount": 0,
              "name": "Charts.Highlight.y.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 156,
              "executionCount": 0,
              "name": "Charts.Highlight.xPx.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 157,
              "executionCount": 0,
              "name": "Charts.Highlight.yPx.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "Charts.Highlight.dataSetIndex.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 159,
              "executionCount": 0,
              "name": "Charts.Highlight.stackIndex.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 160,
              "executionCount": 0,
              "name": "Charts.Highlight.axis.getter : Charts.YAxis.AxisDependency",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 162,
              "executionCount": 0,
              "name": "Charts.Highlight.isStacked.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 166,
              "executionCount": 0,
              "name": "Charts.Highlight.setDraw(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 173,
              "executionCount": 0,
              "name": "Charts.Highlight.setDraw(pt: __C.CGPoint) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 181,
              "executionCount": 0,
              "name": "Charts.Highlight.description.getter : Swift.String",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 189,
              "executionCount": 0,
              "name": "Charts.Highlight.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 198,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Highlight.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 199,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.Highlight.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 200,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.Highlight.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 201,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.Highlight.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 1
            }
          ],
          "name": "Highlight.swift",
          "executableLines": 87
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Formatters/DefaultAxisValueFormatter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.formatter.getter : Swift.Optional<__C.NSNumberFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.formatter.setter : Swift.Optional<__C.NSNumberFormatter>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.decimals.getter : Swift.Optional<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.decimals.setter : Swift.Optional<Swift.Int>",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.init() -> Charts.DefaultAxisValueFormatter",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.init(formatter: __C.NSNumberFormatter) -> Charts.DefaultAxisValueFormatter",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.init(decimals: Swift.Int) -> Charts.DefaultAxisValueFormatter",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.init(block: (Swift.Double, Swift.Optional<Charts.AxisBase>) -> Swift.String) -> Charts.DefaultAxisValueFormatter",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "static Charts.DefaultAxisValueFormatter.with(block: (Swift.Double, Swift.Optional<Charts.AxisBase>) -> Swift.String) -> Swift.Optional<Charts.DefaultAxisValueFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 93,
              "executionCount": 0,
              "name": "Charts.DefaultAxisValueFormatter.stringForValue(_: Swift.Double, axis: Swift.Optional<Charts.AxisBase>) -> Swift.String",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 97,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.DefaultAxisValueFormatter.stringForValue(_: Swift.Double, axis: Swift.Optional<Charts.AxisBase>) -> Swift.String",
              "executableLines": 1
            }
          ],
          "name": "DefaultAxisValueFormatter.swift",
          "executableLines": 51
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/CrossShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.CrossShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 14
            }
          ],
          "name": "CrossShapeRenderer.swift",
          "executableLines": 14
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/YAxisRendererRadarChart.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.YAxisRendererRadarChart.init(viewPortHandler: Charts.ViewPortHandler, yAxis: Swift.Optional<Charts.YAxis>, chart: Charts.RadarChartView) -> Charts.YAxisRendererRadarChart",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.YAxisRendererRadarChart.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 130
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRendererRadarChart.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.YAxisRendererRadarChart.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "Charts.YAxisRendererRadarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 44
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 173,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRendererRadarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "Charts.YAxisRendererRadarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 68
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 260,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.YAxisRendererRadarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            }
          ],
          "name": "YAxisRendererRadarChart.swift",
          "executableLines": 251
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/HorizontalBarChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.initialize() -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 59
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.HorizontalBarChartView.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 84,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.HorizontalBarChartView.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 95,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.calculateOffsets() -> ()",
              "executableLines": 56
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 153,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.prepareValuePxMatrix() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 159,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.getMarkerPosition(highlight: Charts.Highlight) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 164,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.getBarBounds(entry: Charts.BarChartDataEntry) -> __C.CGRect",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 188,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.getPosition(entry: Charts.ChartDataEntry, axis: Charts.YAxis.AxisDependency) -> __C.CGPoint",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 197,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.getHighlightByTouchPoint(__C.CGPoint) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 209,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.lowestVisibleX.getter : Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 221,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.highestVisibleX.getter : Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 234,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.setVisibleXRangeMaximum(Swift.Double) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 240,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.setVisibleXRangeMinimum(Swift.Double) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 246,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.setVisibleXRange(minXRange: Swift.Double, maxXRange: Swift.Double) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 253,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.setVisibleYRangeMaximum(_: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 259,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.setVisibleYRangeMinimum(_: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 265,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartView.setVisibleYRange(minYRange: Swift.Double, maxYRange: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 5
            }
          ],
          "name": "HorizontalBarChartView.swift",
          "executableLines": 219
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/BarChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.init(dataProvider: Charts.BarChartDataProvider, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.BarChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartRenderer.(_buffers in _B1DA9F8F94F55CD815106107021BB63D) : Swift.Array<Charts.BarChartRenderer.(Buffer in _B1DA9F8F94F55CD815106107021BB63D)>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.initBuffers() -> ()",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.(prepareBuffer in _B1DA9F8F94F55CD815106107021BB63D)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 185
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarChartRenderer.(prepareBuffer in _B1DA9F8F94F55CD815106107021BB63D)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 240,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarChartRenderer.(prepareBuffer in _B1DA9F8F94F55CD815106107021BB63D)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 240,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #2 () throws -> Swift.Bool in Charts.BarChartRenderer.(prepareBuffer in _B1DA9F8F94F55CD815106107021BB63D)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 285,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 38
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 312,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.BarChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 320,
              "executionCount": 0,
              "name": "closure #1 (Swift.Array<Charts.NSUIAccessibilityElement>) -> Swift.Array<Charts.NSUIAccessibilityElement> in Charts.BarChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 324,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartRenderer.(_barShadowRectBuffer in _B1DA9F8F94F55CD815106107021BB63D) : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 327,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 134
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 451,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.BarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 469,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.prepareBarHighlight(x: Swift.Double, y1: Swift.Double, y2: Swift.Double, barWidthHalf: Swift.Double, trans: Charts.Transformer, rect: inout __C.CGRect) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 484,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 258
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 548,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 617,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 671,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 671,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in implicit closure #3 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 695,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 695,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 695,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 703,
              "executionCount": 0,
              "name": "implicit closure #8 () throws -> Swift.Bool in Charts.BarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 745,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.drawValue(context: __C.CGContextRef, value: Swift.String, xPos: CoreGraphics.CGFloat, yPos: CoreGraphics.CGFloat, font: __C.UIFont, align: __C.NSTextAlignment, color: __C.UIColor) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 750,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 755,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 65
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 784,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 800,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Double in Charts.BarChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 801,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Double in Charts.BarChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 823,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.setHighlightDrawPos(highlight: Charts.Highlight, barRect: __C.CGRect) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 830,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.accessibilityCreateEmptyOrderedElements() -> Swift.Array<Swift.Array<Charts.NSUIAccessibilityElement>>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 834,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.BarChartRenderer.accessibilityCreateEmptyOrderedElements() -> Swift.Array<Swift.Array<Charts.NSUIAccessibilityElement>>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 849,
              "executionCount": 0,
              "name": "Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 55
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 859,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 865,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 872,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 886,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.String in Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 895,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Int in Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 898,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.String in Charts.BarChartRenderer.createAccessibleElement(withIndex: Swift.Int, container: Charts.BarChartView, dataSet: Charts.IBarChartDataSet, dataSetIndex: Swift.Int, stackSize: Swift.Int, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            }
          ],
          "name": "BarChartRenderer.swift",
          "executableLines": 830
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/CandleChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.init() -> Charts.CandleChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.CandleChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.calcMinMax(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.calcMinMaxY(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleChartDataSet.(_barSpace in _23C9E35645EC711F70AB433BC53B96F1) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.barSpace.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.barSpace.setter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 103,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleChartDataSet.shadowWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 112,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.isShadowColorSameAsCandle.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 128,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.isIncreasingFilled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 135,
              "executionCount": 0,
              "name": "Charts.CandleChartDataSet.isDecreasingFilled.getter : Swift.Bool",
              "executableLines": 1
            }
          ],
          "name": "CandleChartDataSet.swift",
          "executableLines": 55
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/CombinedChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.init() -> Charts.CombinedChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.CombinedChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.lineData.getter : Swift.Optional<Charts.LineChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.lineData.setter : Swift.Optional<Charts.LineChartData>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.barData.getter : Swift.Optional<Charts.BarChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.barData.setter : Swift.Optional<Charts.BarChartData>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 61,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.scatterData.getter : Swift.Optional<Charts.ScatterChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.scatterData.setter : Swift.Optional<Charts.ScatterChartData>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 74,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.candleData.getter : Swift.Optional<Charts.CandleChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.candleData.setter : Swift.Optional<Charts.CandleChartData>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.bubbleData.getter : Swift.Optional<Charts.BubbleChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.bubbleData.setter : Swift.Optional<Charts.BubbleChartData>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.calcMinMax() -> ()",
              "executableLines": 69
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 170,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.allData.getter : Swift.Array<Charts.ChartData>",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 198,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.dataByIndex(Swift.Int) -> Charts.ChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 203,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.dataIndex(Charts.ChartData) -> Swift.Optional<Swift.Int>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 208,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.removeDataSet(Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 209,
              "executionCount": 0,
              "name": "closure #1 (Charts.ChartData) -> Swift.Bool in Charts.CombinedChartData.removeDataSet(Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.removeDataSetByIndex(Swift.Int) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 219,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.removeEntry(_: Charts.ChartDataEntry, dataSetIndex: Swift.Int) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 225,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.removeEntry(xValue: Swift.Double, dataSetIndex: Swift.Int) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 231,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.notifyDataChanged() -> ()",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 262,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.entryForHighlight(Charts.Highlight) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 277,
              "executionCount": 0,
              "name": "closure #1 (Charts.ChartDataEntry) -> Swift.Bool in Charts.CombinedChartData.entryForHighlight(Charts.Highlight) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 277,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in closure #1 (Charts.ChartDataEntry) -> Swift.Bool in Charts.CombinedChartData.entryForHighlight(Charts.Highlight) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 286,
              "executionCount": 0,
              "name": "Charts.CombinedChartData.getDataSetByHighlight(Charts.Highlight) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 15
            }
          ],
          "name": "CombinedChartData.swift",
          "executableLines": 216
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/RadarChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.RadarChartDataSet.(initialize in _1C6AAE980B02E9CD4CD764C017B17BEE)() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "Charts.RadarChartDataSet.init() -> Charts.RadarChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.RadarChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.RadarChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.RadarChartDataSet.isDrawHighlightCircleEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartDataSet.highlightCircleFillColor : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            }
          ],
          "name": "RadarChartDataSet.swift",
          "executableLines": 13
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/HorizontalBarChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.init(dataProvider: Charts.BarChartDataProvider, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.HorizontalBarChartRenderer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.HorizontalBarChartRenderer.(_buffers in _6FD52591A0CD8D20B06AFD8929E97976) : Swift.Array<Charts.HorizontalBarChartRenderer.(Buffer in _6FD52591A0CD8D20B06AFD8929E97976)>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.initBuffers() -> ()",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.(prepareBuffer in _6FD52591A0CD8D20B06AFD8929E97976)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 110
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 99,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.(prepareBuffer in _6FD52591A0CD8D20B06AFD8929E97976)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.(prepareBuffer in _6FD52591A0CD8D20B06AFD8929E97976)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #2 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.(prepareBuffer in _6FD52591A0CD8D20B06AFD8929E97976)(dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.HorizontalBarChartRenderer.(_barShadowRectBuffer in _6FD52591A0CD8D20B06AFD8929E97976) : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 186,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 112
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 288,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.HorizontalBarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IBarChartDataSet, index: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 306,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.prepareBarHighlight(x: Swift.Double, y1: Swift.Double, y2: Swift.Double, barWidthHalf: Swift.Double, trans: Charts.Transformer, rect: inout __C.CGRect) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 321,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 298
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 529,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 529,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 570,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 570,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 570,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.HorizontalBarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 621,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.isDrawingValuesAllowed(dataProvider: Swift.Optional<Charts.ChartDataProvider>) -> Swift.Bool",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 624,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.HorizontalBarChartRenderer.isDrawingValuesAllowed(dataProvider: Swift.Optional<Charts.ChartDataProvider>) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 629,
              "executionCount": 0,
              "name": "Charts.HorizontalBarChartRenderer.setHighlightDrawPos(highlight: Charts.Highlight, barRect: __C.CGRect) -> ()",
              "executableLines": 3
            }
          ],
          "name": "HorizontalBarChartRenderer.swift",
          "executableLines": 589
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/Range.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "Charts.Range.init(from: Swift.Double, to: Swift.Double) -> Charts.Range",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "Charts.Range.contains(Swift.Double) -> Swift.Bool",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Range.contains(Swift.Double) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.Range.isLarger(Swift.Double) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.Range.isSmaller(Swift.Double) -> Swift.Bool",
              "executableLines": 3
            }
          ],
          "name": "Range.swift",
          "executableLines": 23
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/BarHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.BarHighlighter.getHighlight(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.BarHighlighter.getDistance(x1: CoreGraphics.CGFloat, y1: CoreGraphics.CGFloat, x2: CoreGraphics.CGFloat, y2: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "Charts.BarHighlighter.data.getter : Swift.Optional<Charts.ChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.BarHighlighter.getStackedHighlight(high: Charts.Highlight, set: Charts.IBarChartDataSet, xValue: Swift.Double, yValue: Swift.Double) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 30
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 99,
              "executionCount": 0,
              "name": "Charts.BarHighlighter.getClosestStackIndex(ranges: Swift.Optional<Swift.Array<Charts.Range>>, value: Swift.Double) -> Swift.Int",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "closure #1 (Charts.Range) -> Swift.Bool in Charts.BarHighlighter.getClosestStackIndex(ranges: Swift.Optional<Swift.Array<Charts.Range>>, value: Swift.Double) -> Swift.Int",
              "executableLines": 1
            }
          ],
          "name": "BarHighlighter.swift",
          "executableLines": 67
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/ChartDataRendererBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.DataRenderer.accessibleChartElements : Swift.Array<Charts.NSUIAccessibilityElement>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "Charts.DataRenderer.init(animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.DataRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "Charts.DataRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.DataRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "Charts.DataRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.DataRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.DataRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.DataRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "Charts.DataRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.DataRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.DataRenderer.initBuffers() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 73,
              "executionCount": 0,
              "name": "Charts.DataRenderer.isDrawingValuesAllowed(dataProvider: Swift.Optional<Charts.ChartDataProvider>) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.DataRenderer.isDrawingValuesAllowed(dataProvider: Swift.Optional<Charts.ChartDataProvider>) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 88,
              "executionCount": 0,
              "name": "Charts.DataRenderer.createAccessibleHeader(usingChart: Charts.ChartViewBase, andData: Charts.ChartData, withDefaultDescription: Swift.String) -> Charts.NSUIAccessibilityElement",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.DataRenderer.createAccessibleHeader(usingChart: Charts.ChartViewBase, andData: Charts.ChartData, withDefaultDescription: Swift.String) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.String in Charts.DataRenderer.createAccessibleHeader(usingChart: Charts.ChartViewBase, andData: Charts.ChartData, withDefaultDescription: Swift.String) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in closure #1 (Charts.IChartDataSet) -> Swift.String in Charts.DataRenderer.createAccessibleHeader(usingChart: Charts.ChartViewBase, andData: Charts.ChartData, withDefaultDescription: Swift.String) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            }
          ],
          "name": "ChartDataRendererBase.swift",
          "executableLines": 45
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/AxisBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.AxisBase.init() -> Charts.AxisBase",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.labelFont : __C.UIFont",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.labelTextColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.axisLineColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.axisLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.axisLineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.gridColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.gridLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.gridLineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.gridLineCap : __C.CGLineCap",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.AxisBase.centerAxisLabelsEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.AxisBase.centerAxisLabelsEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "Charts.AxisBase.centerAxisLabelsEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "Charts.AxisBase.isCenterAxisLabelsEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.(_limitLines in _F312E521E04C975DC2C386CB4B3FCA0A) : Swift.Array<Charts.ChartLimitLine>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 74,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.entries : Swift.Array<Swift.Double>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.centeredEntries : Swift.Array<Swift.Double>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "Charts.AxisBase.entryCount.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.(_labelCount in _F312E521E04C975DC2C386CB4B3FCA0A) : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 96,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.(_granularity in _F312E521E04C975DC2C386CB4B3FCA0A) : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 105,
              "executionCount": 0,
              "name": "Charts.AxisBase.granularity.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 109,
              "executionCount": 0,
              "name": "Charts.AxisBase.granularity.setter : Swift.Double",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 121,
              "executionCount": 0,
              "name": "Charts.AxisBase.isGranularityEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 130,
              "executionCount": 0,
              "name": "Charts.AxisBase.getLongestLabel() -> Swift.String",
              "executableLines": 15
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 148,
              "executionCount": 0,
              "name": "Charts.AxisBase.getFormattedLabel(Swift.Int) -> Swift.String",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.AxisBase.getFormattedLabel(Swift.Int) -> Swift.String",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 154,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in Charts.AxisBase.getFormattedLabel(Swift.Int) -> Swift.String",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 163,
              "executionCount": 0,
              "name": "Charts.AxisBase.valueFormatter.getter : Swift.Optional<Charts.IAxisValueFormatter>",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 165,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.AxisBase.valueFormatter.getter : Swift.Optional<Charts.IAxisValueFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 166,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.AxisBase.valueFormatter.getter : Swift.Optional<Charts.IAxisValueFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.AxisBase.valueFormatter.getter : Swift.Optional<Charts.IAxisValueFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 175,
              "executionCount": 0,
              "name": "Charts.AxisBase.valueFormatter.setter : Swift.Optional<Charts.IAxisValueFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 176,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Charts.IAxisValueFormatter in Charts.AxisBase.valueFormatter.setter : Swift.Optional<Charts.IAxisValueFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 180,
              "executionCount": 0,
              "name": "Charts.AxisBase.isDrawGridLinesEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 182,
              "executionCount": 0,
              "name": "Charts.AxisBase.isDrawAxisLineEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 184,
              "executionCount": 0,
              "name": "Charts.AxisBase.isDrawLabelsEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 189,
              "executionCount": 0,
              "name": "Charts.AxisBase.isDrawLimitLinesBehindDataEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 206,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase._axisMinimum : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 211,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase._axisMaximum : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 214,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.axisRange : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 217,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.axisMinLabels : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 218,
              "executionCount": 0,
              "name": "Charts.AxisBase.axisMinLabels.didset : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 222,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.AxisBase.axisMaxLabels : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 223,
              "executionCount": 0,
              "name": "Charts.AxisBase.axisMaxLabels.didset : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 234,
              "executionCount": 0,
              "name": "Charts.AxisBase.labelCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 238,
              "executionCount": 0,
              "name": "Charts.AxisBase.labelCount.setter : Swift.Int",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 247,
              "executionCount": 0,
              "name": "Charts.AxisBase.setLabelCount(_: Swift.Int, force: Swift.Bool) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 253,
              "executionCount": 0,
              "name": "Charts.AxisBase.isForceLabelsEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 257,
              "executionCount": 0,
              "name": "Charts.AxisBase.addLimitLine(Charts.ChartLimitLine) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 263,
              "executionCount": 0,
              "name": "Charts.AxisBase.removeLimitLine(Charts.ChartLimitLine) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 270,
              "executionCount": 0,
              "name": "Charts.AxisBase.removeAllLimitLines() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 276,
              "executionCount": 0,
              "name": "Charts.AxisBase.limitLines.getter : Swift.Array<Charts.ChartLimitLine>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 284,
              "executionCount": 0,
              "name": "Charts.AxisBase.resetCustomAxisMin() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 288,
              "executionCount": 0,
              "name": "Charts.AxisBase.isAxisMinCustom.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 292,
              "executionCount": 0,
              "name": "Charts.AxisBase.resetCustomAxisMax() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 296,
              "executionCount": 0,
              "name": "Charts.AxisBase.isAxisMaxCustom.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 304,
              "executionCount": 0,
              "name": "Charts.AxisBase.axisMinimum.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 308,
              "executionCount": 0,
              "name": "Charts.AxisBase.axisMinimum.setter : Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 321,
              "executionCount": 0,
              "name": "Charts.AxisBase.axisMaximum.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 325,
              "executionCount": 0,
              "name": "Charts.AxisBase.axisMaximum.setter : Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 338,
              "executionCount": 0,
              "name": "Charts.AxisBase.calculate(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 21
            }
          ],
          "name": "AxisBase.swift",
          "executableLines": 162
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/LineScatterCandleRadarRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.LineScatterCandleRadarRenderer.init(animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.LineScatterCandleRadarRenderer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "Charts.LineScatterCandleRadarRenderer.drawHighlightLines(context: __C.CGContextRef, point: __C.CGPoint, set: Charts.ILineScatterCandleRadarChartDataSet) -> ()",
              "executableLines": 20
            }
          ],
          "name": "LineScatterCandleRadarRenderer.swift",
          "executableLines": 23
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/ChartBaseDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.init() -> Charts.ChartBaseDataSet",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.init(label: Swift.Optional<Swift.String>) -> Charts.ChartBaseDataSet",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.notifyDataSetChanged() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.calcMinMax() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.calcMinMaxY(fromX: Swift.Double, toX: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.calcMinMaxY(fromX: Swift.Double, toX: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.yMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.yMin.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.yMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.yMax.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 67,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.xMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.xMin.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.xMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 73,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.xMax.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entryCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entryCount.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entryForIndex(Swift.Int) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 83,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entryForIndex(Swift.Int) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entryForXValue(_: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entryForXValue(_: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 97,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entryForXValue(_: Swift.Double, closestToY: Swift.Double) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entryForXValue(_: Swift.Double, closestToY: Swift.Double) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 102,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entriesForXValue(Swift.Double) -> Swift.Array<Charts.ChartDataEntry>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 103,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entriesForXValue(Swift.Double) -> Swift.Array<Charts.ChartDataEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 110,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entryIndex(x: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 111,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entryIndex(x: Swift.Double, closestToY: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 115,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.entryIndex(entry: Charts.ChartDataEntry) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 116,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.entryIndex(entry: Charts.ChartDataEntry) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 120,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.addEntry(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 121,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.addEntry(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.addEntryOrdered(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.addEntryOrdered(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 130,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.removeEntry(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.removeEntry(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 135,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.removeEntry(index: Swift.Int) -> Swift.Bool",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 144,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.removeEntry(x: Swift.Double) -> Swift.Bool",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 153,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.removeFirst() -> Swift.Bool",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 165,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.removeLast() -> Swift.Bool",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 177,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.contains(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 178,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.contains(Charts.ChartDataEntry) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 182,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.clear() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartBaseDataSet.clear() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 190,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.colors : Swift.Array<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 193,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.valueColors : Swift.Array<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 196,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.label : Swift.Optional<Swift.String>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 199,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.axisDependency : Charts.YAxis.AxisDependency",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 204,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.color(atIndex: Swift.Int) -> __C.UIColor",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 215,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.resetColors() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 224,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.addColor(__C.UIColor) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 234,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.setColor(__C.UIColor) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 245,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.setColor(_: __C.UIColor, alpha: CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 255,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.setColors(_: Swift.Array<__C.UIColor>, alpha: CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 256,
              "executionCount": 0,
              "name": "closure #1 (__C.UIColor) -> __C.UIColor in Charts.ChartBaseDataSet.setColors(_: Swift.Array<__C.UIColor>, alpha: CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 265,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.setColors(__C.UIColor...) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 273,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.isHighlightEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 282,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.valueFormatter.getter : Swift.Optional<Charts.IValueFormatter>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 291,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.valueFormatter.setter : Swift.Optional<Charts.IValueFormatter>",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 299,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.needsFormatter.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 309,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.valueTextColor.getter : __C.UIColor",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 313,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.valueTextColor.setter : __C.UIColor",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 321,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.valueTextColorAt(Swift.Int) -> __C.UIColor",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 331,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.valueFont : __C.UIFont",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 334,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.form : Charts.Legend.Form",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 339,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.formSize : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 344,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.formLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 365,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.isDrawValuesEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 376,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.isDrawIconsEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 385,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartBaseDataSet.iconsOffset : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 392,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.isVisible.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 399,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.description.getter : Swift.String",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 400,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.ChartBaseDataSet.description.getter : Swift.String",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 404,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.debugDescription.getter : Swift.String",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 405,
              "executionCount": 0,
              "name": "closure #1 (Swift.String, Swift.Int) -> Swift.String in Charts.ChartBaseDataSet.debugDescription.getter : Swift.String",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 406,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in closure #1 (Swift.String, Swift.Int) -> Swift.String in Charts.ChartBaseDataSet.debugDescription.getter : Swift.String",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 413,
              "executionCount": 0,
              "name": "Charts.ChartBaseDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 22
            }
          ],
          "name": "ChartBaseDataSet.swift",
          "executableLines": 238
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/RadarChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartView.webLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartView.innerWebLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartView.webColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartView.innerWebColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartView.webAlpha : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "Charts.RadarChartView.init(frame: __C.CGRect) -> Charts.RadarChartView",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.RadarChartView.init(coder: __C.NSCoder) -> Swift.Optional<Charts.RadarChartView>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "Charts.RadarChartView.initialize() -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "Charts.RadarChartView.calcMinMax() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.RadarChartView.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.RadarChartView.notifyDataSetChanged() -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "Charts.RadarChartView.draw(__C.CGRect) -> ()",
              "executableLines": 47
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 121,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.RadarChartView.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 133,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.RadarChartView.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "Charts.RadarChartView.factor.getter : CoreGraphics.CGFloat",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 159,
              "executionCount": 0,
              "name": "Charts.RadarChartView.sliceAngle.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 160,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.RadarChartView.sliceAngle.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 164,
              "executionCount": 0,
              "name": "Charts.RadarChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 170,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.RadarChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 171,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int) -> Swift.Bool in Charts.RadarChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 173,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Int in Charts.RadarChartView.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 178,
              "executionCount": 0,
              "name": "Charts.RadarChartView.yAxis.getter : Charts.YAxis",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 187,
              "executionCount": 0,
              "name": "Charts.RadarChartView.skipWebLineCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 191,
              "executionCount": 0,
              "name": "Charts.RadarChartView.skipWebLineCount.setter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 197,
              "executionCount": 0,
              "name": "Charts.RadarChartView.requiredLegendOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 202,
              "executionCount": 0,
              "name": "Charts.RadarChartView.requiredBaseOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 203,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.RadarChartView.requiredBaseOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 207,
              "executionCount": 0,
              "name": "Charts.RadarChartView.radius.getter : CoreGraphics.CGFloat",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "Charts.RadarChartView.chartYMax.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 216,
              "executionCount": 0,
              "name": "Charts.RadarChartView.chartYMin.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 219,
              "executionCount": 0,
              "name": "Charts.RadarChartView.yRange.getter : Swift.Double",
              "executableLines": 1
            }
          ],
          "name": "RadarChartView.swift",
          "executableLines": 146
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BubbleChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.BubbleChartData.init() -> Charts.BubbleChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "Charts.BubbleChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.BubbleChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "Charts.BubbleChartData.setHighlightCircleWidth(CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "closure #1 (Charts.IBubbleChartDataSet) -> () in Charts.BubbleChartData.setHighlightCircleWidth(CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            }
          ],
          "name": "BubbleChartData.swift",
          "executableLines": 10
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/HorizontalBarHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.HorizontalBarHighlighter.getHighlight(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.HorizontalBarHighlighter.buildHighlights(dataSet: Charts.IChartDataSet, dataSetIndex: Swift.Int, xValue: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Array<Charts.Highlight>",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "closure #1 (Charts.ChartDataEntry) -> Charts.Highlight in Charts.HorizontalBarHighlighter.buildHighlights(dataSet: Charts.IChartDataSet, dataSetIndex: Swift.Int, xValue: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Array<Charts.Highlight>",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "Charts.HorizontalBarHighlighter.getDistance(x1: CoreGraphics.CGFloat, y1: CoreGraphics.CGFloat, x2: CoreGraphics.CGFloat, y2: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 3
            }
          ],
          "name": "HorizontalBarHighlighter.swift",
          "executableLines": 41
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BarLineScatterCandleBubbleChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineScatterCandleBubbleChartDataSet.highlightColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineScatterCandleBubbleChartDataSet.highlightLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineScatterCandleBubbleChartDataSet.highlightLineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 8
            }
          ],
          "name": "BarLineScatterCandleBubbleChartDataSet.swift",
          "executableLines": 11
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/XAxisRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.init(viewPortHandler: Charts.ViewPortHandler, xAxis: Swift.Optional<Charts.XAxis>, transformer: Swift.Optional<Charts.Transformer>) -> Charts.XAxisRenderer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRenderer.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 61,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.computeAxisValues(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.computeSize() -> ()",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 32
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 92,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRenderer.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 122,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxisRenderer.(_axisLineSegmentsBuffer in _83822B232E6F1F624DD5B1E9B857C296) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 45
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 128,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 147,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.XAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 148,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.XAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.XAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 159,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.XAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 173,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.drawLabels(context: __C.CGContextRef, pos: CoreGraphics.CGFloat, anchor: __C.CGPoint) -> ()",
              "executableLines": 82
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 220,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.XAxisRenderer.drawLabels(context: __C.CGContextRef, pos: CoreGraphics.CGFloat, anchor: __C.CGPoint) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 227,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.XAxisRenderer.drawLabels(context: __C.CGContextRef, pos: CoreGraphics.CGFloat, anchor: __C.CGPoint) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 232,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.XAxisRenderer.drawLabels(context: __C.CGContextRef, pos: CoreGraphics.CGFloat, anchor: __C.CGPoint) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 265,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.drawLabel(context: __C.CGContextRef, formattedLabel: Swift.String, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, attributes: Swift.Dictionary<__C.NSAttributedStringKey, Any>, constrainedToSize: __C.CGSize, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 277,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.renderGridLines(context: __C.CGContextRef) -> ()",
              "executableLines": 44
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 283,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRenderer.renderGridLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 323,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.gridClippingRect.getter : __C.CGRect",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 325,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.XAxisRenderer.gridClippingRect.getter : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 332,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.drawGridLine(context: __C.CGContextRef, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 334,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRenderer.drawGridLine(context: __C.CGContextRef, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 344,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 29
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 375,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.renderLimitLineLine(context: __C.CGContextRef, limitLine: Charts.ChartLimitLine, position: __C.CGPoint) -> ()",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 396,
              "executionCount": 0,
              "name": "Charts.XAxisRenderer.renderLimitLineLabel(context: __C.CGContextRef, limitLine: Charts.ChartLimitLine, position: __C.CGPoint, yOffset: CoreGraphics.CGFloat) -> ()",
              "executableLines": 52
            }
          ],
          "name": "XAxisRenderer.swift",
          "executableLines": 398
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BubbleChartDataEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BubbleChartDataEntry.size : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataEntry.init() -> Charts.BubbleChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataEntry.init(x: Swift.Double, y: Swift.Double, size: CoreGraphics.CGFloat) -> Charts.BubbleChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataEntry.init(x: Swift.Double, y: Swift.Double, size: CoreGraphics.CGFloat, data: Swift.Optional<Any>) -> Charts.BubbleChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataEntry.init(x: Swift.Double, y: Swift.Double, size: CoreGraphics.CGFloat, icon: Swift.Optional<__C.UIImage>) -> Charts.BubbleChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataEntry.init(x: Swift.Double, y: Swift.Double, size: CoreGraphics.CGFloat, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.BubbleChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 74,
              "executionCount": 0,
              "name": "Charts.BubbleChartDataEntry.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 5
            }
          ],
          "name": "BubbleChartDataEntry.swift",
          "executableLines": 27
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Jobs/AnimatedMoveViewJob.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.AnimatedMoveViewJob.animationUpdate() -> ()",
              "executableLines": 15
            }
          ],
          "name": "AnimatedMoveViewJob.swift",
          "executableLines": 15
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/PieHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.PieHighlighter.closestHighlight(index: Swift.Int, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 8
            }
          ],
          "name": "PieHighlighter.swift",
          "executableLines": 8
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Jobs/ViewPortJob.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortJob.point : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "Charts.ViewPortJob.init(viewPortHandler: Charts.ViewPortHandler, xValue: Swift.Double, yValue: Swift.Double, transformer: Charts.Transformer, view: Charts.ChartViewBase) -> Charts.ViewPortJob",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.ViewPortJob.doJob() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ViewPortJob.doJob() -> ()",
              "executableLines": 1
            }
          ],
          "name": "ViewPortJob.swift",
          "executableLines": 14
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BarChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.BarChartData.init() -> Charts.BarChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "Charts.BarChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.BarChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartData.barWidth : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "Charts.BarChartData.groupBars(fromX: Swift.Double, groupSpace: Swift.Double, barSpace: Swift.Double) -> ()",
              "executableLines": 55
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.BarChartData.groupBars(fromX: Swift.Double, groupSpace: Swift.Double, barSpace: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "closure #1 (Charts.IBarChartDataSet) -> () in Charts.BarChartData.groupBars(fromX: Swift.Double, groupSpace: Swift.Double, barSpace: Swift.Double) -> ()",
              "executableLines": 15
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarChartData.groupBars(fromX: Swift.Double, groupSpace: Swift.Double, barSpace: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 103,
              "executionCount": 0,
              "name": "Charts.BarChartData.groupWidth(groupSpace: Swift.Double, barSpace: Swift.Double) -> Swift.Double",
              "executableLines": 3
            }
          ],
          "name": "BarChartData.swift",
          "executableLines": 82
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BarChartDataEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init() -> Charts.BarChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, y: Swift.Double) -> Charts.BarChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, y: Swift.Double, data: Swift.Optional<Any>) -> Charts.BarChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, y: Swift.Double, icon: Swift.Optional<__C.UIImage>) -> Charts.BarChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, y: Swift.Double, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.BarChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, yValues: Swift.Array<Swift.Double>) -> Charts.BarChartDataEntry",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, yValues: Swift.Array<Swift.Double>, icon: Swift.Optional<__C.UIImage>) -> Charts.BarChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 79,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, yValues: Swift.Array<Swift.Double>, data: Swift.Optional<Any>) -> Charts.BarChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 86,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.init(x: Swift.Double, yValues: Swift.Array<Swift.Double>, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.BarChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 93,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.sumBelow(stackIndex: Swift.Int) -> Swift.Double",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 102,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarChartDataEntry.sumBelow(stackIndex: Swift.Int) -> Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 113,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.negativeSum.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.positiveSum.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.calcPosNegSum() -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "closure #1 (inout (Swift.Double, Swift.Double), Swift.Double) -> () in Charts.BarChartDataEntry.calcPosNegSum() -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 134,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> (Swift.Double, Swift.Double) in Charts.BarChartDataEntry.calcPosNegSum() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 143,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.calcRanges() -> ()",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 178,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.isStacked.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.yValues.getter : Swift.Optional<Swift.Array<Swift.Double>>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 185,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.yValues.setter : Swift.Optional<Swift.Array<Swift.Double>>",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 195,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.ranges.getter : Swift.Optional<Swift.Array<Charts.Range>>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 202,
              "executionCount": 0,
              "name": "Charts.BarChartDataEntry.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 217,
              "executionCount": 0,
              "name": "static Charts.BarChartDataEntry.(calcSum in _396C76ACD1B87B9B54098A08371EE6B2)(values: Swift.Optional<Swift.Array<Swift.Double>>) -> Swift.Double",
              "executableLines": 13
            }
          ],
          "name": "BarChartDataEntry.swift",
          "executableLines": 148
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/BubbleChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.init(dataProvider: Charts.BubbleChartDataProvider, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.BubbleChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "closure #1 (Swift.Array<Charts.NSUIAccessibilityElement>) -> Swift.Array<Charts.NSUIAccessibilityElement> in Charts.BubbleChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.(getShapeSize in _11CDEA18823B018B2D65A5820245E79A)(entrySize: CoreGraphics.CGFloat, maxSize: CoreGraphics.CGFloat, reference: CoreGraphics.CGFloat, normalizeSize: Swift.Bool) -> CoreGraphics.CGFloat",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BubbleChartRenderer.(_pointBuffer in _11CDEA18823B018B2D65A5820245E79A) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BubbleChartRenderer.(_sizeBuffer in _11CDEA18823B018B2D65A5820245E79A) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int) -> ()",
              "executableLines": 75
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 142,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.BubbleChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 152,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 81
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 235,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 240,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 74
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 317,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.(accessibilityCreateEmptyOrderedElements in _11CDEA18823B018B2D65A5820245E79A)() -> Swift.Array<Swift.Array<Charts.NSUIAccessibilityElement>>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 320,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.BubbleChartRenderer.(accessibilityCreateEmptyOrderedElements in _11CDEA18823B018B2D65A5820245E79A)() -> Swift.Array<Swift.Array<Charts.NSUIAccessibilityElement>>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 333,
              "executionCount": 0,
              "name": "Charts.BubbleChartRenderer.(createAccessibleElement in _11CDEA18823B018B2D65A5820245E79A)(withIndex: Swift.Int, container: Charts.BubbleChartView, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int, shapeSize: CoreGraphics.CGFloat, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 343,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.BubbleChartRenderer.(createAccessibleElement in _11CDEA18823B018B2D65A5820245E79A)(withIndex: Swift.Int, container: Charts.BubbleChartView, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int, shapeSize: CoreGraphics.CGFloat, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 348,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in Charts.BubbleChartRenderer.(createAccessibleElement in _11CDEA18823B018B2D65A5820245E79A)(withIndex: Swift.Int, container: Charts.BubbleChartView, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int, shapeSize: CoreGraphics.CGFloat, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 350,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Int in Charts.BubbleChartRenderer.(createAccessibleElement in _11CDEA18823B018B2D65A5820245E79A)(withIndex: Swift.Int, container: Charts.BubbleChartView, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int, shapeSize: CoreGraphics.CGFloat, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 353,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.String in Charts.BubbleChartRenderer.(createAccessibleElement in _11CDEA18823B018B2D65A5820245E79A)(withIndex: Swift.Int, container: Charts.BubbleChartView, dataSet: Charts.IBubbleChartDataSet, dataSetIndex: Swift.Int, shapeSize: CoreGraphics.CGFloat, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 1
            }
          ],
          "name": "BubbleChartRenderer.swift",
          "executableLines": 317
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Animation/ChartAnimationEasing.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "Charts.easingFunctionFromOption(Charts.ChartEasingOption) -> (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 67
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.Linear : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInQuad : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutQuad : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 136,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutQuad : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 146,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInCubic : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutCubic : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 157,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutCubic : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInQuart : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 172,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutQuart : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 178,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutQuart : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 188,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInQuint : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 193,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutQuint : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 199,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutQuint : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 212,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInSine : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 217,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutSine : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 222,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutSine : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 227,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInExpo : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 231,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutExpo : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 235,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutExpo : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 255,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInCirc : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 260,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutCirc : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 266,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutCirc : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 276,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInElastic : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 294,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutElastic : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 311,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutElastic : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 334,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInBack : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 340,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutBack : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 347,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutBack : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 360,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInBounce : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 364,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseOutBounce : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 387,
              "executionCount": 0,
              "name": "closure #1 (Swift.Double, Swift.Double) -> Swift.Double in variable initialization expression of static Charts.EasingFunctions.EaseInOutBounce : (Swift.Double, Swift.Double) -> Swift.Double",
              "executableLines": 7
            }
          ],
          "name": "ChartAnimationEasing.swift",
          "executableLines": 307
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/BarLineChartViewBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.gridBackgroundColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.borderColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.minOffset : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.leftAxis : Charts.YAxis",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.rightAxis : Charts.YAxis",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 103,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.init(frame: __C.CGRect) -> Charts.BarLineChartViewBase",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.init(coder: __C.NSCoder) -> Swift.Optional<Charts.BarLineChartViewBase>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 113,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.__deallocating_deinit",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 118,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.initialize() -> ()",
              "executableLines": 29
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 138,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.initialize() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 144,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.initialize() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 144,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarLineChartViewBase.initialize() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 23
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 152,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 152,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 174,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 112
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 215,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 220,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 225,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 247,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 252,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 257,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.BarLineChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 292,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.autoScale() -> ()",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 316,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.prepareValuePxMatrix() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 322,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.prepareOffsetMatrix() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 328,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.notifyDataSetChanged() -> ()",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 355,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 357,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 357,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Double in Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 360,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Double in Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 360,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Double in Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 361,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Double in Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 361,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Double in Charts.BarLineChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 365,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 55
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 367,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 367,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 402,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarLineChartViewBase.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 409,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.BarLineChartViewBase.calculateLegendOffsets(offsetLeft: inout CoreGraphics.CGFloat, offsetTop: inout CoreGraphics.CGFloat, offsetRight: inout CoreGraphics.CGFloat, offsetBottom: inout CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 422,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.calculateOffsets() -> ()",
              "executableLines": 59
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 446,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 484,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.drawGridBackground(context: __C.CGContextRef) -> ()",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 485,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.drawGridBackground(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 504,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.drawGridBackground(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 521,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.(_gestureScaleAxis in _7D87FEA81A1F91B2DC1B9FDF0893F49A) : Charts.BarLineChartViewBase.(GestureScaleAxis in _7D87FEA81A1F91B2DC1B9FDF0893F49A)",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 526,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.(_lastPanPoint in _7D87FEA81A1F91B2DC1B9FDF0893F49A) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 530,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineChartViewBase.(_decelerationVelocity in _7D87FEA81A1F91B2DC1B9FDF0893F49A) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 533,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(tapGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 545,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(tapGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 559,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(doubleTapGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 30
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 567,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(doubleTapGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 567,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(doubleTapGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 567,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Int in implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(doubleTapGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 592,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 87
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 598,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 598,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 598,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 623,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 642,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 642,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 642,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> Swift.Bool in implicit closure #6 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 643,
              "executionCount": 0,
              "name": "implicit closure #8 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 643,
              "executionCount": 0,
              "name": "implicit closure #9 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 643,
              "executionCount": 0,
              "name": "implicit closure #10 () throws -> Swift.Bool in implicit closure #9 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 644,
              "executionCount": 0,
              "name": "implicit closure #11 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(pinchGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPinchGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 682,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 119
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 683,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 687,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 695,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 711,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 714,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 774,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 778,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(panGestureRecognized in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIPanGestureRecognizer) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 803,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(performPanChange in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(translation: __C.CGPoint) -> Swift.Bool",
              "executableLines": 30
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 831,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(performPanChange in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(translation: __C.CGPoint) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 835,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(isTouchInverted in _7D87FEA81A1F91B2DC1B9FDF0893F49A)() -> Swift.Bool",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 837,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(isTouchInverted in _7D87FEA81A1F91B2DC1B9FDF0893F49A)() -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 838,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(isTouchInverted in _7D87FEA81A1F91B2DC1B9FDF0893F49A)() -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 842,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.stopDeceleration() -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 851,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(decelerationLoop in _7D87FEA81A1F91B2DC1B9FDF0893F49A)() -> ()",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 873,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(decelerationLoop in _7D87FEA81A1F91B2DC1B9FDF0893F49A)() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 884,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 888,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 889,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 889,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 889,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 890,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 890,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in implicit closure #5 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 891,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 891,
              "executionCount": 0,
              "name": "implicit closure #8 () throws -> Swift.Bool in implicit closure #7 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 901,
              "executionCount": 0,
              "name": "implicit closure #9 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 901,
              "executionCount": 0,
              "name": "implicit closure #10 () throws -> Swift.Bool in implicit closure #9 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 901,
              "executionCount": 0,
              "name": "implicit closure #11 () throws -> Swift.Bool in implicit closure #9 () throws -> Swift.Bool in Charts.BarLineChartViewBase.(nsuiGestureRecognizerShouldBegin in _7D87FEA81A1F91B2DC1B9FDF0893F49A)(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 914,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.gestureRecognizerShouldBegin(__C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 932,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 48
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 934,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 935,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 935,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 946,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 961,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 966,
              "executionCount": 0,
              "name": "closure #1 (__C.UIGestureRecognizer) -> Swift.Bool in Charts.BarLineChartViewBase.gestureRecognizer(_: __C.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: __C.UIGestureRecognizer) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 985,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoomIn() -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 998,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoomOut() -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1011,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.resetZoom() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1033,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoom(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1057,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoom(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1081,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoomToCenter(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1109,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoomAndCenterViewAnimated(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1152,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoomAndCenterViewAnimated(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1173,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.zoomAndCenterViewAnimated(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1179,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.fitScreen() -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1189,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setScaleMinima(_: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1195,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.visibleXRange.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1205,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setVisibleXRangeMaximum(Swift.Double) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1216,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setVisibleXRangeMinimum(Swift.Double) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1228,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setVisibleXRange(minXRange: Swift.Double, maxXRange: Swift.Double) -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1242,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setVisibleYRangeMaximum(_: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1253,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setVisibleYRangeMinimum(_: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1265,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setVisibleYRange(minYRange: Swift.Double, maxYRange: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1274,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.moveViewToX(Swift.Double) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1292,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.moveViewToY(_: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1313,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.moveViewTo(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1341,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.moveViewToAnimated(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1377,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.moveViewToAnimated(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1395,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.moveViewToAnimated(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1410,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.centerViewTo(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1438,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.centerViewToAnimated(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1474,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.centerViewToAnimated(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1491,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.centerViewToAnimated(xValue: Swift.Double, yValue: Swift.Double, axis: Charts.YAxis.AxisDependency, duration: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1498,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setViewPortOffsets(left: CoreGraphics.CGFloat, top: CoreGraphics.CGFloat, right: CoreGraphics.CGFloat, bottom: CoreGraphics.CGFloat) -> ()",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1509,
              "executionCount": 0,
              "name": "closure #1 () -> () in Charts.BarLineChartViewBase.setViewPortOffsets(left: CoreGraphics.CGFloat, top: CoreGraphics.CGFloat, right: CoreGraphics.CGFloat, bottom: CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1517,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.resetViewPortOffsets() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1526,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getAxisRange(axis: Charts.YAxis.AxisDependency) -> Swift.Double",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1539,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getPosition(entry: Charts.ChartDataEntry, axis: Charts.YAxis.AxisDependency) -> __C.CGPoint",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1551,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.dragEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1552,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.dragEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1555,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.dragEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1563,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isDragEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1571,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.dragXEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1575,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.dragXEnabled.setter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1584,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.dragYEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1588,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.dragYEnabled.setter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1595,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setScaleEnabled(Swift.Bool) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1596,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.setScaleEnabled(Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1601,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.setScaleEnabled(Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1601,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.BarLineChartViewBase.setScaleEnabled(Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1609,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.scaleXEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1613,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.scaleXEnabled.setter : Swift.Bool",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1618,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.scaleXEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1618,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.scaleXEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1627,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.scaleYEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1631,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.scaleYEnabled.setter : Swift.Bool",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1636,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.scaleYEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1636,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.scaleYEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1642,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isScaleXEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1643,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isScaleYEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1649,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.doubleTapToZoomEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1653,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.doubleTapToZoomEnabled.setter : Swift.Bool",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1665,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isDoubleTapToZoomEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1677,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isHighlightPerDragEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1684,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isDrawGridBackgroundEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1691,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isDrawBordersEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1700,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.valueForTouchPoint(point: __C.CGPoint, axis: Charts.YAxis.AxisDependency) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1707,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.pixelForValues(x: Swift.Double, y: Swift.Double, axis: Charts.YAxis.AxisDependency) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1713,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getEntryByTouchPoint(point: __C.CGPoint) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1723,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getDataSetByTouchPoint(point: __C.CGPoint) -> Swift.Optional<Charts.IBarLineScatterCandleBubbleChartDataSet>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1734,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.scaleX.getter : CoreGraphics.CGFloat",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1744,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.scaleY.getter : CoreGraphics.CGFloat",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1753,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isFullyZoomedOut.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1758,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getAxis(Charts.YAxis.AxisDependency) -> Charts.YAxis",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1773,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.pinchZoomEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1777,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.pinchZoomEnabled.setter : Swift.Bool",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1782,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.pinchZoomEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1782,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.BarLineChartViewBase.pinchZoomEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1790,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isPinchZoomEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1795,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setDragOffsetX(CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1802,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setDragOffsetY(CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1807,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.hasNoDragOffset.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1810,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.chartYMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1815,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.chartYMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1821,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isAnyAxisInverted.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1822,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineChartViewBase.isAnyAxisInverted.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1829,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.autoScaleMinMaxEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1830,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.autoScaleMinMaxEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1835,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isAutoScaleMinMaxEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1839,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setYAxisMinWidth(_: Charts.YAxis.AxisDependency, width: CoreGraphics.CGFloat) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1854,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getYAxisMinWidth(Charts.YAxis.AxisDependency) -> CoreGraphics.CGFloat",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1867,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.setYAxisMaxWidth(_: Charts.YAxis.AxisDependency, width: CoreGraphics.CGFloat) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1884,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getYAxisMaxWidth(Charts.YAxis.AxisDependency) -> CoreGraphics.CGFloat",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1897,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getYAxisWidth(Charts.YAxis.AxisDependency) -> CoreGraphics.CGFloat",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1914,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.getTransformer(forAxis: Charts.YAxis.AxisDependency) -> Charts.Transformer",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1929,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.maxVisibleCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1933,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.maxVisibleCount.setter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1939,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.isInverted(axis: Charts.YAxis.AxisDependency) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1945,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.lowestVisibleX.getter : Swift.Double",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1957,
              "executionCount": 0,
              "name": "Charts.BarLineChartViewBase.highestVisibleX.getter : Swift.Double",
              "executableLines": 9
            }
          ],
          "name": "BarLineChartViewBase.swift",
          "executableLines": 1393
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/ChartDataEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.init() -> Charts.ChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.init(x: Swift.Double, y: Swift.Double) -> Charts.ChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.init(x: Swift.Double, y: Swift.Double, data: Swift.Optional<Any>) -> Charts.ChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.init(x: Swift.Double, y: Swift.Double, icon: Swift.Optional<__C.UIImage>) -> Charts.ChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.init(x: Swift.Double, y: Swift.Double, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.ChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 79,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.description.getter : Swift.String",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 86,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 99,
              "executionCount": 0,
              "name": "Charts.ChartDataEntry.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartDataEntry.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 1
            }
          ],
          "name": "ChartDataEntry.swift",
          "executableLines": 44
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/CombinedHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.CombinedHighlighter.init(chart: Charts.CombinedChartDataProvider, barDataProvider: Charts.BarChartDataProvider) -> Charts.CombinedHighlighter",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.CombinedHighlighter.getHighlights(xValue: Swift.Double, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Array<Charts.Highlight>",
              "executableLines": 40
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.CombinedHighlighter.getHighlights(xValue: Swift.Double, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Array<Charts.Highlight>",
              "executableLines": 1
            }
          ],
          "name": "CombinedHighlighter.swift",
          "executableLines": 47
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/ViewPortHandler.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_touchMatrix in _F7D1F0EB2C6D7BE104378704FFC4A57A) : __C.CGAffineTransform",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_contentRect in _F7D1F0EB2C6D7BE104378704FFC4A57A) : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_chartWidth in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_chartHeight in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_minScaleY in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_maxScaleY in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_minScaleX in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_maxScaleX in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_scaleX in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_scaleY in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_transX in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_transY in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_transOffsetX in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ViewPortHandler.(_transOffsetY in _F7D1F0EB2C6D7BE104378704FFC4A57A) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.init(width: CoreGraphics.CGFloat, height: CoreGraphics.CGFloat) -> Charts.ViewPortHandler",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 67,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setChartDimens(width: CoreGraphics.CGFloat, height: CoreGraphics.CGFloat) -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.hasChartDimens.getter : Swift.Bool",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.hasChartDimens.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 92,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.restrainViewPort(offsetLeft: CoreGraphics.CGFloat, offsetTop: CoreGraphics.CGFloat, offsetRight: CoreGraphics.CGFloat, offsetBottom: CoreGraphics.CGFloat) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.offsetLeft.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 105,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.offsetRight.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 110,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.offsetTop.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 115,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.offsetBottom.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 120,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentTop.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentLeft.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 130,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentRight.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 135,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentBottom.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 140,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentWidth.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 145,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentHeight.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 150,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentRect.getter : __C.CGRect",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 155,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.contentCenter.getter : __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 160,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.chartHeight.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 165,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.chartWidth.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 173,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.zoom(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat) -> __C.CGAffineTransform",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 179,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.zoom(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> __C.CGAffineTransform",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 188,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.zoomIn(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> __C.CGAffineTransform",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 194,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.zoomOut(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> __C.CGAffineTransform",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 200,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.resetZoom() -> __C.CGAffineTransform",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 206,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setZoom(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat) -> __C.CGAffineTransform",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 215,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setZoom(scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> __C.CGAffineTransform",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 227,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.fitScreen() -> __C.CGAffineTransform",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 236,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.translate(pt: __C.CGPoint) -> __C.CGAffineTransform",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 249,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.centerViewPort(pt: __C.CGPoint, chart: Charts.ChartViewBase) -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 259,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.refresh(newMatrix: __C.CGAffineTransform, chart: Charts.ChartViewBase, invalidate: Swift.Bool) -> __C.CGAffineTransform",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 272,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.(limitTransAndScale in _F7D1F0EB2C6D7BE104378704FFC4A57A)(matrix: inout __C.CGAffineTransform, content: Swift.Optional<__C.CGRect>) -> ()",
              "executableLines": 28
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 303,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setMinimumScaleX(CoreGraphics.CGFloat) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 318,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setMaximumScaleX(CoreGraphics.CGFloat) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 333,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setMinMaxScaleX(minScaleX: CoreGraphics.CGFloat, maxScaleX: CoreGraphics.CGFloat) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 354,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setMinimumScaleY(CoreGraphics.CGFloat) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 369,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setMaximumScaleY(CoreGraphics.CGFloat) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 383,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setMinMaxScaleY(minScaleY: CoreGraphics.CGFloat, maxScaleY: CoreGraphics.CGFloat) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 403,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.touchMatrix.getter : __C.CGAffineTransform",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 410,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBoundsX(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 411,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isInBoundsX(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 415,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBoundsY(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 416,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isInBoundsY(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 426,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBounds(point: __C.CGPoint) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 431,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBounds(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 432,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isInBounds(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 436,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBoundsLeft(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 441,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBoundsRight(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 447,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBoundsTop(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 452,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isInBoundsBottom(CoreGraphics.CGFloat) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 470,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isIntersectingLine(from: __C.CGPoint, to: __C.CGPoint) -> Swift.Bool",
              "executableLines": 32
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 472,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isIntersectingLine(from: __C.CGPoint, to: __C.CGPoint) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 505,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.scaleX.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 511,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.scaleY.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 517,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.minScaleX.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 523,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.minScaleY.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 529,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.maxScaleX.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 535,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.maxScaleY.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 541,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.transX.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 547,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.transY.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 553,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isFullyZoomedOut.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 554,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isFullyZoomedOut.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 559,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isFullyZoomedOutY.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 560,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isFullyZoomedOutY.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 565,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.isFullyZoomedOutX.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 566,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.isFullyZoomedOutX.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 571,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setDragOffsetX(CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 577,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.setDragOffsetY(CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 583,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.hasNoDragOffset.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 584,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ViewPortHandler.hasNoDragOffset.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 589,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.canZoomOutMoreX.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 595,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.canZoomInMoreX.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 601,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.canZoomOutMoreY.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 607,
              "executionCount": 0,
              "name": "Charts.ViewPortHandler.canZoomInMoreY.getter : Swift.Bool",
              "executableLines": 3
            }
          ],
          "name": "ViewPortHandler.swift",
          "executableLines": 388
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/Legend.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.entries : Swift.Array<Charts.LegendEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.extraEntries : Swift.Array<Charts.LegendEntry>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 83,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.horizontalAlignment : Charts.Legend.HorizontalAlignment",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 86,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.verticalAlignment : Charts.Legend.VerticalAlignment",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.orientation : Charts.Legend.Orientation",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 95,
              "executionCount": 0,
              "name": "Charts.Legend.isDrawInsideEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.direction : Charts.Legend.Direction",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.font : __C.UIFont",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.textColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 104,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.form : Charts.Legend.Form",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 107,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.formSize : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 110,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.formLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.xEntrySpace : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.yEntrySpace : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.formToTextSpace : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 127,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.stackSpace : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 129,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.calculatedLabelSizes : Swift.Array<__C.CGSize>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 130,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.calculatedLabelBreakPoints : Swift.Array<Swift.Bool>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.calculatedLineSizes : Swift.Array<__C.CGSize>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 134,
              "executionCount": 0,
              "name": "Charts.Legend.init() -> Charts.Legend",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 142,
              "executionCount": 0,
              "name": "Charts.Legend.init(entries: Swift.Array<Charts.LegendEntry>) -> Charts.Legend",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "Charts.Legend.getMaximumEntrySize(withFont: __C.UIFont) -> __C.CGSize",
              "executableLines": 34
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 184,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.neededWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 185,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.neededHeight : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 186,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.textWidthMax : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 187,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Legend.textHeightMax : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 197,
              "executionCount": 0,
              "name": "Charts.Legend.isWordWrapEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 207,
              "executionCount": 0,
              "name": "Charts.Legend.calculateDimensions(labelFont: __C.UIFont, viewPortHandler: Charts.ViewPortHandler) -> ()",
              "executableLines": 188
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 257,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Legend.calculateDimensions(labelFont: __C.UIFont, viewPortHandler: Charts.ViewPortHandler) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 354,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.Legend.calculateDimensions(labelFont: __C.UIFont, viewPortHandler: Charts.ViewPortHandler) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 359,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.Legend.calculateDimensions(labelFont: __C.UIFont, viewPortHandler: Charts.ViewPortHandler) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 360,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.Legend.calculateDimensions(labelFont: __C.UIFont, viewPortHandler: Charts.ViewPortHandler) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 403,
              "executionCount": 0,
              "name": "Charts.Legend.setCustom(entries: Swift.Array<Charts.LegendEntry>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 410,
              "executionCount": 0,
              "name": "Charts.Legend.resetCustom() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 417,
              "executionCount": 0,
              "name": "Charts.Legend.isLegendCustom.getter : Swift.Bool",
              "executableLines": 3
            }
          ],
          "name": "Legend.swift",
          "executableLines": 271
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/XAxis.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxis.labelWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxis.labelHeight : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxis.labelRotatedWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxis.labelRotatedHeight : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxis.labelRotationAngle : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxis.labelPosition : Charts.XAxis.LabelPosition",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.XAxis.isWordWrapEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "Charts.XAxis.init() -> Charts.XAxis",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "Charts.XAxis.isAvoidFirstLastClippingEnabled.getter : Swift.Bool",
              "executableLines": 3
            }
          ],
          "name": "XAxis.swift",
          "executableLines": 15
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Animation/Animator.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "Charts.Animator.init() -> Charts.Animator",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "Charts.Animator.__deallocating_deinit",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 67,
              "executionCount": 0,
              "name": "Charts.Animator.stop() -> ()",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Animator.stop() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "Charts.Animator.(updateAnimationPhases in _9FB88F60117D6941148F8596820C258B)(Swift.Double) -> ()",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 102,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.Animator.(updateAnimationPhases in _9FB88F60117D6941148F8596820C258B)(Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 115,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Double in Charts.Animator.(updateAnimationPhases in _9FB88F60117D6941148F8596820C258B)(Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 120,
              "executionCount": 0,
              "name": "Charts.Animator.(animationLoop in _9FB88F60117D6941148F8596820C258B)() -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 143,
              "executionCount": 0,
              "name": "Charts.Animator.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingX: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>, easingY: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 162,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Animator.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingX: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>, easingY: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 178,
              "executionCount": 0,
              "name": "Charts.Animator.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingOptionX: Charts.ChartEasingOption, easingOptionY: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 190,
              "executionCount": 0,
              "name": "Charts.Animator.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 202,
              "executionCount": 0,
              "name": "Charts.Animator.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 213,
              "executionCount": 0,
              "name": "Charts.Animator.animate(xAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 225,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Animator.animate(xAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 240,
              "executionCount": 0,
              "name": "Charts.Animator.animate(xAxisDuration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 251,
              "executionCount": 0,
              "name": "Charts.Animator.animate(yAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 263,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.Animator.animate(yAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 278,
              "executionCount": 0,
              "name": "Charts.Animator.animate(yAxisDuration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            }
          ],
          "name": "Animator.swift",
          "executableLines": 152
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/XAxisRendererRadarChart.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.XAxisRendererRadarChart.init(viewPortHandler: Charts.ViewPortHandler, xAxis: Swift.Optional<Charts.XAxis>, chart: Charts.RadarChartView) -> Charts.XAxisRendererRadarChart",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.XAxisRendererRadarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 41
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRendererRadarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Int in Charts.XAxisRendererRadarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.String in Charts.XAxisRendererRadarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "Charts.XAxisRendererRadarChart.drawLabel(context: __C.CGContextRef, formattedLabel: Swift.String, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, attributes: Swift.Dictionary<__C.NSAttributedStringKey, Any>, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 88,
              "executionCount": 0,
              "name": "Charts.XAxisRendererRadarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            }
          ],
          "name": "XAxisRendererRadarChart.swift",
          "executableLines": 61
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/CircleShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.CircleShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 41
            }
          ],
          "name": "CircleShapeRenderer.swift",
          "executableLines": 41
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/LegendRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.LegendRenderer.init(viewPortHandler: Charts.ViewPortHandler, legend: Swift.Optional<Charts.Legend>) -> Charts.LegendRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.LegendRenderer.computeLegend(data: Charts.ChartData) -> ()",
              "executableLines": 166
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.LegendRenderer.computeLegend(data: Charts.ChartData) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.LegendRenderer.computeLegend(data: Charts.ChartData) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 130,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.LegendRenderer.computeLegend(data: Charts.ChartData) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 166,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.LegendRenderer.computeLegend(data: Charts.ChartData) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 198,
              "executionCount": 0,
              "name": "Charts.LegendRenderer.renderLegend(context: __C.CGContextRef) -> ()",
              "executableLines": 297
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 327,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.LegendRenderer.renderLegend(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 334,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.LegendRenderer.renderLegend(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 335,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.LegendRenderer.renderLegend(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 459,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.LegendRenderer.renderLegend(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 496,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LegendRenderer.(_formLineSegmentsBuffer in _F33D617E882FB7FA0AE2C3B96B90C786) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 505,
              "executionCount": 0,
              "name": "Charts.LegendRenderer.drawForm(context: __C.CGContextRef, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, entry: Charts.LegendEntry, legend: Charts.Legend) -> ()",
              "executableLines": 64
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 551,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.LegendRenderer.drawForm(context: __C.CGContextRef, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, entry: Charts.LegendEntry, legend: Charts.Legend) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 572,
              "executionCount": 0,
              "name": "Charts.LegendRenderer.drawLabel(context: __C.CGContextRef, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, label: Swift.String, font: __C.UIFont, textColor: __C.UIColor) -> ()",
              "executableLines": 3
            }
          ],
          "name": "LegendRenderer.swift",
          "executableLines": 545
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/ScatterChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ScatterChartDataSet.scatterShapeSize : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.ScatterChartDataSet.setScatterShape(Charts.ScatterChartDataSet.Shape) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ScatterChartDataSet.shapeRenderer : Swift.Optional<Charts.IShapeRenderer>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "static Charts.ScatterChartDataSet.renderer(forShape: Charts.ScatterChartDataSet.Shape) -> Charts.IShapeRenderer",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.ScatterChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 8
            }
          ],
          "name": "ScatterChartDataSet.swift",
          "executableLines": 25
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/ScatterChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.ScatterChartData.init() -> Charts.ScatterChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "Charts.ScatterChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.ScatterChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "Charts.ScatterChartData.getGreatestShapeSize() -> CoreGraphics.CGFloat",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "closure #1 (Charts.IScatterChartDataSet, Charts.IScatterChartDataSet) -> Swift.Bool in Charts.ScatterChartData.getGreatestShapeSize() -> CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.ScatterChartData.getGreatestShapeSize() -> CoreGraphics.CGFloat",
              "executableLines": 1
            }
          ],
          "name": "ScatterChartData.swift",
          "executableLines": 13
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/CandleStickChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.init(dataProvider: Charts.CandleChartDataProvider, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.CandleStickChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleStickChartRenderer.(_shadowPoints in _4AC9CABD976DD8AC554C0AE0694C749D) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleStickChartRenderer.(_rangePoints in _4AC9CABD976DD8AC554C0AE0694C749D) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleStickChartRenderer.(_openPoints in _4AC9CABD976DD8AC554C0AE0694C749D) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleStickChartRenderer.(_closePoints in _4AC9CABD976DD8AC554C0AE0694C749D) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleStickChartRenderer.(_bodyRect in _4AC9CABD976DD8AC554C0AE0694C749D) : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleStickChartRenderer.(_lineSegments in _4AC9CABD976DD8AC554C0AE0694C749D) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 212
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 84,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 132,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 136,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 140,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 146,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 184,
              "executionCount": 0,
              "name": "implicit closure #7 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 199,
              "executionCount": 0,
              "name": "implicit closure #8 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 232,
              "executionCount": 0,
              "name": "implicit closure #9 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 237,
              "executionCount": 0,
              "name": "implicit closure #10 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 241,
              "executionCount": 0,
              "name": "implicit closure #11 () throws -> __C.UIColor in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 253,
              "executionCount": 0,
              "name": "closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 254,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in closure #1 (Charts.NSUIAccessibilityElement) -> () in Charts.CandleStickChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.ICandleChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 269,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 82
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 318,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.CandleStickChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 353,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 2
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 357,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 50
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 411,
              "executionCount": 0,
              "name": "Charts.CandleStickChartRenderer.(createAccessibleElement in _4AC9CABD976DD8AC554C0AE0694C749D)(withIndex: Swift.Int, container: Charts.CandleChartDataProvider, dataSet: Charts.ICandleChartDataSet, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 9
            }
          ],
          "name": "CandleStickChartRenderer.swift",
          "executableLines": 402
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Jobs/AnimatedZoomViewJob.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.AnimatedZoomViewJob.init(viewPortHandler: Charts.ViewPortHandler, transformer: Charts.Transformer, view: Charts.ChartViewBase, yAxis: Charts.YAxis, xAxisRange: Swift.Double, scaleX: CoreGraphics.CGFloat, scaleY: CoreGraphics.CGFloat, xOrigin: CoreGraphics.CGFloat, yOrigin: CoreGraphics.CGFloat, zoomCenterX: CoreGraphics.CGFloat, zoomCenterY: CoreGraphics.CGFloat, zoomOriginX: CoreGraphics.CGFloat, zoomOriginY: CoreGraphics.CGFloat, duration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> Charts.AnimatedZoomViewJob",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "Charts.AnimatedZoomViewJob.animationUpdate() -> ()",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.AnimatedZoomViewJob.animationUpdate() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 92,
              "executionCount": 0,
              "name": "Charts.AnimatedZoomViewJob.animationEnd() -> ()",
              "executableLines": 4
            }
          ],
          "name": "AnimatedZoomViewJob.swift",
          "executableLines": 51
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/TriangleShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.TriangleShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 44
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.TriangleShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 1
            }
          ],
          "name": "TriangleShapeRenderer.swift",
          "executableLines": 45
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/XShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.XShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 14
            }
          ],
          "name": "XShapeRenderer.swift",
          "executableLines": 14
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Renderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.Renderer.init(viewPortHandler: Charts.ViewPortHandler) -> Charts.Renderer",
              "executableLines": 4
            }
          ],
          "name": "Renderer.swift",
          "executableLines": 4
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/LineChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.LineChartData.init() -> Charts.LineChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "Charts.LineChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.LineChartData",
              "executableLines": 3
            }
          ],
          "name": "LineChartData.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/ChartViewBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.xAxis.getter : Charts.XAxis",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartViewBase._defaultValueFormatter : Swift.Optional<Charts.IValueFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartViewBase.noDataFont : __C.UIFont",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartViewBase.noDataTextColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 104,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartViewBase.noDataTextAlignment : __C.NSTextAlignment",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 123,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartViewBase._indicesToHighlight : Swift.Array<Charts.Highlight>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.isDrawMarkersEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.setExtraOffsets(left: CoreGraphics.CGFloat, top: CoreGraphics.CGFloat, right: CoreGraphics.CGFloat, bottom: CoreGraphics.CGFloat) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 161,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.init(frame: __C.CGRect) -> Charts.ChartViewBase",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.init(coder: __C.NSCoder) -> Swift.Optional<Charts.ChartViewBase>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 173,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.__deallocating_deinit",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 179,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.initialize() -> ()",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 206,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.data.getter : Swift.Optional<Charts.ChartData>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 210,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.data.setter : Swift.Optional<Charts.ChartData>",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 225,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartViewBase.data.setter : Swift.Optional<Charts.ChartData>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 238,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.clear() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 249,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.clearValues() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 256,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.isEmpty() -> Swift.Bool",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 272,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.notifyDataSetChanged() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 273,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartViewBase.notifyDataSetChanged() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 278,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.calculateOffsets() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 279,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 284,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.calcMinMax() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 285,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ChartViewBase.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 290,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.setupDefaultFormatter(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 317,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 37
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 323,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartViewBase.draw(__C.CGRect) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 357,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.drawDescription(context: __C.CGContextRef) -> ()",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 366,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> __C.CGPoint in Charts.ChartViewBase.drawDescription(context: __C.CGContextRef) -> ()",
              "executableLines": 2
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 384,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.accessibilityChildren() -> Swift.Optional<Swift.Array<Any>>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 392,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlighted.getter : Swift.Array<Charts.Highlight>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 401,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightPerTapEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 402,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightPerTapEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 407,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.isHighLightPerTapEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 415,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.valuesToHighlight() -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 424,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValues(Swift.Optional<Swift.Array<Charts.Highlight>>) -> ()",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 426,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Array<Charts.Highlight> in Charts.ChartViewBase.highlightValues(Swift.Optional<Swift.Array<Charts.Highlight>>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 450,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValue(x: Swift.Double, dataSetIndex: Swift.Int, dataIndex: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 464,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValue(x: Swift.Double, y: Swift.Double, dataSetIndex: Swift.Int, dataIndex: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 477,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValue(x: Swift.Double, dataSetIndex: Swift.Int, dataIndex: Swift.Int, callDelegate: Swift.Bool) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 491,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValue(x: Swift.Double, y: Swift.Double, dataSetIndex: Swift.Int, dataIndex: Swift.Int, callDelegate: Swift.Bool) -> ()",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 498,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartViewBase.highlightValue(x: Swift.Double, y: Swift.Double, dataSetIndex: Swift.Int, dataIndex: Swift.Int, callDelegate: Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 514,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValue(Swift.Optional<Charts.Highlight>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 520,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.highlightValue(_: Swift.Optional<Charts.Highlight>, callDelegate: Swift.Bool) -> ()",
              "executableLines": 40
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 565,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.getHighlightByTouchPoint(__C.CGPoint) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 582,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.drawMarkers(context: __C.CGContextRef) -> ()",
              "executableLines": 38
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 587,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartViewBase.drawMarkers(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 623,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.getMarkerPosition(highlight: Charts.Highlight) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 631,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.chartAnimator.getter : Swift.Optional<Charts.Animator>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 644,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingX: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>, easingY: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 657,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingOptionX: Charts.ChartEasingOption, easingOptionY: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 669,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 681,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 692,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, yAxisDuration: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 703,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 714,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 724,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(xAxisDuration: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 735,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(yAxisDuration: Swift.Double, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 746,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(yAxisDuration: Swift.Double, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 756,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animate(yAxisDuration: Swift.Double) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 764,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.chartYMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 765,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.ChartViewBase.chartYMax.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 770,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.chartYMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 771,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.ChartViewBase.chartYMin.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 775,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.chartXMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 780,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.chartXMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 785,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.xRange.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 792,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.midPoint.getter : __C.CGPoint",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 799,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.centerOffsets.getter : __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 805,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.legend.getter : Charts.Legend",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 811,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.legendRenderer.getter : Swift.Optional<Charts.LegendRenderer>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 817,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.contentRect.getter : __C.CGRect",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 824,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.viewPortHandler.getter : Swift.Optional<Charts.ViewPortHandler>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 830,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.getChartImage(transparent: Swift.Bool) -> Swift.Optional<__C.UIImage>",
              "executableLines": 29
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 831,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartViewBase.getChartImage(transparent: Swift.Bool) -> Swift.Optional<__C.UIImage>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 831,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> CoreGraphics.CGFloat in Charts.ChartViewBase.getChartImage(transparent: Swift.Bool) -> Swift.Optional<__C.UIImage>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 838,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.ChartViewBase.getChartImage(transparent: Swift.Bool) -> Swift.Optional<__C.UIImage>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 877,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.save(to: Swift.String, format: Charts.ChartViewBase.ImageFormat, compressionQuality: Swift.Double) -> Swift.Bool",
              "executableLines": 23
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 901,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartViewBase._viewportJobs : Swift.Array<Charts.ViewPortJob>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 904,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 905,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 910,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.ChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 2
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 911,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in implicit closure #2 () throws -> Swift.Bool in Charts.ChartViewBase.observeValue(forKeyPath: Swift.Optional<Swift.String>, of: Swift.Optional<Any>, change: Swift.Optional<Swift.Dictionary<__C.NSKeyValueChangeKey, Any>>, context: Swift.Optional<Swift.UnsafeMutableRawPointer>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 930,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.removeViewportJob(Charts.ViewPortJob) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 931,
              "executionCount": 0,
              "name": "closure #1 (Charts.ViewPortJob) -> Swift.Bool in Charts.ChartViewBase.removeViewportJob(Charts.ViewPortJob) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 938,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.clearAllViewportJobs() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 943,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.addViewportJob(Charts.ViewPortJob) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 957,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.isDragDecelerationEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 968,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.dragDecelerationFrictionCoef.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 972,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.dragDecelerationFrictionCoef.setter : CoreGraphics.CGFloat",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 993,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.maxVisibleCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1000,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animatorUpdated(Charts.Animator) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1005,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.animatorStopped(Charts.Animator) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1012,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.nsuiTouchesBegan(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1020,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.nsuiTouchesMoved(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1028,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.nsuiTouchesEnded(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 1036,
              "executionCount": 0,
              "name": "Charts.ChartViewBase.nsuiTouchesCancelled(_: Swift.Optional<Swift.Set<__C.UITouch>>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 6
            }
          ],
          "name": "ChartViewBase.swift",
          "executableLines": 579
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/PieRadarHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.PieRadarHighlighter.getHighlight(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 32
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarHighlighter.getHighlight(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Int in implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarHighlighter.getHighlight(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "Charts.PieRadarHighlighter.closestHighlight(index: Swift.Int, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.PieRadarHighlighter.closestHighlight(index: Swift.Int, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 1
            }
          ],
          "name": "PieRadarHighlighter.swift",
          "executableLines": 38
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/ScatterChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.ScatterChartView.initialize() -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.ScatterChartView.scatterData.getter : Swift.Optional<Charts.ScatterChartData>",
              "executableLines": 1
            }
          ],
          "name": "ScatterChartView.swift",
          "executableLines": 9
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/BarLineScatterCandleBubbleRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarLineScatterCandleBubbleRenderer._xBounds : Charts.BarLineScatterCandleBubbleRenderer.XBounds",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.init(animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.BarLineScatterCandleBubbleRenderer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.isInBoundsX(entry: Charts.ChartDataEntry, dataSet: Charts.IBarLineScatterCandleBubbleChartDataSet) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.xBounds(chart: Charts.BarLineScatterCandleBubbleChartDataProvider, dataSet: Charts.IBarLineScatterCandleBubbleChartDataSet, animator: Swift.Optional<Charts.Animator>) -> Charts.BarLineScatterCandleBubbleRenderer.XBounds",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.shouldDrawValues(forDataSet: Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.BarLineScatterCandleBubbleRenderer.shouldDrawValues(forDataSet: Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in implicit closure #1 () throws -> Swift.Bool in Charts.BarLineScatterCandleBubbleRenderer.shouldDrawValues(forDataSet: Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.init() -> Charts.BarLineScatterCandleBubbleRenderer.XBounds",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 67,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.init(chart: Charts.BarLineScatterCandleBubbleChartDataProvider, dataSet: Charts.IBarLineScatterCandleBubbleChartDataSet, animator: Swift.Optional<Charts.Animator>) -> Charts.BarLineScatterCandleBubbleRenderer.XBounds",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.set(chart: Charts.BarLineScatterCandleBubbleChartDataProvider, dataSet: Charts.IBarLineScatterCandleBubbleChartDataSet, animator: Swift.Optional<Charts.Animator>) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in Charts.BarLineScatterCandleBubbleRenderer.XBounds.set(chart: Charts.BarLineScatterCandleBubbleChartDataProvider, dataSet: Charts.IBarLineScatterCandleBubbleChartDataSet, animator: Swift.Optional<Charts.Animator>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 94,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.relative<A where A: Swift.Collection, A.Index == Swift.Int>(to: A) -> Swift.Range<Swift.Int>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.contains(Swift.Int) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 107,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.Iterator.init(min: Swift.Int, max: Swift.Int) -> Charts.BarLineScatterCandleBubbleRenderer.XBounds.Iterator",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 111,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.Iterator.next() -> Swift.Optional<Swift.Int>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 116,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.makeIterator() -> Charts.BarLineScatterCandleBubbleRenderer.XBounds.Iterator",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleRenderer.XBounds.debugDescription.getter : Swift.String",
              "executableLines": 3
            }
          ],
          "name": "BarLineScatterCandleBubbleRenderer.swift",
          "executableLines": 54
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/RadarChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartData.highlightColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartData.highlightLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartData.highlightLineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartData.labels : Swift.Array<Swift.String>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.RadarChartData.setLabels(Swift.String...) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.RadarChartData.init() -> Charts.RadarChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "Charts.RadarChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.RadarChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.RadarChartData.entryForHighlight(Charts.Highlight) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 3
            }
          ],
          "name": "RadarChartData.swift",
          "executableLines": 16
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/ChartDataEntryBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.init() -> Charts.ChartDataEntryBase",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.init(y: Swift.Double) -> Charts.ChartDataEntryBase",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.init(y: Swift.Double, data: Swift.Optional<Any>) -> Charts.ChartDataEntryBase",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.init(y: Swift.Double, icon: Swift.Optional<__C.UIImage>) -> Charts.ChartDataEntryBase",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 69,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.init(y: Swift.Double, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.ChartDataEntryBase",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 79,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.description.getter : Swift.String",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 86,
              "executionCount": 0,
              "name": "Charts.ChartDataEntryBase.isEqual(Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 10
            }
          ],
          "name": "ChartDataEntryBase.swift",
          "executableLines": 37
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/LineRadarRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.LineRadarRenderer.init(animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.LineRadarRenderer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.LineRadarRenderer.drawFilledPath(context: __C.CGContextRef, path: __C.CGPathRef, fill: Charts.Fill, fillAlpha: CoreGraphics.CGFloat) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "Charts.LineRadarRenderer.drawFilledPath(context: __C.CGContextRef, path: __C.CGPathRef, fillColor: __C.UIColor, fillAlpha: CoreGraphics.CGFloat) -> ()",
              "executableLines": 13
            }
          ],
          "name": "LineRadarRenderer.swift",
          "executableLines": 29
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/LineRadarChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineRadarChartDataSet.(_fillColor in _9FDB9A913D89103EA6D4E476F8166E15) : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.LineRadarChartDataSet.fillColor.getter : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.LineRadarChartDataSet.fillColor.setter : __C.UIColor",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineRadarChartDataSet.fillAlpha : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineRadarChartDataSet.(_lineWidth in _9FDB9A913D89103EA6D4E476F8166E15) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "Charts.LineRadarChartDataSet.lineWidth.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.LineRadarChartDataSet.lineWidth.setter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "Charts.LineRadarChartDataSet.isDrawFilledEnabled.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "Charts.LineRadarChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 9
            }
          ],
          "name": "LineRadarChartDataSet.swift",
          "executableLines": 26
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/Platform.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UITapGestureRecognizer.nsuiNumberOfTouches() -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UITapGestureRecognizer.nsuiNumberOfTapsRequired.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UITapGestureRecognizer.nsuiNumberOfTapsRequired.setter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIPanGestureRecognizer.nsuiNumberOfTouches() -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIPanGestureRecognizer.nsuiLocationOfTouch(_: Swift.Int, inView: Swift.Optional<__C.UIView>) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIRotationGestureRecognizer.nsuiRotation.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 69,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIRotationGestureRecognizer.nsuiRotation.setter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIPinchGestureRecognizer.nsuiScale.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 84,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIPinchGestureRecognizer.nsuiScale.setter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIPinchGestureRecognizer.nsuiLocationOfTouch(_: Swift.Int, inView: Swift.Optional<__C.UIView>) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 99,
              "executionCount": 0,
              "name": "Charts.NSUIView.touchesBegan(_: Swift.Set<__C.UITouch>, with: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 104,
              "executionCount": 0,
              "name": "Charts.NSUIView.touchesMoved(_: Swift.Set<__C.UITouch>, with: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 109,
              "executionCount": 0,
              "name": "Charts.NSUIView.touchesEnded(_: Swift.Set<__C.UITouch>, with: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 114,
              "executionCount": 0,
              "name": "Charts.NSUIView.touchesCancelled(_: Swift.Set<__C.UITouch>, with: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "Charts.NSUIView.nsuiTouchesBegan(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "Charts.NSUIView.nsuiTouchesMoved(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 129,
              "executionCount": 0,
              "name": "Charts.NSUIView.nsuiTouchesEnded(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 134,
              "executionCount": 0,
              "name": "Charts.NSUIView.nsuiTouchesCancelled(_: Swift.Optional<Swift.Set<__C.UITouch>>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "Charts.NSUIView.nsuiLayer.getter : Swift.Optional<__C.CALayer>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 147,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIView.nsuiGestureRecognizers.getter : Swift.Optional<Swift.Array<__C.UIGestureRecognizer>>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 156,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIScrollView.nsuiIsScrollEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 157,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIScrollView.nsuiIsScrollEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 164,
              "executionCount": 0,
              "name": "(extension in Charts):__C.UIScreen.nsuiScale.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 170,
              "executionCount": 0,
              "name": "Charts.NSUIGraphicsGetCurrentContext() -> Swift.Optional<__C.CGContextRef>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 175,
              "executionCount": 0,
              "name": "Charts.NSUIGraphicsGetImageFromCurrentImageContext() -> Swift.Optional<__C.UIImage>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 180,
              "executionCount": 0,
              "name": "Charts.NSUIGraphicsPushContext(__C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 185,
              "executionCount": 0,
              "name": "Charts.NSUIGraphicsPopContext() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 190,
              "executionCount": 0,
              "name": "Charts.NSUIGraphicsEndImageContext() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 195,
              "executionCount": 0,
              "name": "Charts.NSUIImagePNGRepresentation(__C.UIImage) -> Swift.Optional<Foundation.Data>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 200,
              "executionCount": 0,
              "name": "Charts.NSUIImageJPEGRepresentation(__C.UIImage, CoreGraphics.CGFloat) -> Swift.Optional<Foundation.Data>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 205,
              "executionCount": 0,
              "name": "Charts.NSUIMainScreen() -> Swift.Optional<__C.UIScreen>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 210,
              "executionCount": 0,
              "name": "Charts.NSUIGraphicsBeginImageContextWithOptions(__C.CGSize, Swift.Bool, CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            }
          ],
          "name": "Platform.swift",
          "executableLines": 88
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BarLineScatterCandleBubbleChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleChartData.init() -> Charts.BarLineScatterCandleBubbleChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.BarLineScatterCandleBubbleChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.BarLineScatterCandleBubbleChartData",
              "executableLines": 3
            }
          ],
          "name": "BarLineScatterCandleBubbleChartData.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/BarChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.BarChartView.initialize() -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "Charts.BarChartView.calcMinMax() -> ()",
              "executableLines": 23
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.BarChartView.getHighlightByTouchPoint(__C.CGPoint) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "Charts.BarChartView.getBarBounds(entry: Charts.BarChartDataEntry) -> __C.CGRect",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "Charts.BarChartView.groupBars(fromX: Swift.Double, groupSpace: Swift.Double, barSpace: Swift.Double) -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 138,
              "executionCount": 0,
              "name": "Charts.BarChartView.highlightValue(x: Swift.Double, dataSetIndex: Swift.Int, stackIndex: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 147,
              "executionCount": 0,
              "name": "Charts.BarChartView.drawValueAboveBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "Charts.BarChartView.drawValueAboveBarEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "Charts.BarChartView.drawBarShadowEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 160,
              "executionCount": 0,
              "name": "Charts.BarChartView.drawBarShadowEnabled.setter : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 175,
              "executionCount": 0,
              "name": "Charts.BarChartView.isHighlightFullBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 179,
              "executionCount": 0,
              "name": "Charts.BarChartView.barData.getter : Swift.Optional<Charts.BarChartData>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 182,
              "executionCount": 0,
              "name": "Charts.BarChartView.isDrawValueAboveBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 185,
              "executionCount": 0,
              "name": "Charts.BarChartView.isDrawBarShadowEnabled.getter : Swift.Bool",
              "executableLines": 1
            }
          ],
          "name": "BarChartView.swift",
          "executableLines": 104
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/ChartUtils.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "(extension in Charts):Swift.Comparable.clamped(to: Swift.ClosedRange<A>) -> A",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "(extension in Charts):Swift.FloatingPoint.DEG2RAD.getter : A",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "(extension in Charts):Swift.FloatingPoint.RAD2DEG.getter : A",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "(extension in Charts):Swift.FloatingPoint.normalizedAngle.getter : A",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "(extension in Charts):__C.CGSize.rotatedBy(degrees: CoreGraphics.CGFloat) -> __C.CGSize",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "(extension in Charts):__C.CGSize.rotatedBy(radians: CoreGraphics.CGFloat) -> __C.CGSize",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "(extension in Charts):Swift.Double.roundedToNextSignficant() -> Swift.Double",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 92,
              "executionCount": 0,
              "name": "(extension in Charts):Swift.Double.decimalPlaces.getter : Swift.Int",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 114,
              "executionCount": 0,
              "name": "(extension in Charts):__C.CGPoint.moving(distance: CoreGraphics.CGFloat, atAngle: CoreGraphics.CGFloat) -> __C.CGPoint",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 130,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.drawImage(context: __C.CGContextRef, image: __C.UIImage, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, size: __C.CGSize) -> ()",
              "executableLines": 36
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 137,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.ChartUtils.drawImage(context: __C.CGContextRef, image: __C.UIImage, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, size: __C.CGSize) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 168,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.drawText(context: __C.CGContextRef, text: Swift.String, point: __C.CGPoint, align: __C.NSTextAlignment, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 188,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.drawText(context: __C.CGContextRef, text: Swift.String, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 50
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 204,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.ChartUtils.drawText(context: __C.CGContextRef, text: Swift.String, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 222,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in static Charts.ChartUtils.drawText(context: __C.CGContextRef, text: Swift.String, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 240,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.drawMultilineText(context: __C.CGContextRef, text: Swift.String, knownTextSize: __C.CGSize, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, constrainedToSize: __C.CGSize, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 46
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 254,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.ChartUtils.drawMultilineText(context: __C.CGContextRef, text: Swift.String, knownTextSize: __C.CGSize, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, constrainedToSize: __C.CGSize, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 272,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in static Charts.ChartUtils.drawMultilineText(context: __C.CGContextRef, text: Swift.String, knownTextSize: __C.CGSize, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, constrainedToSize: __C.CGSize, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 288,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.drawMultilineText(context: __C.CGContextRef, text: Swift.String, point: __C.CGPoint, attributes: Swift.Optional<Swift.Dictionary<__C.NSAttributedStringKey, Any>>, constrainedToSize: __C.CGSize, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 294,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.(generateDefaultValueFormatter in _6706D170957598AE771A5250E7DF6F7D)() -> Charts.IValueFormatter",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 301,
              "executionCount": 0,
              "name": "static Charts.ChartUtils.defaultValueFormatter() -> Charts.IValueFormatter",
              "executableLines": 3
            }
          ],
          "name": "ChartUtils.swift",
          "executableLines": 228
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Formatters/IndexAxisValueFormatter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.IndexAxisValueFormatter.(_values in _D0F8752F0A58369B66BABCE662400586) : Swift.Array<Swift.String>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "Charts.IndexAxisValueFormatter.values.getter : Swift.Array<Swift.String>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.IndexAxisValueFormatter.values.setter : Swift.Array<Swift.String>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.IndexAxisValueFormatter.init() -> Charts.IndexAxisValueFormatter",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "Charts.IndexAxisValueFormatter.init(values: Swift.Array<Swift.String>) -> Charts.IndexAxisValueFormatter",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "static Charts.IndexAxisValueFormatter.with(values: Swift.Array<Swift.String>) -> Swift.Optional<Charts.IndexAxisValueFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "Charts.IndexAxisValueFormatter.stringForValue(_: Swift.Double, axis: Swift.Optional<Charts.AxisBase>) -> Swift.String",
              "executableLines": 5
            }
          ],
          "name": "IndexAxisValueFormatter.swift",
          "executableLines": 25
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/ChevronUpShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.ChevronUpShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 14
            }
          ],
          "name": "ChevronUpShapeRenderer.swift",
          "executableLines": 14
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/MarkerView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.MarkerView.offset : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.MarkerView.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 28
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "Charts.MarkerView.refreshContent(entry: Charts.ChartDataEntry, highlight: Charts.Highlight) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "Charts.MarkerView.draw(context: __C.CGContextRef, point: __C.CGPoint) -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "static Charts.MarkerView.viewFromXib(in: __C.NSBundle) -> Swift.Optional<Charts.MarkerView>",
              "executableLines": 23
            }
          ],
          "name": "MarkerView.swift",
          "executableLines": 66
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/Transformer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Transformer._matrixValueToPx : __C.CGAffineTransform",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.Transformer._matrixOffset : __C.CGAffineTransform",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.Transformer.init(viewPortHandler: Charts.ViewPortHandler) -> Charts.Transformer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.Transformer.prepareMatrixValuePx(chartXMin: Swift.Double, deltaX: CoreGraphics.CGFloat, deltaY: CoreGraphics.CGFloat, chartYMin: Swift.Double) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.Transformer.prepareMatrixOffset(inverted: Swift.Bool) -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.Transformer.pointValuesToPixel(inout Swift.Array<__C.CGPoint>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "closure #1 (__C.CGPoint) -> __C.CGPoint in Charts.Transformer.pointValuesToPixel(inout Swift.Array<__C.CGPoint>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "Charts.Transformer.pointValueToPixel(inout __C.CGPoint) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "Charts.Transformer.pixelForValues(x: Swift.Double, y: Swift.Double) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "Charts.Transformer.rectValueToPixel(inout __C.CGRect) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 93,
              "executionCount": 0,
              "name": "Charts.Transformer.rectValueToPixel(_: inout __C.CGRect, phaseY: Swift.Double) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 106,
              "executionCount": 0,
              "name": "Charts.Transformer.rectValueToPixelHorizontal(inout __C.CGRect) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 112,
              "executionCount": 0,
              "name": "Charts.Transformer.rectValueToPixelHorizontal(_: inout __C.CGRect, phaseY: Swift.Double) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 124,
              "executionCount": 0,
              "name": "Charts.Transformer.rectValuesToPixel(inout Swift.Array<__C.CGRect>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "closure #1 (__C.CGRect) -> __C.CGRect in Charts.Transformer.rectValuesToPixel(inout Swift.Array<__C.CGRect>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "Charts.Transformer.pixelsToValues(inout Swift.Array<__C.CGPoint>) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 133,
              "executionCount": 0,
              "name": "closure #1 (__C.CGPoint) -> __C.CGPoint in Charts.Transformer.pixelsToValues(inout Swift.Array<__C.CGPoint>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 138,
              "executionCount": 0,
              "name": "Charts.Transformer.pixelToValues(inout __C.CGPoint) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 146,
              "executionCount": 0,
              "name": "Charts.Transformer.valueForTouchPoint(__C.CGPoint) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 154,
              "executionCount": 0,
              "name": "Charts.Transformer.valueForTouchPoint(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> __C.CGPoint",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 159,
              "executionCount": 0,
              "name": "Charts.Transformer.valueToPixelMatrix.getter : __C.CGAffineTransform",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "Charts.Transformer.pixelToValueMatrix.getter : __C.CGAffineTransform",
              "executableLines": 3
            }
          ],
          "name": "Transformer.swift",
          "executableLines": 98
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/ChartHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.init(chart: Charts.ChartDataProvider) -> Charts.ChartHighlighter",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getHighlight(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getValsForTouch(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> __C.CGPoint",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getHighlight(xValue: Swift.Double, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 15
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getHighlights(xValue: Swift.Double, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Array<Charts.Highlight>",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.buildHighlights(dataSet: Charts.IChartDataSet, dataSetIndex: Swift.Int, xValue: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Array<Charts.Highlight>",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "closure #1 (Charts.ChartDataEntry) -> Charts.Highlight in Charts.ChartHighlighter.buildHighlights(dataSet: Charts.IChartDataSet, dataSetIndex: Swift.Int, xValue: Swift.Double, rounding: Charts.ChartDataSetRounding) -> Swift.Array<Charts.Highlight>",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.closestSelectionDetailByPixel(closestValues: Swift.Array<Charts.Highlight>, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, axis: Swift.Optional<Charts.YAxis.AxisDependency>, minSelectionDistance: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartHighlighter.closestSelectionDetailByPixel(closestValues: Swift.Array<Charts.Highlight>, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, axis: Swift.Optional<Charts.YAxis.AxisDependency>, minSelectionDistance: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getMinimumDistance(closestValues: Swift.Array<Charts.Highlight>, y: CoreGraphics.CGFloat, axis: Charts.YAxis.AxisDependency) -> CoreGraphics.CGFloat",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getHighlightPos(high: Charts.Highlight) -> CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 172,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.getDistance(x1: CoreGraphics.CGFloat, y1: CoreGraphics.CGFloat, x2: CoreGraphics.CGFloat, y2: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 177,
              "executionCount": 0,
              "name": "Charts.ChartHighlighter.data.getter : Swift.Optional<Charts.ChartData>",
              "executableLines": 3
            }
          ],
          "name": "ChartHighlighter.swift",
          "executableLines": 115
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/Scatter/ChevronDownShapeRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.ChevronDownShapeRenderer.renderShape(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet, viewPortHandler: Charts.ViewPortHandler, point: __C.CGPoint, color: __C.UIColor) -> ()",
              "executableLines": 14
            }
          ],
          "name": "ChevronDownShapeRenderer.swift",
          "executableLines": 14
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/LineScatterCandleRadarChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.LineScatterCandleRadarChartDataSet.isHorizontalHighlightIndicatorEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "Charts.LineScatterCandleRadarChartDataSet.isVerticalHighlightIndicatorEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "Charts.LineScatterCandleRadarChartDataSet.setDrawHighlightIndicators(Swift.Bool) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.LineScatterCandleRadarChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 6
            }
          ],
          "name": "LineScatterCandleRadarChartDataSet.swift",
          "executableLines": 12
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/PieRadarChartViewBase.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieRadarChartViewBase.(_rotationAngle in _B0A8444250F42B47DB6E2BEEDD32FACD) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieRadarChartViewBase.(_rawRotationAngle in _B0A8444250F42B47DB6E2BEEDD32FACD) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieRadarChartViewBase.minOffset : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.init(frame: __C.CGRect) -> Charts.PieRadarChartViewBase",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.init(coder: __C.NSCoder) -> Swift.Optional<Charts.PieRadarChartViewBase>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.__deallocating_deinit",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.initialize() -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.calcMinMax() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.maxVisibleCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 83,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.PieRadarChartViewBase.maxVisibleCount.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 88,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.notifyDataSetChanged() -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 102,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 146
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 191,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 235,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.calculateOffsets() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 252,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.angleForPoint(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 282,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.getPosition(center: __C.CGPoint, dist: CoreGraphics.CGFloat, angle: CoreGraphics.CGFloat) -> __C.CGPoint",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 289,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.distanceToCenter(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 324,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 325,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.PieRadarChartViewBase.indexForAngle(CoreGraphics.CGFloat) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 335,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.rotationAngle.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 339,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.rotationAngle.setter : CoreGraphics.CGFloat",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 349,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.rawRotationAngle.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 355,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.diameter.getter : CoreGraphics.CGFloat",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 366,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.radius.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 367,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.PieRadarChartViewBase.radius.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 372,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.requiredLegendOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 373,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.PieRadarChartViewBase.requiredLegendOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 379,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.requiredBaseOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 380,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.PieRadarChartViewBase.requiredBaseOffset.getter : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 384,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.chartYMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 389,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.chartYMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 393,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.isRotationEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 405,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.rotationWithTwoFingers.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 409,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.rotationWithTwoFingers.setter : Swift.Bool",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 425,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.isRotationWithTwoFingers.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 435,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.spin(duration: Swift.Double, fromAngle: CoreGraphics.CGFloat, toAngle: CoreGraphics.CGFloat, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 442,
              "executionCount": 0,
              "name": "closure #1 () -> () in Charts.PieRadarChartViewBase.spin(duration: Swift.Double, fromAngle: CoreGraphics.CGFloat, toAngle: CoreGraphics.CGFloat, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 445,
              "executionCount": 0,
              "name": "closure #2 () -> () in Charts.PieRadarChartViewBase.spin(duration: Swift.Double, fromAngle: CoreGraphics.CGFloat, toAngle: CoreGraphics.CGFloat, easing: Swift.Optional<(Swift.Double, Swift.Double) -> Swift.Double>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 451,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.spin(duration: Swift.Double, fromAngle: CoreGraphics.CGFloat, toAngle: CoreGraphics.CGFloat, easingOption: Charts.ChartEasingOption) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 456,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.spin(duration: Swift.Double, fromAngle: CoreGraphics.CGFloat, toAngle: CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 461,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.stopSpinAnimation() -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 472,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieRadarChartViewBase.(_startAngle in _B0A8444250F42B47DB6E2BEEDD32FACD) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 480,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieRadarChartViewBase.(velocitySamples in _B0A8444250F42B47DB6E2BEEDD32FACD) : Swift.Array<Charts.PieRadarChartViewBase.(AngularVelocitySample in _B0A8444250F42B47DB6E2BEEDD32FACD)>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 487,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.processRotationGestureBegan(location: __C.CGPoint) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 501,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.processRotationGestureMoved(location: __C.CGPoint) -> ()",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 508,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.processRotationGestureMoved(location: __C.CGPoint) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 524,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.processRotationGestureEnded(location: __C.CGPoint) -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 543,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.processRotationGestureCancelled() -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 552,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.nsuiTouchesBegan(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 571,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.nsuiTouchesMoved(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 572,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.nsuiTouchesMoved(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 585,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.nsuiTouchesEnded(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 591,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.nsuiTouchesEnded(_: Swift.Set<__C.UITouch>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 604,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.nsuiTouchesCancelled(_: Swift.Optional<Swift.Set<__C.UITouch>>, withEvent: Swift.Optional<__C.UIEvent>) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 667,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(resetVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 672,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(sampleVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)(touchLocation: __C.CGPoint) -> ()",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 673,
              "executionCount": 0,
              "name": "closure #1 () -> Charts.PieRadarChartViewBase.(AngularVelocitySample in _B0A8444250F42B47DB6E2BEEDD32FACD) in Charts.PieRadarChartViewBase.(sampleVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)(touchLocation: __C.CGPoint) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 683,
              "executionCount": 0,
              "name": "closure #2 (Charts.PieRadarChartViewBase.(AngularVelocitySample in _B0A8444250F42B47DB6E2BEEDD32FACD)) -> Swift.Bool in Charts.PieRadarChartViewBase.(sampleVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)(touchLocation: __C.CGPoint) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 691,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(calculateVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> CoreGraphics.CGFloat",
              "executableLines": 37
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 697,
              "executionCount": 0,
              "name": "closure #1 (Charts.PieRadarChartViewBase.(AngularVelocitySample in _B0A8444250F42B47DB6E2BEEDD32FACD)) -> Swift.Bool in Charts.PieRadarChartViewBase.(calculateVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 698,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Charts.PieRadarChartViewBase.(AngularVelocitySample in _B0A8444250F42B47DB6E2BEEDD32FACD) in Charts.PieRadarChartViewBase.(calculateVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 701,
              "executionCount": 0,
              "name": "closure #2 () -> CoreGraphics.CGFloat in Charts.PieRadarChartViewBase.(calculateVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> CoreGraphics.CGFloat",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 708,
              "executionCount": 0,
              "name": "closure #3 () -> Swift.Bool in Charts.PieRadarChartViewBase.(calculateVelocity in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> CoreGraphics.CGFloat",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 731,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(setGestureStartAngle in _B0A8444250F42B47DB6E2BEEDD32FACD)(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 740,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(updateGestureRotation in _B0A8444250F42B47DB6E2BEEDD32FACD)(x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 745,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.stopDeceleration() -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 754,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(decelerationLoop in _B0A8444250F42B47DB6E2BEEDD32FACD)() -> ()",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 773,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(distance in _B0A8444250F42B47DB6E2BEEDD32FACD)(eventX: CoreGraphics.CGFloat, startX: CoreGraphics.CGFloat, eventY: CoreGraphics.CGFloat, startY: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 781,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(distance in _B0A8444250F42B47DB6E2BEEDD32FACD)(from: __C.CGPoint, to: __C.CGPoint) -> CoreGraphics.CGFloat",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 791,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(tapGestureRecognized in _B0A8444250F42B47DB6E2BEEDD32FACD)(__C.UITapGestureRecognizer) -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 805,
              "executionCount": 0,
              "name": "Charts.PieRadarChartViewBase.(rotationGestureRecognized in _B0A8444250F42B47DB6E2BEEDD32FACD)(__C.UIRotationGestureRecognizer) -> ()",
              "executableLines": 37
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 813,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.PieRadarChartViewBase.(rotationGestureRecognized in _B0A8444250F42B47DB6E2BEEDD32FACD)(__C.UIRotationGestureRecognizer) -> ()",
              "executableLines": 1
            }
          ],
          "name": "PieRadarChartViewBase.swift",
          "executableLines": 622
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/LegendEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.LegendEntry.init() -> Charts.LegendEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "Charts.LegendEntry.init(label: Swift.Optional<Swift.String>, form: Charts.Legend.Form, formSize: CoreGraphics.CGFloat, formLineWidth: CoreGraphics.CGFloat, formLineDashPhase: CoreGraphics.CGFloat, formLineDashLengths: Swift.Optional<Swift.Array<CoreGraphics.CGFloat>>, formColor: Swift.Optional<__C.UIColor>) -> Charts.LegendEntry",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LegendEntry.form : Charts.Legend.Form",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LegendEntry.formSize : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LegendEntry.formLineWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            }
          ],
          "name": "LegendEntry.swift",
          "executableLines": 15
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/ChartColorTemplates.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.liberty() -> Swift.Array<__C.UIColor>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.joyful() -> Swift.Array<__C.UIColor>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.pastel() -> Swift.Array<__C.UIColor>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.colorful() -> Swift.Array<__C.UIColor>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.vordiplom() -> Swift.Array<__C.UIColor>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 73,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.material() -> Swift.Array<__C.UIColor>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 83,
              "executionCount": 0,
              "name": "static Charts.ChartColorTemplates.colorFromString(Swift.String) -> __C.UIColor",
              "executableLines": 115
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static Charts.ChartColorTemplates.colorFromString(Swift.String) -> __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 100,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in static Charts.ChartColorTemplates.colorFromString(Swift.String) -> __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in static Charts.ChartColorTemplates.colorFromString(Swift.String) -> __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in static Charts.ChartColorTemplates.colorFromString(Swift.String) -> __C.UIColor",
              "executableLines": 1
            }
          ],
          "name": "ChartColorTemplates.swift",
          "executableLines": 172
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/YAxis.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.zeroLineColor : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.zeroLineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.spaceTop : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.spaceBottom : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.labelPosition : Charts.YAxis.LabelPosition",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.labelAlignment : __C.NSTextAlignment",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.(_axisDependency in _D353D02F3E9104F0A7130BB40706DAB8) : Charts.YAxis.AxisDependency",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 92,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.minWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 98,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxis.maxWidth : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "Charts.YAxis.init() -> Charts.YAxis",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "Charts.YAxis.init(position: Charts.YAxis.AxisDependency) -> Charts.YAxis",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 117,
              "executionCount": 0,
              "name": "Charts.YAxis.axisDependency.getter : Charts.YAxis.AxisDependency",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 122,
              "executionCount": 0,
              "name": "Charts.YAxis.requiredSize() -> __C.CGSize",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 132,
              "executionCount": 0,
              "name": "Charts.YAxis.getRequiredHeightSpace() -> CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 138,
              "executionCount": 0,
              "name": "Charts.YAxis.needsOffset.getter : Swift.Bool",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxis.needsOffset.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.YAxis.needsOffset.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "Charts.YAxis.isInverted.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 152,
              "executionCount": 0,
              "name": "Charts.YAxis.calculate(min: Swift.Double, max: Swift.Double) -> ()",
              "executableLines": 49
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 202,
              "executionCount": 0,
              "name": "Charts.YAxis.isDrawBottomYLabelEntryEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 204,
              "executionCount": 0,
              "name": "Charts.YAxis.isDrawTopYLabelEntryEnabled.getter : Swift.Bool",
              "executableLines": 1
            }
          ],
          "name": "YAxis.swift",
          "executableLines": 99
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/BarChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.(initialize in _2ED8FDC6880ADC14EAA682F9F6F0A42A)() -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.init() -> Charts.BarChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.BarChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.(calcEntryCountIncludingStacks in _2ED8FDC6880ADC14EAA682F9F6F0A42A)(entries: Swift.Array<Charts.BarChartDataEntry>) -> ()",
              "executableLines": 15
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.(calcStackSize in _2ED8FDC6880ADC14EAA682F9F6F0A42A)(entries: Swift.Array<Charts.BarChartDataEntry>) -> ()",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.calcMinMax(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 34
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.stackSize.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.isStacked.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.entryCountStacks.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 136,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartDataSet.stackLabels : Swift.Array<Swift.String>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 141,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartDataSet.barShadowColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 147,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartDataSet.barBorderColor : __C.UIColor",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 150,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.BarChartDataSet.highlightAlpha : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 155,
              "executionCount": 0,
              "name": "Charts.BarChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 12
            }
          ],
          "name": "BarChartDataSet.swift",
          "executableLines": 100
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Highlight/RadarHighlighter.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.RadarHighlighter.closestHighlight(index: Swift.Int, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> Swift.Optional<Charts.Highlight>",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "Charts.RadarHighlighter.getHighlights(forIndex: Swift.Int) -> Swift.Array<Charts.Highlight>",
              "executableLines": 31
            }
          ],
          "name": "RadarHighlighter.swift",
          "executableLines": 53
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/ChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 16,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._yMax : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._yMin : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._xMax : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._xMin : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._leftAxisMax : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._leftAxisMin : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._rightAxisMax : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._rightAxisMin : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ChartData._dataSets : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.ChartData.init() -> Charts.ChartData",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "Charts.ChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.ChartData",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Array<Charts.IChartDataSet> in Charts.ChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.ChartData",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.ChartData.init(dataSet: Swift.Optional<Charts.IChartDataSet>) -> Charts.ChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.ChartData.initialize(dataSets: Swift.Array<Charts.IChartDataSet>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.ChartData.notifyDataChanged() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 61,
              "executionCount": 0,
              "name": "Charts.ChartData.calcMinMaxY(fromX: Swift.Double, toX: Swift.Double) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.calcMinMaxY(fromX: Swift.Double, toX: Swift.Double) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 69,
              "executionCount": 0,
              "name": "Charts.ChartData.calcMinMax() -> ()",
              "executableLines": 63
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.calcMinMax() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 135,
              "executionCount": 0,
              "name": "Charts.ChartData.calcMinMax(entry: Charts.ChartDataEntry, axis: Charts.YAxis.AxisDependency) -> ()",
              "executableLines": 46
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 184,
              "executionCount": 0,
              "name": "Charts.ChartData.calcMinMax(dataSet: Charts.IChartDataSet) -> ()",
              "executableLines": 46
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 233,
              "executionCount": 0,
              "name": "Charts.ChartData.dataSetCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 239,
              "executionCount": 0,
              "name": "Charts.ChartData.yMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 245,
              "executionCount": 0,
              "name": "Charts.ChartData.getYMin() -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 250,
              "executionCount": 0,
              "name": "Charts.ChartData.getYMin(axis: Charts.YAxis.AxisDependency) -> Swift.Double",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 277,
              "executionCount": 0,
              "name": "Charts.ChartData.yMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 283,
              "executionCount": 0,
              "name": "Charts.ChartData.getYMax() -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 288,
              "executionCount": 0,
              "name": "Charts.ChartData.getYMax(axis: Charts.YAxis.AxisDependency) -> Swift.Double",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 315,
              "executionCount": 0,
              "name": "Charts.ChartData.xMin.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 320,
              "executionCount": 0,
              "name": "Charts.ChartData.xMax.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 328,
              "executionCount": 0,
              "name": "Charts.ChartData.dataSets.getter : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 332,
              "executionCount": 0,
              "name": "Charts.ChartData.dataSets.setter : Swift.Array<Charts.IChartDataSet>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 348,
              "executionCount": 0,
              "name": "Charts.ChartData.getDataSetIndexByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Int",
              "executableLines": 15
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 352,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.getDataSetIndexByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Int",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 355,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.ChartData.getDataSetIndexByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 359,
              "executionCount": 0,
              "name": "closure #2 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.getDataSetIndexByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 360,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Int in Charts.ChartData.getDataSetIndexByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 370,
              "executionCount": 0,
              "name": "Charts.ChartData.entryForHighlight(Charts.Highlight) -> Swift.Optional<Charts.ChartDataEntry>",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 388,
              "executionCount": 0,
              "name": "Charts.ChartData.getDataSetByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 391,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartData.getDataSetByLabel(_: Swift.String, ignorecase: Swift.Bool) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 402,
              "executionCount": 0,
              "name": "Charts.ChartData.getDataSetByIndex(Swift.Int) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 403,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartData.getDataSetByIndex(Swift.Int) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 412,
              "executionCount": 0,
              "name": "Charts.ChartData.addDataSet(Swift.Optional<Charts.IChartDataSet>) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 423,
              "executionCount": 0,
              "name": "Charts.ChartData.removeDataSet(Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 424,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.removeDataSet(Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 433,
              "executionCount": 0,
              "name": "Charts.ChartData.removeDataSetByIndex(Swift.Int) -> Swift.Bool",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 434,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartData.removeDataSetByIndex(Swift.Int) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 448,
              "executionCount": 0,
              "name": "Charts.ChartData.addEntry(_: Charts.ChartDataEntry, dataSetIndex: Swift.Int) -> ()",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 449,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ChartData.addEntry(_: Charts.ChartDataEntry, dataSetIndex: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 465,
              "executionCount": 0,
              "name": "Charts.ChartData.removeEntry(_: Charts.ChartDataEntry, dataSetIndex: Swift.Int) -> Swift.Bool",
              "executableLines": 17
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 488,
              "executionCount": 0,
              "name": "Charts.ChartData.removeEntry(xValue: Swift.Double, dataSetIndex: Swift.Int) -> Swift.Bool",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 504,
              "executionCount": 0,
              "name": "Charts.ChartData.getDataSetForEntry(Charts.ChartDataEntry) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 505,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.getDataSetForEntry(Charts.ChartDataEntry) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 510,
              "executionCount": 0,
              "name": "Charts.ChartData.indexOfDataSet(Charts.IChartDataSet) -> Swift.Int",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 512,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.indexOfDataSet(Charts.IChartDataSet) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 512,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.ChartData.indexOfDataSet(Charts.IChartDataSet) -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 517,
              "executionCount": 0,
              "name": "Charts.ChartData.getFirstLeft(dataSets: Swift.Array<Charts.IChartDataSet>) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 518,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.getFirstLeft(dataSets: Swift.Array<Charts.IChartDataSet>) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 523,
              "executionCount": 0,
              "name": "Charts.ChartData.getFirstRight(dataSets: Swift.Array<Charts.IChartDataSet>) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 524,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.getFirstRight(dataSets: Swift.Array<Charts.IChartDataSet>) -> Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 529,
              "executionCount": 0,
              "name": "Charts.ChartData.getColors() -> Swift.Optional<Swift.Array<__C.UIColor>>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 531,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Array<__C.UIColor> in Charts.ChartData.getColors() -> Swift.Optional<Swift.Array<__C.UIColor>>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 536,
              "executionCount": 0,
              "name": "Charts.ChartData.setValueFormatter(Charts.IValueFormatter) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 537,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.setValueFormatter(Charts.IValueFormatter) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 542,
              "executionCount": 0,
              "name": "Charts.ChartData.setValueTextColor(__C.UIColor) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 543,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.setValueTextColor(__C.UIColor) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 548,
              "executionCount": 0,
              "name": "Charts.ChartData.setValueFont(__C.UIFont) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 549,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.setValueFont(__C.UIFont) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 554,
              "executionCount": 0,
              "name": "Charts.ChartData.setDrawValues(Swift.Bool) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 555,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.setDrawValues(Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 562,
              "executionCount": 0,
              "name": "Charts.ChartData.highlightEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 562,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.highlightEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 563,
              "executionCount": 0,
              "name": "Charts.ChartData.highlightEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 563,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> () in Charts.ChartData.highlightEnabled.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 567,
              "executionCount": 0,
              "name": "Charts.ChartData.isHighlightEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 572,
              "executionCount": 0,
              "name": "Charts.ChartData.clearValues() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 581,
              "executionCount": 0,
              "name": "Charts.ChartData.contains(dataSet: Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 582,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.contains(dataSet: Charts.IChartDataSet) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 587,
              "executionCount": 0,
              "name": "Charts.ChartData.entryCount.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 588,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int, Charts.IChartDataSet) -> Swift.Int in Charts.ChartData.entryCount.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 593,
              "executionCount": 0,
              "name": "Charts.ChartData.maxEntryCountSet.getter : Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 594,
              "executionCount": 0,
              "name": "closure #1 (Charts.IChartDataSet, Charts.IChartDataSet) -> Swift.Bool in Charts.ChartData.maxEntryCountSet.getter : Swift.Optional<Charts.IChartDataSet>",
              "executableLines": 1
            }
          ],
          "name": "ChartData.swift",
          "executableLines": 451
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/CandleChartData.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "Charts.CandleChartData.init() -> Charts.CandleChartData",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "Charts.CandleChartData.init(dataSets: Swift.Optional<Swift.Array<Charts.IChartDataSet>>) -> Charts.CandleChartData",
              "executableLines": 3
            }
          ],
          "name": "CandleChartData.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/CombinedChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CombinedChartRenderer._renderers : Swift.Array<Charts.DataRenderer>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CombinedChartRenderer._drawOrder : Swift.Array<Charts.CombinedChartView.DrawOrder>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.init(chart: Charts.CombinedChartView, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.CombinedChartRenderer",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.createRenderers() -> ()",
              "executableLines": 47
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.initBuffers() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "closure #1 (Charts.DataRenderer) -> () in Charts.CombinedChartRenderer.initBuffers() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 94,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 19
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 111,
              "executionCount": 0,
              "name": "closure #1 (Charts.DataRenderer) -> () in Charts.CombinedChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 115,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 116,
              "executionCount": 0,
              "name": "closure #1 (Charts.DataRenderer) -> () in Charts.CombinedChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 120,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 121,
              "executionCount": 0,
              "name": "closure #1 (Charts.DataRenderer) -> () in Charts.CombinedChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 38
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 151,
              "executionCount": 0,
              "name": "closure #1 () -> Swift.Optional<Swift.Int> in Charts.CombinedChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "closure #2 (Charts.Highlight) -> Swift.Bool in Charts.CombinedChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in closure #2 (Charts.Highlight) -> Swift.Bool in Charts.CombinedChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 166,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.getSubRenderer(index: Swift.Int) -> Swift.Optional<Charts.DataRenderer>",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 167,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.CombinedChartRenderer.getSubRenderer(index: Swift.Int) -> Swift.Optional<Charts.DataRenderer>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 180,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.subRenderers.getter : Swift.Array<Charts.DataRenderer>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 181,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.subRenderers.setter : Swift.Array<Charts.DataRenderer>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 187,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.isDrawValueAboveBarEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 190,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.isDrawBarShadowEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 198,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.drawOrder.getter : Swift.Array<Charts.CombinedChartView.DrawOrder>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 202,
              "executionCount": 0,
              "name": "Charts.CombinedChartRenderer.drawOrder.setter : Swift.Array<Charts.CombinedChartView.DrawOrder>",
              "executableLines": 6
            }
          ],
          "name": "CombinedChartRenderer.swift",
          "executableLines": 158
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/RadarChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "closure #1 () -> Swift.Array<Swift.String> in Charts.RadarChartRenderer.(accessibilityXLabels in _9175CE29851060A9AB46781EC43D9E41).getter : Swift.Array<Swift.String>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in closure #1 () -> Swift.Array<Swift.String> in Charts.RadarChartRenderer.(accessibilityXLabels in _9175CE29851060A9AB46781EC43D9E41).getter : Swift.Array<Swift.String>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int) -> Swift.String in closure #1 () -> Swift.Array<Swift.String> in Charts.RadarChartRenderer.(accessibilityXLabels in _9175CE29851060A9AB46781EC43D9E41).getter : Swift.Array<Swift.String>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.init(chart: Charts.RadarChartView, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.RadarChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.RadarChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 71,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 123
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 89,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.String in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.String in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 95,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int) -> (Swift.Double, Swift.Int) in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 95,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in closure #1 (Swift.Int) -> (Swift.Double, Swift.Int) in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 96,
              "executionCount": 0,
              "name": "closure #2 (Swift.String, (Swift.Double, Swift.Int)) -> (Swift.String, Swift.Double, Swift.Int) in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 96,
              "executionCount": 0,
              "name": "closure #3 ((Swift.String, Swift.Double, Swift.Int), (Swift.String, Swift.Double, Swift.Int)) -> Swift.Bool in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.String in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 135,
              "executionCount": 0,
              "name": "closure #4 (Charts.NSUIAccessibilityElement) -> () in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 168,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 181,
              "executionCount": 0,
              "name": "closure #5 (Charts.NSUIAccessibilityElement) -> () in Charts.RadarChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IRadarChartDataSet, mostEntries: Swift.Int) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 196,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 71
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 269,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 273,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartRenderer.(_webLineSegmentsBuffer in _9175CE29851060A9AB46781EC43D9E41) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 276,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawWeb(context: __C.CGContextRef) -> ()",
              "executableLines": 65
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 299,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.RadarChartRenderer.drawWeb(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 342,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.RadarChartRenderer.(_highlightPointBuffer in _9175CE29851060A9AB46781EC43D9E41) : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 345,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 80
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 399,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.RadarChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 434,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.drawHighlightCircle(context: __C.CGContextRef, atPoint: __C.CGPoint, innerRadius: CoreGraphics.CGFloat, outerRadius: CoreGraphics.CGFloat, fillColor: Swift.Optional<__C.UIColor>, strokeColor: Swift.Optional<__C.UIColor>, strokeWidth: CoreGraphics.CGFloat) -> ()",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 465,
              "executionCount": 0,
              "name": "Charts.RadarChartRenderer.(createAccessibleElement in _9175CE29851060A9AB46781EC43D9E41)(withDescription: Swift.String, container: Charts.RadarChartView, dataSet: Charts.IRadarChartDataSet, modifier: (Charts.NSUIAccessibilityElement) -> ()) -> Charts.NSUIAccessibilityElement",
              "executableLines": 10
            }
          ],
          "name": "RadarChartRenderer.swift",
          "executableLines": 446
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/YAxisRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.init(viewPortHandler: Charts.ViewPortHandler, yAxis: Swift.Optional<Charts.YAxis>, transformer: Swift.Optional<Charts.Transformer>) -> Charts.YAxisRenderer",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 53
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRenderer.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 88,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 38
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRenderer.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 134,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.drawYLabels(context: __C.CGContextRef, fixedPosition: CoreGraphics.CGFloat, positions: Swift.Array<__C.CGPoint>, offset: CoreGraphics.CGFloat, textAlign: __C.NSTextAlignment) -> ()",
              "executableLines": 24
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 160,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.renderGridLines(context: __C.CGContextRef) -> ()",
              "executableLines": 43
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 194,
              "executionCount": 0,
              "name": "closure #1 (__C.CGPoint) -> () in Charts.YAxisRenderer.renderGridLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 205,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.gridClippingRect.getter : __C.CGRect",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 207,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.YAxisRenderer.gridClippingRect.getter : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 216,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.drawGridLine(context: __C.CGContextRef, position: __C.CGPoint) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 224,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.transformedPositions() -> Swift.Array<__C.CGPoint>",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 247,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.drawZeroLine(context: __C.CGContextRef) -> ()",
              "executableLines": 33
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 282,
              "executionCount": 0,
              "name": "Charts.YAxisRenderer.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 112
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 342,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRenderer.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            }
          ],
          "name": "YAxisRenderer.swift",
          "executableLines": 344
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Charts/LineChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "Charts.LineChartView.initialize() -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.LineChartView.lineData.getter : Swift.Optional<Charts.LineChartData>",
              "executableLines": 1
            }
          ],
          "name": "LineChartView.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/ScatterChartRenderer.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.ScatterChartRenderer.init(dataProvider: Charts.ScatterChartDataProvider, animator: Charts.Animator, viewPortHandler: Charts.ViewPortHandler) -> Charts.ScatterChartRenderer",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.ScatterChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 32
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in Charts.ScatterChartRenderer.drawData(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 60,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.ScatterChartRenderer.(_lineSegments in _18CC0E518D0ADFF79158010D6F471F48) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 63,
              "executionCount": 0,
              "name": "Charts.ScatterChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet) -> ()",
              "executableLines": 46
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 94,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ScatterChartRenderer.drawDataSet(context: __C.CGContextRef, dataSet: Charts.IScatterChartDataSet) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 111,
              "executionCount": 0,
              "name": "Charts.ScatterChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 86
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 161,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.ScatterChartRenderer.drawValues(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 199,
              "executionCount": 0,
              "name": "Charts.ScatterChartRenderer.drawExtras(context: __C.CGContextRef) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 204,
              "executionCount": 0,
              "name": "Charts.ScatterChartRenderer.drawHighlighted(context: __C.CGContextRef, indices: Swift.Array<Charts.Highlight>) -> ()",
              "executableLines": 45
            }
          ],
          "name": "ScatterChartRenderer.swift",
          "executableLines": 221
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Components/MarkerImage.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.MarkerImage.offset : __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.MarkerImage.size : __C.CGSize",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "Charts.MarkerImage.init() -> Charts.MarkerImage",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 39
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 41,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> CoreGraphics.CGFloat in Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> CoreGraphics.CGFloat in Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 66,
              "executionCount": 0,
              "name": "implicit closure #6 () throws -> Swift.Bool in Charts.MarkerImage.offsetForDrawing(atPoint: __C.CGPoint) -> __C.CGPoint",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "Charts.MarkerImage.refreshContent(entry: Charts.ChartDataEntry, highlight: Charts.Highlight) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "Charts.MarkerImage.draw(context: __C.CGContextRef, point: __C.CGPoint) -> ()",
              "executableLines": 26
            }
          ],
          "name": "MarkerImage.swift",
          "executableLines": 79
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/CandleChartDataEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleChartDataEntry.high : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleChartDataEntry.low : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleChartDataEntry.close : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.CandleChartDataEntry.open : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.init() -> Charts.CandleChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.init(x: Swift.Double, shadowH: Swift.Double, shadowL: Swift.Double, open: Swift.Double, close: Swift.Double) -> Charts.CandleChartDataEntry",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.init(x: Swift.Double, shadowH: Swift.Double, shadowL: Swift.Double, open: Swift.Double, close: Swift.Double, icon: Swift.Optional<__C.UIImage>) -> Charts.CandleChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.init(x: Swift.Double, shadowH: Swift.Double, shadowL: Swift.Double, open: Swift.Double, close: Swift.Double, data: Swift.Optional<Any>) -> Charts.CandleChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.init(x: Swift.Double, shadowH: Swift.Double, shadowL: Swift.Double, open: Swift.Double, close: Swift.Double, icon: Swift.Optional<__C.UIImage>, data: Swift.Optional<Any>) -> Charts.CandleChartDataEntry",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 64,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.shadowRange.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 70,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.bodyRange.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.y.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.y.setter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "Charts.CandleChartDataEntry.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 8
            }
          ],
          "name": "CandleChartDataEntry.swift",
          "executableLines": 48
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/XAxisRendererHorizontalBarChart.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.init(viewPortHandler: Charts.ViewPortHandler, xAxis: Swift.Optional<Charts.XAxis>, transformer: Swift.Optional<Charts.Transformer>, chart: Charts.BarChartView) -> Charts.XAxisRendererHorizontalBarChart",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 56,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.computeSize() -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 34
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 113,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.drawLabels(context: __C.CGContextRef, pos: CoreGraphics.CGFloat, anchor: __C.CGPoint) -> ()",
              "executableLines": 48
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 170,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.drawLabel(context: __C.CGContextRef, formattedLabel: Swift.String, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat, attributes: Swift.Dictionary<__C.NSAttributedStringKey, Any>, anchor: __C.CGPoint, angleRadians: CoreGraphics.CGFloat) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 181,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.gridClippingRect.getter : __C.CGRect",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.XAxisRendererHorizontalBarChart.gridClippingRect.getter : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 189,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.XAxisRendererHorizontalBarChart.(_gridLineSegmentsBuffer in _027AD649790883FECA08B4B7C6AED9E2) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 192,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.drawGridLine(context: __C.CGContextRef, x: CoreGraphics.CGFloat, y: CoreGraphics.CGFloat) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 203,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 43
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 206,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 225,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 226,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 235,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 236,
              "executionCount": 0,
              "name": "implicit closure #5 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 248,
              "executionCount": 0,
              "name": "Charts.XAxisRendererHorizontalBarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 108
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 306,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.XAxisRendererHorizontalBarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            }
          ],
          "name": "XAxisRendererHorizontalBarChart.swift",
          "executableLines": 319
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/LineChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.(initialize in _2B6D54E2C711A523E32CA0EE3AFB8A08)() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.init() -> Charts.LineChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.LineChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.mode : Charts.LineChartDataSet.Mode",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.(_cubicIntensity in _2B6D54E2C711A523E32CA0EE3AFB8A08) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.cubicIntensity.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 66,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.cubicIntensity.setter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.circleRadius : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.circleHoleRadius : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.circleColors : Swift.Array<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.getCircleColor(atIndex: Swift.Int) -> Swift.Optional<__C.UIColor>",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 95,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.setCircleColor(__C.UIColor) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.setCircleColors(__C.UIColor...) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 108,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.resetCircleColors(Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 116,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.isDrawCirclesEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 119,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.circleHoleColor : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 125,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.isDrawCircleHoleEnabled.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 128,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.lineDashPhase : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 136,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.lineCapType : __C.CGLineCap",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.LineChartDataSet.(_fillFormatter in _2B6D54E2C711A523E32CA0EE3AFB8A08) : Charts.IFillFormatter",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 145,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.fillFormatter.getter : Swift.Optional<Charts.IFillFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.fillFormatter.setter : Swift.Optional<Charts.IFillFormatter>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 150,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Charts.IFillFormatter in Charts.LineChartDataSet.fillFormatter.setter : Swift.Optional<Charts.IFillFormatter>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 157,
              "executionCount": 0,
              "name": "Charts.LineChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 16
            }
          ],
          "name": "LineChartDataSet.swift",
          "executableLines": 72
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Utils/Platform+Accessibility.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 9,
              "executionCount": 0,
              "name": "Charts.accessibilityPostLayoutChangedNotification(withElement: Swift.Optional<Any>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 14,
              "executionCount": 0,
              "name": "Charts.accessibilityPostScreenChangedNotification(withElement: Swift.Optional<Any>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "Charts.NSUIAccessibilityElement.isHeader.didset : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "Charts.NSUIAccessibilityElement.isSelected.didset : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "Charts.NSUIAccessibilityElement.init(accessibilityContainer: Any) -> Charts.NSUIAccessibilityElement",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.NSUIAccessibilityElement.accessibilityFrame.getter : __C.CGRect",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "Charts.NSUIAccessibilityElement.accessibilityFrame.setter : __C.CGRect",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 66,
              "executionCount": 0,
              "name": "Charts.NSUIView.accessibilityChildren() -> Swift.Optional<Swift.Array<Any>>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 72,
              "executionCount": 0,
              "name": "Charts.NSUIView.isAccessibilityElement.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 73,
              "executionCount": 0,
              "name": "Charts.NSUIView.isAccessibilityElement.setter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "Charts.NSUIView.accessibilityElementCount() -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 78,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.NSUIView.accessibilityElementCount() -> Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "Charts.NSUIView.accessibilityElement(at: Swift.Int) -> Swift.Optional<Any>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 87,
              "executionCount": 0,
              "name": "Charts.NSUIView.index(ofAccessibilityElement: Any) -> Swift.Int",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 90,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in Charts.NSUIView.index(ofAccessibilityElement: Any) -> Swift.Int",
              "executableLines": 1
            }
          ],
          "name": "Platform+Accessibility.swift",
          "executableLines": 42
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/PieChartDataSet.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.(initialize in _ACC8A3B4CB5C70D77941344A416157D9)() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.init() -> Charts.PieChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.init(entries: Swift.Optional<Swift.Array<Charts.ChartDataEntry>>, label: Swift.Optional<Swift.String>) -> Charts.PieChartDataSet",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.calcMinMax(entry: Charts.ChartDataEntry) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartDataSet.(_sliceSpace in _ACC8A3B4CB5C70D77941344A416157D9) : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.sliceSpace.getter : CoreGraphics.CGFloat",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 61,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.sliceSpace.setter : CoreGraphics.CGFloat",
              "executableLines": 12
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 79,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartDataSet.selectionShift : CoreGraphics.CGFloat",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartDataSet.xValuePosition : Charts.PieChartDataSet.ValuePosition",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartDataSet.yValuePosition : Charts.PieChartDataSet.ValuePosition",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.PieChartDataSet.valueLineColor : Swift.Optional<__C.UIColor>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 117,
              "executionCount": 0,
              "name": "Charts.PieChartDataSet.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 18
            }
          ],
          "name": "PieChartDataSet.swift",
          "executableLines": 53
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Data/Implementations/Standard/RadarChartDataEntry.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.RadarChartDataEntry.init() -> Charts.RadarChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "Charts.RadarChartDataEntry.init(value: Swift.Double) -> Charts.RadarChartDataEntry",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "Charts.RadarChartDataEntry.init(value: Swift.Double, data: Swift.Optional<Any>) -> Charts.RadarChartDataEntry",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 42,
              "executionCount": 0,
              "name": "Charts.RadarChartDataEntry.value.getter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "Charts.RadarChartDataEntry.value.setter : Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "Charts.RadarChartDataEntry.copy(with: Swift.Optional<ObjectiveC.NSZone>) -> Any",
              "executableLines": 5
            }
          ],
          "name": "RadarChartDataEntry.swift",
          "executableLines": 17
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/Pods/Charts/Source/Charts/Renderers/YAxisRendererHorizontalBarChart.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.init(viewPortHandler: Charts.ViewPortHandler, yAxis: Swift.Optional<Charts.YAxis>, transformer: Swift.Optional<Charts.Transformer>) -> Charts.YAxisRendererHorizontalBarChart",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 30,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRendererHorizontalBarChart.computeAxis(min: Swift.Double, max: Swift.Double, inverted: Swift.Bool) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 52,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 49
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRendererHorizontalBarChart.renderAxisLabels(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 103,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 37
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 106,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRendererHorizontalBarChart.renderAxisLine(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 147,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.drawYLabels(context: __C.CGContextRef, fixedPosition: CoreGraphics.CGFloat, positions: Swift.Array<__C.CGPoint>, offset: CoreGraphics.CGFloat) -> ()",
              "executableLines": 23
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 172,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.gridClippingRect.getter : __C.CGRect",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 174,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> CoreGraphics.CGFloat in Charts.YAxisRendererHorizontalBarChart.gridClippingRect.getter : __C.CGRect",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 183,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.drawGridLine(context: __C.CGContextRef, position: __C.CGPoint) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 191,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.transformedPositions() -> Swift.Array<__C.CGPoint>",
              "executableLines": 20
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 214,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.drawZeroLine(context: __C.CGContextRef) -> ()",
              "executableLines": 33
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 248,
              "executionCount": 0,
              "name": "variable initialization expression of Charts.YAxisRendererHorizontalBarChart.(_limitLineSegmentsBuffer in _F12A4F9569F870B679EC92026BC2A0C7) : Swift.Array<__C.CGPoint>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 251,
              "executionCount": 0,
              "name": "Charts.YAxisRendererHorizontalBarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 112
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 311,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in Charts.YAxisRendererHorizontalBarChart.renderLimitLines(context: __C.CGContextRef) -> ()",
              "executableLines": 1
            }
          ],
          "name": "YAxisRendererHorizontalBarChart.swift",
          "executableLines": 321
        }
      ],
      "name": "Charts.framework",
      "executableLines": 16655,
      "buildProductPath": "/Users/spacepyro/Projects/TurnipTime/build/Build/Products/Debug-iphonesimulator/Charts/Charts.framework/Charts"
    },
    {
      "coveredLines": 0,
      "lineCoverage": 0,
      "files": [],
      "name": "Pods_TurnipTimeTests.framework",
      "executableLines": 0,
      "buildProductPath": "/Users/spacepyro/Projects/TurnipTime/build/Build/Products/Debug-iphonesimulator/Pods_TurnipTimeTests.framework/Pods_TurnipTimeTests"
    },
    {
      "coveredLines": 0,
      "lineCoverage": 0,
      "files": [],
      "name": "Pods_TurnipTime.framework",
      "executableLines": 0,
      "buildProductPath": "/Users/spacepyro/Projects/TurnipTime/build/Build/Products/Debug-iphonesimulator/Pods_TurnipTime.framework/Pods_TurnipTime"
    },
    {
      "coveredLines": 970,
      "lineCoverage": 0.49363867684478374,
      "files": [
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Extensions/UITextField+Extensions.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 13,
              "executionCount": 0,
              "name": "(extension in TurnipTime):__C.UITextField.addInputAccessoryView(title: Swift.String, target: Any, selector: ObjectiveC.Selector) -> ()",
              "executableLines": 9
            }
          ],
          "name": "UITextField+Extensions.swift",
          "executableLines": 9
        },
        {
          "coveredLines": 65,
          "lineCoverage": 0.3869047619047619,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/View Controllers/PriceInputViewController.swift",
          "functions": [
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 39,
              "executionCount": 1,
              "name": "variable initialization expression of TurnipTime.PriceInputViewController.(viewModel in _39024837E8EA2B554AEC3D55825EAE21) : TurnipTime.PriceInputViewModel",
              "executableLines": 1
            },
            {
              "coveredLines": 38,
              "lineCoverage": 1,
              "lineNumber": 43,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewController.viewDidLoad() -> ()",
              "executableLines": 38
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.shouldPerformSegue(withIdentifier: Swift.String, sender: Swift.Optional<Any>) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 86,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.prepare(for: __C.UIStoryboardSegue, sender: Swift.Optional<Any>) -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 26,
              "lineCoverage": 1,
              "lineNumber": 96,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewController.(setup in _39024837E8EA2B554AEC3D55825EAE21)() -> ()",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 123,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.(generate in _39024837E8EA2B554AEC3D55825EAE21)() -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 126,
              "executionCount": 0,
              "name": "closure #1 () -> () in TurnipTime.PriceInputViewController.(generate in _39024837E8EA2B554AEC3D55825EAE21)() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 133,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.(segmentedControllerDidUpdate in _39024837E8EA2B554AEC3D55825EAE21)(sender: __C.UISegmentedControl) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 137,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.(displayResults in _39024837E8EA2B554AEC3D55825EAE21)() -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 141,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.(updateIndicator in _39024837E8EA2B554AEC3D55825EAE21)(animating: Swift.Bool) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 142,
              "executionCount": 0,
              "name": "closure #1 () -> () in TurnipTime.PriceInputViewController.(updateIndicator in _39024837E8EA2B554AEC3D55825EAE21)(animating: Swift.Bool) -> ()",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 158,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.(prepareToFinishEditing in _39024837E8EA2B554AEC3D55825EAE21)() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 163,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.textFieldDidBeginEditing(__C.UITextField) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 168,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewController.textFieldDidEndEditing(_: __C.UITextField, reason: __C.UITextFieldDidEndEditingReason) -> ()",
              "executableLines": 51
            }
          ],
          "name": "PriceInputViewController.swift",
          "executableLines": 168
        },
        {
          "coveredLines": 51,
          "lineCoverage": 0.85,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/View Models/PriceInputViewModel.swift",
          "functions": [
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 14,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.sellingPrice.didset : Swift.Int",
              "executableLines": 4
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 21,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.isFirstPurchase.didset : Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 28,
              "executionCount": 2,
              "name": "TurnipTime.PriceInputViewModel.prices.didset : Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 4
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 35,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.previousPattern.didset : Swift.Optional<TurnipTime.Pattern>",
              "executableLines": 4
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 43,
              "executionCount": 1,
              "name": "variable initialization expression of TurnipTime.PriceInputViewModel.forecasts : Swift.Array<TurnipTime.Forecast>",
              "executableLines": 1
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 47,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.__allocating_init() -> TurnipTime.PriceInputViewModel",
              "executableLines": 3
            },
            {
              "coveredLines": 9,
              "lineCoverage": 1,
              "lineNumber": 51,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.init(sellingPrice: Swift.Int, isFirstPurchase: Swift.Bool, prices: Swift.Array<TurnipTime.PriceRange>, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> TurnipTime.PriceInputViewModel",
              "executableLines": 9
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 63,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.update(sellingPrice: Swift.Int) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 67,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.update(previousPattern: Swift.Optional<TurnipTime.Pattern>) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 71,
              "executionCount": 2,
              "name": "TurnipTime.PriceInputViewModel.update(price: Swift.Int, for: TurnipTime.Day, period: TurnipTime.Period) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 76,
              "executionCount": 1,
              "name": "TurnipTime.PriceInputViewModel.updateFirstPurchaseValue(with: __C.UISegmentedControl) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 9,
              "lineCoverage": 1,
              "lineNumber": 89,
              "executionCount": 6,
              "name": "TurnipTime.PriceInputViewModel.generateForecasts(completionHandler: Swift.Optional<() -> ()>) -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 91,
              "executionCount": 0,
              "name": "closure #1 (Swift.Array<TurnipTime.Forecast>) -> () in TurnipTime.PriceInputViewModel.generateForecasts(completionHandler: Swift.Optional<() -> ()>) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "TurnipTime.PriceInputViewModel.displayResults() -> ()",
              "executableLines": 3
            }
          ],
          "name": "PriceInputViewModel.swift",
          "executableLines": 60
        },
        {
          "coveredLines": 120,
          "lineCoverage": 0.7058823529411765,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/ProbabilityDensityFunction.swift",
          "functions": [
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 21,
              "executionCount": 76,
              "name": "variable initialization expression of TurnipTime.ProbabilityDensityFunction.(probabilities in _6B963482172828523C3E87AD37653799) : Swift.Array<Swift.Double>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 24,
              "executionCount": 0,
              "name": "TurnipTime.ProbabilityDensityFunction.granularRange.getter : Swift.Range<Swift.Double>",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 28,
              "executionCount": 120,
              "name": "TurnipTime.ProbabilityDensityFunction.minimumValue.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "TurnipTime.ProbabilityDensityFunction.granularMinimumValue.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 36,
              "executionCount": 120,
              "name": "TurnipTime.ProbabilityDensityFunction.maximumValue.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 40,
              "executionCount": 0,
              "name": "TurnipTime.ProbabilityDensityFunction.granularMaximumValue.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 30,
              "lineCoverage": 1,
              "lineNumber": 46,
              "executionCount": 76,
              "name": "TurnipTime.ProbabilityDensityFunction.init(range: Swift.Range<Swift.Double>, uniform: Swift.Bool) -> TurnipTime.ProbabilityDensityFunction",
              "executableLines": 30
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 79,
              "executionCount": 0,
              "name": "TurnipTime.ProbabilityDensityFunction.limit(with: Swift.Range<Swift.Double>) -> Swift.Double",
              "executableLines": 40
            },
            {
              "coveredLines": 46,
              "lineCoverage": 1,
              "lineNumber": 122,
              "executionCount": 60,
              "name": "TurnipTime.ProbabilityDensityFunction.decay(using: Swift.Range<Swift.Double>) -> ()",
              "executableLines": 46
            },
            {
              "coveredLines": 20,
              "lineCoverage": 1,
              "lineNumber": 133,
              "executionCount": 242923,
              "name": "sum #1 (lhs: Swift.Int, rhs: Swift.Int) -> Swift.Double in TurnipTime.ProbabilityDensityFunction.decay(using: Swift.Range<Swift.Double>) -> ()",
              "executableLines": 20
            },
            {
              "coveredLines": 6,
              "lineCoverage": 1,
              "lineNumber": 174,
              "executionCount": 25797,
              "name": "TurnipTime.ProbabilityDensityFunction.(range in _6B963482172828523C3E87AD37653799)(for: Swift.Int) -> Swift.Range<Swift.Double>",
              "executableLines": 6
            },
            {
              "coveredLines": 11,
              "lineCoverage": 0.9166666666666666,
              "lineNumber": 182,
              "executionCount": 59,
              "name": "TurnipTime.ProbabilityDensityFunction.(normalize in _6B963482172828523C3E87AD37653799)() -> ()",
              "executableLines": 12
            }
          ],
          "name": "ProbabilityDensityFunction.swift",
          "executableLines": 170
        },
        {
          "coveredLines": 97,
          "lineCoverage": 0.9797979797979798,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/LargeSpikeAlgorithm.swift",
          "functions": [
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 18,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.LargeSpikeAlgorithm.predictions : Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 19,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.LargeSpikeAlgorithm.pattern : TurnipTime.Pattern",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 23,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.LargeSpikeAlgorithm.generationRange : Swift.Range<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 25,
              "executionCount": 7,
              "name": "TurnipTime.LargeSpikeAlgorithm.(evenlyDistributedProbability in _6B13DF0C9AE31DDCB4A9D4175D9782B9).getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 31,
              "executionCount": 6,
              "name": "TurnipTime.LargeSpikeAlgorithm.init(sellingPrice: Swift.Int, currentPrices: Swift.Array<TurnipTime.PriceRange>, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> TurnipTime.LargeSpikeAlgorithm",
              "executableLines": 5
            },
            {
              "coveredLines": 18,
              "lineCoverage": 0.9473684210526315,
              "lineNumber": 42,
              "executionCount": 1,
              "name": "TurnipTime.LargeSpikeAlgorithm.generate() -> Swift.Array<TurnipTime.Forecast>",
              "executableLines": 19
            },
            {
              "coveredLines": 22,
              "lineCoverage": 1,
              "lineNumber": 64,
              "executionCount": 7,
              "name": "TurnipTime.LargeSpikeAlgorithm.(generate in _6B13DF0C9AE31DDCB4A9D4175D9782B9)(with: Swift.Int) throws -> TurnipTime.Forecast",
              "executableLines": 22
            },
            {
              "coveredLines": 12,
              "lineCoverage": 1,
              "lineNumber": 87,
              "executionCount": 7,
              "name": "TurnipTime.LargeSpikeAlgorithm.(generatePeakPrices in _6B13DF0C9AE31DDCB4A9D4175D9782B9)(with: Swift.Int) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 12
            },
            {
              "coveredLines": 23,
              "lineCoverage": 1,
              "lineNumber": 100,
              "executionCount": 7,
              "name": "TurnipTime.LargeSpikeAlgorithm.(generateRandomRatePrices in _6B13DF0C9AE31DDCB4A9D4175D9782B9)(with: Swift.Int) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 23
            },
            {
              "coveredLines": 10,
              "lineCoverage": 0.9090909090909091,
              "lineNumber": 126,
              "executionCount": 21,
              "name": "TurnipTime.LargeSpikeAlgorithm.(update in _6B13DF0C9AE31DDCB4A9D4175D9782B9)(probability: Swift.Double) throws -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 132,
              "executionCount": 21,
              "name": "implicit closure #1 () throws -> Swift.Bool in TurnipTime.LargeSpikeAlgorithm.(update in _6B13DF0C9AE31DDCB4A9D4175D9782B9)(probability: Swift.Double) throws -> ()",
              "executableLines": 1
            }
          ],
          "name": "LargeSpikeAlgorithm.swift",
          "executableLines": 99
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/WeeklyPriceInputView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 15,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(stackView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(mondayInputView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(tuesdayInputView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(wednesdayInputView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(thursdayInputView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(fridayInputView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.WeeklyPriceInputView.(saturdayInputView in _6757C77712050804FB672486C88883BE) : __C.UIStackView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "TurnipTime.WeeklyPriceInputView.configure() -> ()",
              "executableLines": 3
            }
          ],
          "name": "WeeklyPriceInputView.swift",
          "executableLines": 10
        },
        {
          "coveredLines": 5,
          "lineCoverage": 0.15151515151515152,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Data Models/Forecast.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "TurnipTime.Forecast.minimum.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "TurnipTime.Forecast.maximum.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 26,
              "executionCount": 10,
              "name": "TurnipTime.Forecast.init(pattern: TurnipTime.Pattern, predictions: Swift.Array<TurnipTime.TurnipPrice>, probability: Swift.Double) -> TurnipTime.Forecast",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "TurnipTime.Forecast.price(for: TurnipTime.Day) -> TurnipTime.TurnipPrice",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "TurnipTime.Forecast.description.getter : Swift.String",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "static TurnipTime.Forecast.== infix(TurnipTime.Forecast, TurnipTime.Forecast) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static TurnipTime.Forecast.== infix(TurnipTime.Forecast, TurnipTime.Forecast) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in static TurnipTime.Forecast.== infix(TurnipTime.Forecast, TurnipTime.Forecast) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 58,
              "executionCount": 0,
              "name": "static TurnipTime.Forecast.sorter(lhs: TurnipTime.Forecast, rhs: TurnipTime.Forecast) -> Swift.Bool",
              "executableLines": 3
            }
          ],
          "name": "Forecast.swift",
          "executableLines": 33
        },
        {
          "coveredLines": 3,
          "lineCoverage": 1,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/InputTextField.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 13,
              "executionCount": 36,
              "name": "TurnipTime.InputTextField.intrinsicContentSize.getter : __C.CGSize",
              "executableLines": 3
            }
          ],
          "name": "InputTextField.swift",
          "executableLines": 3
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/BaseLabel.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 13,
              "executionCount": 0,
              "name": "TurnipTime.BaseLabel.init(frame: __C.CGRect) -> TurnipTime.BaseLabel",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "TurnipTime.BaseLabel.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.BaseLabel>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "TurnipTime.BaseLabel.(setup in _948F4E3B04EC850063F05561918C298A)() -> ()",
              "executableLines": 5
            }
          ],
          "name": "BaseLabel.swift",
          "executableLines": 13
        },
        {
          "coveredLines": 16,
          "lineCoverage": 0.5333333333333333,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/ForecastGenerating.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 49,
              "executionCount": 0,
              "name": "(extension in TurnipTime):TurnipTime.Forecastable.priceRanges.getter : Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 50,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.TurnipPrice) -> Swift.Array<TurnipTime.PriceRange> in (extension in TurnipTime):TurnipTime.Forecastable.priceRanges.getter : Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 53,
              "executionCount": 0,
              "name": "(extension in TurnipTime):TurnipTime.Forecastable.projection.getter : Swift.Array<Swift.Int>",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.TurnipPrice) -> Swift.Array<TurnipTime.PriceRange> in (extension in TurnipTime):TurnipTime.Forecastable.projection.getter : Swift.Array<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 55,
              "executionCount": 0,
              "name": "closure #2 (TurnipTime.PriceRange) -> Swift.Int in (extension in TurnipTime):TurnipTime.Forecastable.projection.getter : Swift.Array<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 64,
              "executionCount": 12,
              "name": "(extension in TurnipTime):TurnipTime.ForecastGenerating.generateSundayPrice() -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 5
            },
            {
              "coveredLines": 9,
              "lineCoverage": 1,
              "lineNumber": 77,
              "executionCount": 10,
              "name": "(extension in TurnipTime):TurnipTime.ForecastGenerating.generateForecast(with: TurnipTime.Pattern, probability: Swift.Double, priceRangeLists: Swift.Array<TurnipTime.PriceRange>...) throws -> TurnipTime.Forecast",
              "executableLines": 9
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 79,
              "executionCount": 31,
              "name": "closure #1 (Swift.Array<TurnipTime.PriceRange>) -> Swift.Array<TurnipTime.PriceRange> in (extension in TurnipTime):TurnipTime.ForecastGenerating.generateForecast(with: TurnipTime.Pattern, probability: Swift.Double, priceRangeLists: Swift.Array<TurnipTime.PriceRange>...) throws -> TurnipTime.Forecast",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 81,
              "executionCount": 10,
              "name": "implicit closure #1 () -> Swift.Bool in (extension in TurnipTime):TurnipTime.ForecastGenerating.generateForecast(with: TurnipTime.Pattern, probability: Swift.Double, priceRangeLists: Swift.Array<TurnipTime.PriceRange>...) throws -> TurnipTime.Forecast",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "implicit closure #2 () -> Swift.String in (extension in TurnipTime):TurnipTime.ForecastGenerating.generateForecast(with: TurnipTime.Pattern, probability: Swift.Double, priceRangeLists: Swift.Array<TurnipTime.PriceRange>...) throws -> TurnipTime.Forecast",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 92,
              "executionCount": 0,
              "name": "(extension in TurnipTime):TurnipTime.ForecastRangeGenerating.evenlyDistributedProbability.getter : Swift.Double",
              "executableLines": 3
            }
          ],
          "name": "ForecastGenerating.swift",
          "executableLines": 30
        },
        {
          "coveredLines": 7,
          "lineCoverage": 1,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/BaseSegmentedControl.swift",
          "functions": [
            {
              "coveredLines": 7,
              "lineCoverage": 1,
              "lineNumber": 13,
              "executionCount": 1,
              "name": "TurnipTime.BaseSegmentedControl.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.BaseSegmentedControl>",
              "executableLines": 7
            }
          ],
          "name": "BaseSegmentedControl.swift",
          "executableLines": 7
        },
        {
          "coveredLines": 4,
          "lineCoverage": 0.056338028169014086,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/AppDelegate.swift",
          "functions": [
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 15,
              "executionCount": 1,
              "name": "TurnipTime.AppDelegate.application(_: __C.UIApplication, didFinishLaunchingWithOptions: Swift.Optional<Swift.Dictionary<__C.UIApplicationLaunchOptionsKey, Any>>) -> Swift.Bool",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "TurnipTime.AppDelegate.application(_: __C.UIApplication, configurationForConnecting: __C.UISceneSession, options: __C.UISceneConnectionOptions) -> __C.UISceneConfiguration",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "TurnipTime.AppDelegate.application(_: __C.UIApplication, didDiscardSceneSessions: Swift.Set<__C.UISceneSession>) -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "closure #1 () -> __C.NSPersistentCloudKitContainer in TurnipTime.AppDelegate.persistentContainer.getter : __C.NSPersistentCloudKitContainer",
              "executableLines": 26
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "closure #1 (__C.NSPersistentStoreDescription, Swift.Optional<Swift.Error>) -> () in closure #1 () -> __C.NSPersistentCloudKitContainer in TurnipTime.AppDelegate.persistentContainer.getter : __C.NSPersistentCloudKitContainer",
              "executableLines": 16
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in closure #1 (__C.NSPersistentStoreDescription, Swift.Optional<Swift.Error>) -> () in closure #1 () -> __C.NSPersistentCloudKitContainer in TurnipTime.AppDelegate.persistentContainer.getter : __C.NSPersistentCloudKitContainer",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 65,
              "executionCount": 0,
              "name": "TurnipTime.AppDelegate.saveContext() -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 74,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in TurnipTime.AppDelegate.saveContext() -> ()",
              "executableLines": 1
            }
          ],
          "name": "AppDelegate.swift",
          "executableLines": 71
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/ForecastCollectionViewCell.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 13,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ForecastCollectionViewCell.(priceEstimationChartView in _E044C183B2879DE3CA2B7F430E0FFBEA) : TurnipTime.PriceEstimationChartView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 14,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ForecastCollectionViewCell.(patternLabel in _E044C183B2879DE3CA2B7F430E0FFBEA) : TurnipTime.BaseLabel",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 15,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ForecastCollectionViewCell.(minimumLabel in _E044C183B2879DE3CA2B7F430E0FFBEA) : TurnipTime.BaseLabel",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 16,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ForecastCollectionViewCell.(maximumLabel in _E044C183B2879DE3CA2B7F430E0FFBEA) : TurnipTime.BaseLabel",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ForecastCollectionViewCell.(percentageLabel in _E044C183B2879DE3CA2B7F430E0FFBEA) : TurnipTime.BaseLabel",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ForecastCollectionViewCell.(containerView in _E044C183B2879DE3CA2B7F430E0FFBEA) : __C.UIView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "TurnipTime.ForecastCollectionViewCell.init(frame: __C.CGRect) -> TurnipTime.ForecastCollectionViewCell",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "TurnipTime.ForecastCollectionViewCell.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.ForecastCollectionViewCell>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in TurnipTime.ForecastCollectionViewCell.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.ForecastCollectionViewCell>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "TurnipTime.ForecastCollectionViewCell.(setup in _E044C183B2879DE3CA2B7F430E0FFBEA)() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 38,
              "executionCount": 0,
              "name": "TurnipTime.ForecastCollectionViewCell.(setupViews in _E044C183B2879DE3CA2B7F430E0FFBEA)() -> ()",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 48,
              "executionCount": 0,
              "name": "TurnipTime.ForecastCollectionViewCell.(setupConstraints in _E044C183B2879DE3CA2B7F430E0FFBEA)() -> ()",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "TurnipTime.ForecastCollectionViewCell.configure(item: TurnipTime.Configuration) -> ()",
              "executableLines": 18
            }
          ],
          "name": "ForecastCollectionViewCell.swift",
          "executableLines": 72
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Data Models/RandomAlgorithmPhaseLengths.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 19,
              "executionCount": 0,
              "name": "TurnipTime.RandomAlgorithmPhaseLengths.phaseOne.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "TurnipTime.RandomAlgorithmPhaseLengths.phaseTwo.getter : Swift.Int",
              "executableLines": 3
            }
          ],
          "name": "RandomAlgorithmPhaseLengths.swift",
          "executableLines": 6
        },
        {
          "coveredLines": 60,
          "lineCoverage": 0.967741935483871,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/DecreasingAlgorithm.swift",
          "functions": [
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 18,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.DecreasingAlgorithm.predictions : Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 19,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.DecreasingAlgorithm.pattern : TurnipTime.Pattern",
              "executableLines": 1
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 25,
              "executionCount": 6,
              "name": "TurnipTime.DecreasingAlgorithm.init(sellingPrice: Swift.Int, currentPrices: Swift.Array<TurnipTime.PriceRange>, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> TurnipTime.DecreasingAlgorithm",
              "executableLines": 5
            },
            {
              "coveredLines": 13,
              "lineCoverage": 0.9285714285714286,
              "lineNumber": 36,
              "executionCount": 1,
              "name": "TurnipTime.DecreasingAlgorithm.generate() -> Swift.Array<TurnipTime.Forecast>",
              "executableLines": 14
            },
            {
              "coveredLines": 17,
              "lineCoverage": 1,
              "lineNumber": 53,
              "executionCount": 1,
              "name": "TurnipTime.DecreasingAlgorithm.(generateDecreasingForecast in _D3B18B99309857BC4B0ED0FAFA90C3BE)() throws -> TurnipTime.Forecast",
              "executableLines": 17
            },
            {
              "coveredLines": 12,
              "lineCoverage": 1,
              "lineNumber": 71,
              "executionCount": 1,
              "name": "TurnipTime.DecreasingAlgorithm.(generateDecreasingPrices in _D3B18B99309857BC4B0ED0FAFA90C3BE)() throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 12
            },
            {
              "coveredLines": 10,
              "lineCoverage": 0.9090909090909091,
              "lineNumber": 86,
              "executionCount": 2,
              "name": "TurnipTime.DecreasingAlgorithm.(update in _D3B18B99309857BC4B0ED0FAFA90C3BE)(probability: Swift.Double) throws -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 92,
              "executionCount": 2,
              "name": "implicit closure #1 () throws -> Swift.Bool in TurnipTime.DecreasingAlgorithm.(update in _D3B18B99309857BC4B0ED0FAFA90C3BE)(probability: Swift.Double) throws -> ()",
              "executableLines": 1
            }
          ],
          "name": "DecreasingAlgorithm.swift",
          "executableLines": 62
        },
        {
          "coveredLines": 85,
          "lineCoverage": 0.6071428571428571,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/Common.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 28,
              "executionCount": 2,
              "name": "static TurnipTime.CommonAlgorithms.minimumRate(fromGivenPrice: Swift.Int, sellingPrice: Swift.Int) -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 37,
              "executionCount": 0,
              "name": "static TurnipTime.CommonAlgorithms.maximumRate(fromGivenPrice: Swift.Int, sellingPrice: Swift.Int) -> Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "static TurnipTime.CommonAlgorithms.rateRange(fromGivenPrice: Swift.Int, sellingPrice: Swift.Int) -> Swift.Range<Swift.Double>",
              "executableLines": 3
            },
            {
              "coveredLines": 6,
              "lineCoverage": 0.8571428571428571,
              "lineNumber": 52,
              "executionCount": 10,
              "name": "static TurnipTime.CommonAlgorithms.percentage(for: TurnipTime.Pattern, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> Swift.Double",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Double in static TurnipTime.CommonAlgorithms.percentage(for: TurnipTime.Pattern, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> Swift.Double",
              "executableLines": 1
            },
            {
              "coveredLines": 17,
              "lineCoverage": 0.53125,
              "lineNumber": 62,
              "executionCount": 77,
              "name": "static TurnipTime.CommonAlgorithms.generatePriceRange(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, index: Swift.Int, rate: Swift.Range<Swift.Double>, initialProbability: Swift.Double) throws -> (priceRange: TurnipTime.PriceRange, probability: Swift.Double)",
              "executableLines": 32
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.Bool in static TurnipTime.CommonAlgorithms.generatePriceRange(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, index: Swift.Int, rate: Swift.Range<Swift.Double>, initialProbability: Swift.Double) throws -> (priceRange: TurnipTime.PriceRange, probability: Swift.Double)",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 76,
              "executionCount": 0,
              "name": "implicit closure #2 () -> Swift.String in static TurnipTime.CommonAlgorithms.generatePriceRange(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, index: Swift.Int, rate: Swift.Range<Swift.Double>, initialProbability: Swift.Double) throws -> (priceRange: TurnipTime.PriceRange, probability: Swift.Double)",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 81,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in static TurnipTime.CommonAlgorithms.generatePriceRange(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, index: Swift.Int, rate: Swift.Range<Swift.Double>, initialProbability: Swift.Double) throws -> (priceRange: TurnipTime.PriceRange, probability: Swift.Double)",
              "executableLines": 1
            },
            {
              "coveredLines": 26,
              "lineCoverage": 0.9629629629629629,
              "lineNumber": 107,
              "executionCount": 9,
              "name": "static TurnipTime.CommonAlgorithms.generateIncreasingPriceRanges(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, range: Swift.Range<Swift.Int>, rate: Swift.Range<Swift.Double>) throws -> (priceRanges: Swift.Array<TurnipTime.PriceRange>, probability: Swift.Double)",
              "executableLines": 27
            },
            {
              "coveredLines": 33,
              "lineCoverage": 0.5789473684210527,
              "lineNumber": 149,
              "executionCount": 16,
              "name": "static TurnipTime.CommonAlgorithms.generateDecreasingPriceRanges(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, range: Swift.Range<Swift.Int>, rate: Swift.Range<Swift.Double>, decayRate: Swift.Range<Swift.Double>) throws -> (priceRanges: Swift.Array<TurnipTime.PriceRange>, probability: Swift.Double)",
              "executableLines": 57
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 171,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.Bool in static TurnipTime.CommonAlgorithms.generateDecreasingPriceRanges(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, range: Swift.Range<Swift.Int>, rate: Swift.Range<Swift.Double>, decayRate: Swift.Range<Swift.Double>) throws -> (priceRanges: Swift.Array<TurnipTime.PriceRange>, probability: Swift.Double)",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 171,
              "executionCount": 0,
              "name": "implicit closure #2 () -> Swift.String in static TurnipTime.CommonAlgorithms.generateDecreasingPriceRanges(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, range: Swift.Range<Swift.Int>, rate: Swift.Range<Swift.Double>, decayRate: Swift.Range<Swift.Double>) throws -> (priceRanges: Swift.Array<TurnipTime.PriceRange>, probability: Swift.Double)",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 176,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in static TurnipTime.CommonAlgorithms.generateDecreasingPriceRanges(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, range: Swift.Range<Swift.Int>, rate: Swift.Range<Swift.Double>, decayRate: Swift.Range<Swift.Double>) throws -> (priceRanges: Swift.Array<TurnipTime.PriceRange>, probability: Swift.Double)",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 191,
              "executionCount": 0,
              "name": "implicit closure #4 () throws -> Swift.Bool in static TurnipTime.CommonAlgorithms.generateDecreasingPriceRanges(for: Swift.Array<TurnipTime.PriceRange>, sellingPrice: Swift.Int, range: Swift.Range<Swift.Int>, rate: Swift.Range<Swift.Double>, decayRate: Swift.Range<Swift.Double>) throws -> (priceRanges: Swift.Array<TurnipTime.PriceRange>, probability: Swift.Double)",
              "executableLines": 1
            }
          ],
          "name": "Common.swift",
          "executableLines": 140
        },
        {
          "coveredLines": 16,
          "lineCoverage": 0.9411764705882353,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Data Models/Operations/CreateForecastsOperation.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 21,
              "executionCount": 24,
              "name": "TurnipTime.CreateForecastsOperation.init(generator: TurnipTime.ForecastGenerating) -> TurnipTime.CreateForecastsOperation",
              "executableLines": 3
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 27,
              "executionCount": 4,
              "name": "TurnipTime.CreateForecastsOperation.main() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 9,
              "lineCoverage": 0.9,
              "lineNumber": 32,
              "executionCount": 4,
              "name": "TurnipTime.CreateForecastsOperation.generate() -> ()",
              "executableLines": 10
            }
          ],
          "name": "CreateForecastsOperation.swift",
          "executableLines": 17
        },
        {
          "coveredLines": 14,
          "lineCoverage": 0.4375,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/SceneDelegate.swift",
          "functions": [
            {
              "coveredLines": 6,
              "lineCoverage": 1,
              "lineNumber": 15,
              "executionCount": 1,
              "name": "TurnipTime.SceneDelegate.scene(_: __C.UIScene, willConnectTo: __C.UISceneSession, options: __C.UISceneConnectionOptions) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "TurnipTime.SceneDelegate.sceneDidDisconnect(__C.UIScene) -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 29,
              "executionCount": 1,
              "name": "TurnipTime.SceneDelegate.sceneDidBecomeActive(__C.UIScene) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 34,
              "executionCount": 0,
              "name": "TurnipTime.SceneDelegate.sceneWillResignActive(__C.UIScene) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 39,
              "executionCount": 1,
              "name": "TurnipTime.SceneDelegate.sceneWillEnterForeground(__C.UIScene) -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 44,
              "executionCount": 0,
              "name": "TurnipTime.SceneDelegate.sceneDidEnterBackground(__C.UIScene) -> ()",
              "executableLines": 8
            }
          ],
          "name": "SceneDelegate.swift",
          "executableLines": 32
        },
        {
          "coveredLines": 119,
          "lineCoverage": 0.8686131386861314,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/SmallSpikeAlgorithm.swift",
          "functions": [
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 18,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.SmallSpikeAlgorithm.forecast : Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 19,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.SmallSpikeAlgorithm.pattern : TurnipTime.Pattern",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 23,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.SmallSpikeAlgorithm.generationRange : Swift.Range<Swift.Int>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "TurnipTime.SmallSpikeAlgorithm.(evenlyDistributedProbability in _1666A532AC0A52D8A4E5BDE2F4224F77).getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 31,
              "executionCount": 6,
              "name": "TurnipTime.SmallSpikeAlgorithm.init(sellingPrice: Swift.Int, currentPrices: Swift.Array<TurnipTime.PriceRange>, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> TurnipTime.SmallSpikeAlgorithm",
              "executableLines": 5
            },
            {
              "coveredLines": 18,
              "lineCoverage": 0.9473684210526315,
              "lineNumber": 42,
              "executionCount": 1,
              "name": "TurnipTime.SmallSpikeAlgorithm.generate() -> Swift.Array<TurnipTime.Forecast>",
              "executableLines": 19
            },
            {
              "coveredLines": 24,
              "lineCoverage": 1,
              "lineNumber": 64,
              "executionCount": 1,
              "name": "TurnipTime.SmallSpikeAlgorithm.(generate in _1666A532AC0A52D8A4E5BDE2F4224F77)(with: Swift.Int) throws -> TurnipTime.Forecast",
              "executableLines": 24
            },
            {
              "coveredLines": 12,
              "lineCoverage": 1,
              "lineNumber": 91,
              "executionCount": 2,
              "name": "TurnipTime.SmallSpikeAlgorithm.(generateDecreasingPrices in _1666A532AC0A52D8A4E5BDE2F4224F77)(usingRange: (lhs: Swift.Int, rhs: Swift.Int)) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 12
            },
            {
              "coveredLines": 11,
              "lineCoverage": 1,
              "lineNumber": 104,
              "executionCount": 1,
              "name": "TurnipTime.SmallSpikeAlgorithm.(generatePeakPrices in _1666A532AC0A52D8A4E5BDE2F4224F77)(with: Swift.Int) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 11
            },
            {
              "coveredLines": 23,
              "lineCoverage": 1,
              "lineNumber": 116,
              "executionCount": 1,
              "name": "TurnipTime.SmallSpikeAlgorithm.(generateSpikePrices in _1666A532AC0A52D8A4E5BDE2F4224F77)(with: Swift.Int) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 23
            },
            {
              "coveredLines": 12,
              "lineCoverage": 0.5454545454545454,
              "lineNumber": 140,
              "executionCount": 3,
              "name": "TurnipTime.SmallSpikeAlgorithm.(generateSpikePrice in _1666A532AC0A52D8A4E5BDE2F4224F77)(for: Swift.Int, minPrediction: Swift.Int, maxPrediction: Swift.Int) throws -> TurnipTime.PriceRange",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.Bool in TurnipTime.SmallSpikeAlgorithm.(generateSpikePrice in _1666A532AC0A52D8A4E5BDE2F4224F77)(for: Swift.Int, minPrediction: Swift.Int, maxPrediction: Swift.Int) throws -> TurnipTime.PriceRange",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 149,
              "executionCount": 0,
              "name": "implicit closure #2 () -> Swift.String in TurnipTime.SmallSpikeAlgorithm.(generateSpikePrice in _1666A532AC0A52D8A4E5BDE2F4224F77)(for: Swift.Int, minPrediction: Swift.Int, maxPrediction: Swift.Int) throws -> TurnipTime.PriceRange",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 154,
              "executionCount": 0,
              "name": "implicit closure #3 () throws -> Swift.Bool in TurnipTime.SmallSpikeAlgorithm.(generateSpikePrice in _1666A532AC0A52D8A4E5BDE2F4224F77)(for: Swift.Int, minPrediction: Swift.Int, maxPrediction: Swift.Int) throws -> TurnipTime.PriceRange",
              "executableLines": 1
            },
            {
              "coveredLines": 10,
              "lineCoverage": 0.9090909090909091,
              "lineNumber": 165,
              "executionCount": 2,
              "name": "TurnipTime.SmallSpikeAlgorithm.(update in _1666A532AC0A52D8A4E5BDE2F4224F77)(probability: Swift.Double) throws -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 171,
              "executionCount": 2,
              "name": "implicit closure #1 () throws -> Swift.Bool in TurnipTime.SmallSpikeAlgorithm.(update in _1666A532AC0A52D8A4E5BDE2F4224F77)(probability: Swift.Double) throws -> ()",
              "executableLines": 1
            }
          ],
          "name": "SmallSpikeAlgorithm.swift",
          "executableLines": 137
        },
        {
          "coveredLines": 40,
          "lineCoverage": 0.43010752688172044,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Data Models/PriceRange.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 23,
              "executionCount": 0,
              "name": "TurnipTime.TurnipPrice.minimum.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 27,
              "executionCount": 0,
              "name": "TurnipTime.TurnipPrice.maximum.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "TurnipTime.TurnipPrice.average.getter : Swift.Double",
              "executableLines": 7
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 39,
              "executionCount": 70,
              "name": "TurnipTime.TurnipPrice.init(day: TurnipTime.Day, morningPrice: TurnipTime.PriceRange, afternoonPrice: TurnipTime.PriceRange) -> TurnipTime.TurnipPrice",
              "executableLines": 5
            },
            {
              "coveredLines": 11,
              "lineCoverage": 1,
              "lineNumber": 45,
              "executionCount": 10,
              "name": "static TurnipTime.TurnipPrice.prices(from: Swift.Array<TurnipTime.PriceRange>) -> Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 11
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 46,
              "executionCount": 10,
              "name": "implicit closure #1 () -> Swift.Bool in static TurnipTime.TurnipPrice.prices(from: Swift.Array<TurnipTime.PriceRange>) -> Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 46,
              "executionCount": 0,
              "name": "implicit closure #2 () -> Swift.String in static TurnipTime.TurnipPrice.prices(from: Swift.Array<TurnipTime.PriceRange>) -> Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 57,
              "executionCount": 0,
              "name": "TurnipTime.TurnipPrice.description.getter : Swift.String",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 61,
              "executionCount": 0,
              "name": "static TurnipTime.TurnipPrice.== infix(TurnipTime.TurnipPrice, TurnipTime.TurnipPrice) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static TurnipTime.TurnipPrice.== infix(TurnipTime.TurnipPrice, TurnipTime.TurnipPrice) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "implicit closure #2 () throws -> Swift.Bool in static TurnipTime.TurnipPrice.== infix(TurnipTime.TurnipPrice, TurnipTime.TurnipPrice) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 75,
              "executionCount": 0,
              "name": "TurnipTime.PriceRange.average.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "TurnipTime.PriceRange.isEstimate.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 85,
              "executionCount": 140,
              "name": "TurnipTime.PriceRange.isEmpty.getter : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 86,
              "executionCount": 140,
              "name": "implicit closure #1 () throws -> Swift.Bool in TurnipTime.PriceRange.isEmpty.getter : Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 91,
              "executionCount": 14,
              "name": "TurnipTime.PriceRange.init() -> TurnipTime.PriceRange",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 95,
              "executionCount": 40,
              "name": "TurnipTime.PriceRange.init(price: Swift.Int) -> TurnipTime.PriceRange",
              "executableLines": 3
            },
            {
              "coveredLines": 4,
              "lineCoverage": 1,
              "lineNumber": 99,
              "executionCount": 180,
              "name": "TurnipTime.PriceRange.init(minimum: Swift.Int, maximum: Swift.Int) -> TurnipTime.PriceRange",
              "executableLines": 4
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 106,
              "executionCount": 1,
              "name": "static TurnipTime.PriceRange.makeEmptyRanges() -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 3
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 107,
              "executionCount": 14,
              "name": "closure #1 (Swift.Int) -> TurnipTime.PriceRange in static TurnipTime.PriceRange.makeEmptyRanges() -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 112,
              "executionCount": 0,
              "name": "TurnipTime.PriceRange.description.getter : Swift.String",
              "executableLines": 8
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 121,
              "executionCount": 0,
              "name": "static TurnipTime.PriceRange.== infix(TurnipTime.PriceRange, TurnipTime.PriceRange) -> Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 122,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Bool in static TurnipTime.PriceRange.== infix(TurnipTime.PriceRange, TurnipTime.PriceRange) -> Swift.Bool",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 131,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.price(for: TurnipTime.Day) -> TurnipTime.TurnipPrice",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 135,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.minimum.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 136,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.TurnipPrice) -> Swift.Int in (extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.minimum.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 136,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in (extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.minimum.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 139,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.maximum.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 140,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.TurnipPrice) -> Swift.Int in (extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.maximum.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 140,
              "executionCount": 0,
              "name": "implicit closure #1 () throws -> Swift.Int in (extension in TurnipTime):Swift.Array<A where A == TurnipTime.TurnipPrice>.maximum.getter : Swift.Int",
              "executableLines": 1
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 147,
              "executionCount": 70,
              "name": "(extension in TurnipTime):Swift.Array<A where A == TurnipTime.PriceRange>.price(for: TurnipTime.Day) -> TurnipTime.TurnipPrice",
              "executableLines": 5
            }
          ],
          "name": "PriceRange.swift",
          "executableLines": 93
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Extensions/UIFont+Extensions.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 13,
              "executionCount": 0,
              "name": "static (extension in TurnipTime):__C.UIFont.regular(size: CoreGraphics.CGFloat) -> __C.UIFont",
              "executableLines": 3
            }
          ],
          "name": "UIFont+Extensions.swift",
          "executableLines": 3
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/BackgroundView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 16,
              "executionCount": 0,
              "name": "TurnipTime.BackgroundView.body.getter : some",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "closure #1 () -> SwiftUI.TupleView<(SwiftUI.VStack<SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)>>, SwiftUI.VStack<SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)>>)> in TurnipTime.BackgroundView.body.getter : some",
              "executableLines": 21
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 18,
              "executionCount": 0,
              "name": "closure #1 () -> SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)> in closure #1 () -> SwiftUI.TupleView<(SwiftUI.VStack<SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)>>, SwiftUI.VStack<SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)>>)> in TurnipTime.BackgroundView.body.getter : some",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "closure #2 () -> SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)> in closure #1 () -> SwiftUI.TupleView<(SwiftUI.VStack<SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)>>, SwiftUI.VStack<SwiftUI.TupleView<(<<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0, <<opaque return type of (extension in SwiftUI):SwiftUI.View.background<A where A1: SwiftUI.View>(_: A1, alignment: SwiftUI.Alignment) -> some>>.0)>>)> in TurnipTime.BackgroundView.body.getter : some",
              "executableLines": 9
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "static TurnipTime.BackgroundView_Previews.previews.getter : some",
              "executableLines": 5
            }
          ],
          "name": "BackgroundView.swift",
          "executableLines": 69
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/View Controllers/ResultsViewController.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 22,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.ResultsViewController.forecasts : Swift.Array<TurnipTime.Forecast>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "TurnipTime.ResultsViewController.viewDidLoad() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 33,
              "executionCount": 0,
              "name": "TurnipTime.ResultsViewController.(setup in _4C1285D7233C2FD13C471BB9380EF883)() -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 39,
              "executionCount": 0,
              "name": "TurnipTime.ResultsViewController.(setupCollectionView in _4C1285D7233C2FD13C471BB9380EF883)() -> ()",
              "executableLines": 5
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 45,
              "executionCount": 0,
              "name": "TurnipTime.ResultsViewController.(setupDataSource in _4C1285D7233C2FD13C471BB9380EF883)() -> ()",
              "executableLines": 22
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "closure #1 (__C.UICollectionView, Foundation.IndexPath, TurnipTime.Forecast) -> Swift.Optional<__C.UICollectionViewCell> in TurnipTime.ResultsViewController.(setupDataSource in _4C1285D7233C2FD13C471BB9380EF883)() -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in closure #1 (__C.UICollectionView, Foundation.IndexPath, TurnipTime.Forecast) -> Swift.Optional<__C.UICollectionViewCell> in TurnipTime.ResultsViewController.(setupDataSource in _4C1285D7233C2FD13C471BB9380EF883)() -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "TurnipTime.ResultsViewController.(setupLayout in _4C1285D7233C2FD13C471BB9380EF883)() -> __C.UICollectionViewLayout",
              "executableLines": 18
            }
          ],
          "name": "ResultsViewController.swift",
          "executableLines": 67
        },
        {
          "coveredLines": 17,
          "lineCoverage": 0.9444444444444444,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Extensions/Range+Extension.swift",
          "functions": [
            {
              "coveredLines": 6,
              "lineCoverage": 0.8571428571428571,
              "lineNumber": 13,
              "executionCount": 25777,
              "name": "(extension in TurnipTime):Swift.Range.intersection(with: Swift.Range<A>) -> Swift.Optional<Swift.Range<A>>",
              "executableLines": 7
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 14,
              "executionCount": 25840,
              "name": "implicit closure #1 () throws -> Swift.Bool in (extension in TurnipTime):Swift.Range.intersection(with: Swift.Range<A>) -> Swift.Optional<Swift.Range<A>>",
              "executableLines": 1
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 25,
              "executionCount": 25874,
              "name": "(extension in TurnipTime):Swift.Range< where A: Swift.Numeric>.length() -> A",
              "executableLines": 3
            },
            {
              "coveredLines": 7,
              "lineCoverage": 1,
              "lineNumber": 33,
              "executionCount": 25841,
              "name": "(extension in TurnipTime):Swift.Range< where A: Swift.FloatingPoint>.intersectionLength(with: Swift.Range<A>) -> A",
              "executableLines": 7
            }
          ],
          "name": "Range+Extension.swift",
          "executableLines": 18
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Extensions/LineChartDataSet+Extensions.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 13,
              "executionCount": 0,
              "name": "static (extension in TurnipTime):Charts.LineChartData.make(using: TurnipTime.Forecastable) -> Charts.LineChartData",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "static (extension in TurnipTime):Charts.LineChartDataSet.minimumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 28
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 28,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.PriceRange) -> Swift.Int in static (extension in TurnipTime):Charts.LineChartDataSet.minimumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "closure #2 (Swift.Int, Swift.Int) -> Charts.ChartDataEntry in static (extension in TurnipTime):Charts.LineChartDataSet.minimumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 47,
              "executionCount": 0,
              "name": "closure #3 (Charts.ILineChartDataSet, Charts.LineChartDataProvider) -> CoreGraphics.CGFloat in static (extension in TurnipTime):Charts.LineChartDataSet.minimumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 54,
              "executionCount": 0,
              "name": "static (extension in TurnipTime):Charts.LineChartDataSet.projectedDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 25
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 59,
              "executionCount": 0,
              "name": "closure #1 (Swift.Int, Swift.Int) -> Charts.ChartDataEntry in static (extension in TurnipTime):Charts.LineChartDataSet.projectedDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 73,
              "executionCount": 0,
              "name": "closure #2 (Charts.ILineChartDataSet, Charts.LineChartDataProvider) -> CoreGraphics.CGFloat in static (extension in TurnipTime):Charts.LineChartDataSet.projectedDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "static (extension in TurnipTime):Charts.LineChartDataSet.maximumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 27
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 82,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.PriceRange) -> Swift.Int in static (extension in TurnipTime):Charts.LineChartDataSet.maximumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "closure #2 (Swift.Int, Swift.Int) -> Charts.ChartDataEntry in static (extension in TurnipTime):Charts.LineChartDataSet.maximumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 101,
              "executionCount": 0,
              "name": "closure #3 (Charts.ILineChartDataSet, Charts.LineChartDataProvider) -> CoreGraphics.CGFloat in static (extension in TurnipTime):Charts.LineChartDataSet.maximumDataSet(with: TurnipTime.Forecastable) -> Charts.LineChartDataSet",
              "executableLines": 3
            }
          ],
          "name": "LineChartDataSet+Extensions.swift",
          "executableLines": 107
        },
        {
          "coveredLines": 124,
          "lineCoverage": 0.9841269841269841,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/RandomAlgorithm.swift",
          "functions": [
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 18,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.RandomAlgorithm.pattern : TurnipTime.Pattern",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 20,
              "executionCount": 6,
              "name": "variable initialization expression of TurnipTime.RandomAlgorithm.forecast : Swift.Array<TurnipTime.TurnipPrice>",
              "executableLines": 1
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 25,
              "executionCount": 6,
              "name": "TurnipTime.RandomAlgorithm.init(sellingPrice: Swift.Int, currentPrices: Swift.Array<TurnipTime.PriceRange>, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> TurnipTime.RandomAlgorithm",
              "executableLines": 5
            },
            {
              "coveredLines": 32,
              "lineCoverage": 0.9696969696969697,
              "lineNumber": 36,
              "executionCount": 1,
              "name": "TurnipTime.RandomAlgorithm.generate() -> Swift.Array<TurnipTime.Forecast>",
              "executableLines": 33
            },
            {
              "coveredLines": 24,
              "lineCoverage": 1,
              "lineNumber": 72,
              "executionCount": 3,
              "name": "TurnipTime.RandomAlgorithm.(generate in _57112EC6BF7F11CF44E54F89D6B0CED6)(with: TurnipTime.RandomAlgorithmPhaseLengths) throws -> TurnipTime.Forecast",
              "executableLines": 24
            },
            {
              "coveredLines": 9,
              "lineCoverage": 1,
              "lineNumber": 99,
              "executionCount": 3,
              "name": "TurnipTime.RandomAlgorithm.(generatePhaseOnePrices in _57112EC6BF7F11CF44E54F89D6B0CED6)(with: TurnipTime.RandomAlgorithmPhaseLengths) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 9
            },
            {
              "coveredLines": 11,
              "lineCoverage": 1,
              "lineNumber": 109,
              "executionCount": 3,
              "name": "TurnipTime.RandomAlgorithm.(generatePhaseTwoPrices in _57112EC6BF7F11CF44E54F89D6B0CED6)(with: TurnipTime.RandomAlgorithmPhaseLengths) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 11
            },
            {
              "coveredLines": 7,
              "lineCoverage": 1,
              "lineNumber": 121,
              "executionCount": 2,
              "name": "TurnipTime.RandomAlgorithm.(generatePhaseThreePrices in _57112EC6BF7F11CF44E54F89D6B0CED6)(with: TurnipTime.RandomAlgorithmPhaseLengths) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 7
            },
            {
              "coveredLines": 11,
              "lineCoverage": 1,
              "lineNumber": 131,
              "executionCount": 8,
              "name": "TurnipTime.RandomAlgorithm.(generateIncreasingPhasePredictions in _57112EC6BF7F11CF44E54F89D6B0CED6)(usingRange: (lhs: Swift.Int, rhs: Swift.Int)) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 11
            },
            {
              "coveredLines": 12,
              "lineCoverage": 1,
              "lineNumber": 143,
              "executionCount": 6,
              "name": "TurnipTime.RandomAlgorithm.(generateDecreasingPhasePredictions in _57112EC6BF7F11CF44E54F89D6B0CED6)(usingRange: (lhs: Swift.Int, rhs: Swift.Int)) throws -> Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 12
            },
            {
              "coveredLines": 10,
              "lineCoverage": 0.9090909090909091,
              "lineNumber": 158,
              "executionCount": 17,
              "name": "TurnipTime.RandomAlgorithm.(update in _57112EC6BF7F11CF44E54F89D6B0CED6)(probability: Swift.Double) throws -> ()",
              "executableLines": 11
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 164,
              "executionCount": 17,
              "name": "implicit closure #1 () throws -> Swift.Bool in TurnipTime.RandomAlgorithm.(update in _57112EC6BF7F11CF44E54F89D6B0CED6)(probability: Swift.Double) throws -> ()",
              "executableLines": 1
            }
          ],
          "name": "RandomAlgorithm.swift",
          "executableLines": 126
        },
        {
          "coveredLines": 84,
          "lineCoverage": 0.711864406779661,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Algorithms/PricePrediction.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 23,
              "executionCount": 1,
              "name": "TurnipTime.PricePrediction.sellingPrice.didset : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 29,
              "executionCount": 1,
              "name": "TurnipTime.PricePrediction.isFirstPurchase.didset : Swift.Bool",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 35,
              "executionCount": 2,
              "name": "TurnipTime.PricePrediction.prices.didset : Swift.Array<TurnipTime.PriceRange>",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 41,
              "executionCount": 1,
              "name": "TurnipTime.PricePrediction.previousPattern.didset : Swift.Optional<TurnipTime.Pattern>",
              "executableLines": 3
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 46,
              "executionCount": 1,
              "name": "variable initialization expression of TurnipTime.PricePrediction.forecasts : Swift.Array<TurnipTime.Forecast>",
              "executableLines": 1
            },
            {
              "coveredLines": 1,
              "lineCoverage": 1,
              "lineNumber": 47,
              "executionCount": 1,
              "name": "variable initialization expression of TurnipTime.PricePrediction.(queue in _DA5E1CB17EE6B120CCE9CFFDE102C7B8) : __C.NSOperationQueue",
              "executableLines": 1
            },
            {
              "coveredLines": 8,
              "lineCoverage": 1,
              "lineNumber": 51,
              "executionCount": 1,
              "name": "TurnipTime.PricePrediction.init(sellingPrice: Swift.Int, isFirstPurchase: Swift.Bool, prices: Swift.Array<TurnipTime.PriceRange>, previousPattern: Swift.Optional<TurnipTime.Pattern>) -> TurnipTime.PricePrediction",
              "executableLines": 8
            },
            {
              "coveredLines": 51,
              "lineCoverage": 0.9807692307692307,
              "lineNumber": 62,
              "executionCount": 6,
              "name": "TurnipTime.PricePrediction.generatePossibilities(completionHandler: (Swift.Array<TurnipTime.Forecast>) -> ()) -> ()",
              "executableLines": 52
            },
            {
              "coveredLines": 6,
              "lineCoverage": 0.46153846153846156,
              "lineNumber": 76,
              "executionCount": 2,
              "name": "closure #1 () -> () in TurnipTime.PricePrediction.generatePossibilities(completionHandler: (Swift.Array<TurnipTime.Forecast>) -> ()) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 93,
              "executionCount": 0,
              "name": "closure #2 () -> () in TurnipTime.PricePrediction.generatePossibilities(completionHandler: (Swift.Array<TurnipTime.Forecast>) -> ()) -> ()",
              "executableLines": 18
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 97,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.Forecast) -> Swift.Double in closure #2 () -> () in TurnipTime.PricePrediction.generatePossibilities(completionHandler: (Swift.Array<TurnipTime.Forecast>) -> ()) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 115,
              "executionCount": 0,
              "name": "TurnipTime.PricePrediction.(generateFirstPurchasePossibilities in _DA5E1CB17EE6B120CCE9CFFDE102C7B8)() throws -> ()",
              "executableLines": 7
            },
            {
              "coveredLines": 5,
              "lineCoverage": 1,
              "lineNumber": 123,
              "executionCount": 5,
              "name": "TurnipTime.PricePrediction.(reset in _DA5E1CB17EE6B120CCE9CFFDE102C7B8)() -> ()",
              "executableLines": 5
            }
          ],
          "name": "PricePrediction.swift",
          "executableLines": 118
        },
        {
          "coveredLines": 11,
          "lineCoverage": 1,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/View Controllers/BaseNavigationController.swift",
          "functions": [
            {
              "coveredLines": 11,
              "lineCoverage": 1,
              "lineNumber": 13,
              "executionCount": 1,
              "name": "TurnipTime.BaseNavigationController.viewDidLoad() -> ()",
              "executableLines": 11
            }
          ],
          "name": "BaseNavigationController.swift",
          "executableLines": 11
        },
        {
          "coveredLines": 22,
          "lineCoverage": 0.2037037037037037,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Data Models/Enums.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 17,
              "executionCount": 0,
              "name": "TurnipTime.Pattern.description.getter : Swift.String",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 32,
              "executionCount": 0,
              "name": "TurnipTime.Pattern.counts.getter : Swift.Int",
              "executableLines": 14
            },
            {
              "coveredLines": 13,
              "lineCoverage": 0.9285714285714286,
              "lineNumber": 47,
              "executionCount": 10,
              "name": "TurnipTime.Pattern.unknownTransitionProbability.getter : Swift.Double",
              "executableLines": 14
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 62,
              "executionCount": 0,
              "name": "TurnipTime.Pattern.probabilityMatrix.getter : Swift.Dictionary<TurnipTime.Pattern, Swift.Double>",
              "executableLines": 37
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 105,
              "executionCount": 16,
              "name": "TurnipTime.Day.index(for: TurnipTime.Period) -> Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 109,
              "executionCount": 30,
              "name": "TurnipTime.Day.morningIndex.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 113,
              "executionCount": 15,
              "name": "TurnipTime.Day.afternoonIndex.getter : Swift.Int",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 117,
              "executionCount": 0,
              "name": "TurnipTime.Day.description.getter : Swift.String",
              "executableLines": 20
            }
          ],
          "name": "Enums.swift",
          "executableLines": 108
        },
        {
          "coveredLines": 7,
          "lineCoverage": 0.2692307692307692,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/BaseButton.swift",
          "functions": [
            {
              "coveredLines": 7,
              "lineCoverage": 1,
              "lineNumber": 13,
              "executionCount": 1,
              "name": "TurnipTime.BaseButton.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.BaseButton>",
              "executableLines": 7
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 21,
              "executionCount": 0,
              "name": "TurnipTime.BaseButton.(animateDown in _B2616DF6AFBFDB20071E8D794298B073)(sender: __C.UIButton) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "TurnipTime.BaseButton.(animateUp in _B2616DF6AFBFDB20071E8D794298B073)(sender: __C.UIButton) -> ()",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 29,
              "executionCount": 0,
              "name": "TurnipTime.BaseButton.(animate in _B2616DF6AFBFDB20071E8D794298B073)(_: __C.UIButton, transform: __C.CGAffineTransform) -> ()",
              "executableLines": 10
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "closure #1 () -> () in TurnipTime.BaseButton.(animate in _B2616DF6AFBFDB20071E8D794298B073)(_: __C.UIButton, transform: __C.CGAffineTransform) -> ()",
              "executableLines": 3
            }
          ],
          "name": "BaseButton.swift",
          "executableLines": 26
        },
        {
          "coveredLines": 0,
          "lineCoverage": 0,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Views/PriceEstimationChartView.swift",
          "functions": [
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 16,
              "executionCount": 0,
              "name": "variable initialization expression of TurnipTime.PriceEstimationChartView.(chartView in _3CD86D676819FF46E53406561A765B56) : Charts.LineChartView",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 20,
              "executionCount": 0,
              "name": "TurnipTime.PriceEstimationChartView.init() -> TurnipTime.PriceEstimationChartView",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "TurnipTime.PriceEstimationChartView.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.PriceEstimationChartView>",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 26,
              "executionCount": 0,
              "name": "implicit closure #1 () -> Swift.String in TurnipTime.PriceEstimationChartView.init(coder: __C.NSCoder) -> Swift.Optional<TurnipTime.PriceEstimationChartView>",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 31,
              "executionCount": 0,
              "name": "TurnipTime.PriceEstimationChartView.(setup in _3CD86D676819FF46E53406561A765B56)() -> ()",
              "executableLines": 4
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 36,
              "executionCount": 0,
              "name": "TurnipTime.PriceEstimationChartView.(setupViews in _3CD86D676819FF46E53406561A765B56)() -> ()",
              "executableLines": 31
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 68,
              "executionCount": 0,
              "name": "TurnipTime.PriceEstimationChartView.(setupConstraints in _3CD86D676819FF46E53406561A765B56)() -> ()",
              "executableLines": 6
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 77,
              "executionCount": 0,
              "name": "TurnipTime.PriceEstimationChartView.update(with: TurnipTime.Forecastable) -> ()",
              "executableLines": 13
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 80,
              "executionCount": 0,
              "name": "closure #1 (TurnipTime.PriceRange) -> Swift.Int in TurnipTime.PriceEstimationChartView.update(with: TurnipTime.Forecastable) -> ()",
              "executableLines": 1
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 85,
              "executionCount": 0,
              "name": "closure #2 (TurnipTime.PriceRange) -> Swift.Int in TurnipTime.PriceEstimationChartView.update(with: TurnipTime.Forecastable) -> ()",
              "executableLines": 1
            }
          ],
          "name": "PriceEstimationChartView.swift",
          "executableLines": 65
        },
        {
          "coveredLines": 3,
          "lineCoverage": 0.2,
          "path": "/Users/spacepyro/Projects/TurnipTime/TurnipTime/Extensions/Arithmetic+Extension.swift",
          "functions": [
            {
              "coveredLines": 3,
              "lineCoverage": 1,
              "lineNumber": 15,
              "executionCount": 278,
              "name": "(extension in TurnipTime):Swift.Double.ceiling.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 25,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Comparable.clamped(from: A, to: A) -> A",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 35,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Collection< where A.Element: Swift.Numeric>.total.getter : A.Element",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 43,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Collection< where A.Element: Swift.BinaryInteger>.average.getter : Swift.Double",
              "executableLines": 3
            },
            {
              "coveredLines": 0,
              "lineCoverage": 0,
              "lineNumber": 51,
              "executionCount": 0,
              "name": "(extension in TurnipTime):Swift.Collection< where A.Element: Swift.BinaryFloatingPoint>.average.getter : A.Element",
              "executableLines": 3
            }
          ],
          "name": "Arithmetic+Extension.swift",
          "executableLines": 15
        }
      ],
      "name": "TurnipTime.app",
      "executableLines": 1965,
      "buildProductPath": "/Users/spacepyro/Projects/TurnipTime/build/Build/Products/Debug-iphonesimulator/TurnipTime.app/TurnipTime"
    }
  ],
  "executableLines": 18699
}
